from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *
from header_music import *

from module_constants import *

####################################################################################################################
# Simple triggers are the alternative to old style triggers. They do not preserve state, and thus simpler to maintain.
#
#  Each simple trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Operation block: This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

simple_triggers = [

(ti_on_party_encounter,
[

]),

(ti_simulate_battle,
[

]),

(1.000000,
[
    (gt, "$auto_besiege_town", 0),
    (gt, "$g_player_besiege_town", 0),
    (ge, "$g_siege_method", 1),
    (store_current_hours, ":var_0"),
    (eq, "$g_siege_force_wait", 0),
    (ge, ":var_0", "$g_siege_method_finish_hours"),
    (neg|is_currently_night),
    (rest_for_hours, 0, 0, 0),

]),

(0.000000,
[
    (try_begin),
        (eq, "$bug_fix_version", 0),
        (disable_party, "p_test_scene"),
        (faction_set_note_available, "fac_player_faction", 0),
        (faction_set_note_available, "fac_no_faction", 0),
        (try_begin),
            (neg|check_quest_active, "qst_kidnapped_girl"),
            (party_remove_members, "p_main_party", "trp_kidnapped_girl", 1),
        (try_end),
        (try_for_range, ":var_0", "trp_knight_1_1", "trp_kingdom_2_pretender"),
            (try_begin),
                (troop_slot_eq, ":var_0", slot_troop_occupation, 0),
                (store_troop_faction, ":var_1", ":var_0"),
                (is_between, ":var_1", "fac_kingdom_1", "fac_kingdoms_end"),
                (troop_set_slot, ":var_0", slot_troop_occupation, 2),
            (try_end),
        (try_end),
        (call_script, "script_initialize_item_info"),
        (assign, "$bug_fix_version", 1),
    (try_end),
    (eq, "$g_player_is_captive", 1),
    (gt, "$capturer_party", 0),
    (party_is_active, "$capturer_party"),
    (party_relocate_near_party, "p_main_party", "$capturer_party", 0),

]),

(0.000000,
[
    (try_begin),
        (gt, "$g_last_rest_center", 0),
        (party_get_battle_opponent, ":var_0", "$g_last_rest_center"),
        (gt, ":var_0", 0),
        (store_faction_of_party, ":var_1", "$g_last_rest_center"),
        (store_relation, ":var_2", ":var_1", "fac_player_supporters_faction"),
        (store_faction_of_party, ":var_3", ":var_0"),
        (store_relation, ":var_4", ":var_3", "fac_player_supporters_faction"),
        (ge, ":var_2", 0),
        (neg|ge, ":var_4", 0),
        (start_encounter, "$g_last_rest_center"),
        (rest_for_hours, 0, 0, 0),
    (else_try),
        (store_current_hours, ":var_5"),
        (assign, ":var_6", 0),
        (try_begin),
            (neg|eq, "$g_check_autos_at_hour", 0),
            (ge, ":var_5", "$g_check_autos_at_hour"),
            (assign, ":var_6", 1),
            (assign, "$g_check_autos_at_hour", 0),
        (try_end),
        (this_or_next|eq, ":var_6", 1),
        (map_free),
        (try_begin),
            (ge, "$auto_menu", 1),
            (jump_to_menu, "$auto_menu"),
            (assign, "$auto_menu", -1),
        (else_try),
            (ge, "$auto_enter_town", 1),
            (start_encounter, "$auto_enter_town"),
        (else_try),
            (ge, "$auto_besiege_town", 1),
            (start_encounter, "$auto_besiege_town"),
        (else_try),
            (ge, "$g_camp_mode", 1),
            (assign, "$g_camp_mode", 0),
            (assign, "$g_infinite_camping", 0),
            (assign, "$g_player_icon_state", 0),
            (rest_for_hours, 0, 0, 0),
            (display_message, "@Breaking camp..."),
        (try_end),
    (try_end),

]),

(0.000000,
[
    (troop_slot_ge, "trp_notification_menu_types", slot_troop_relations_begin, 1),
    (troop_get_slot, ":var_0", "trp_notification_menu_types", slot_troop_relations_begin),
    (troop_get_slot, "$g_notification_menu_var1", "trp_notification_menu_var1", slot_troop_relations_begin),
    (troop_get_slot, "$g_notification_menu_var2", "trp_notification_menu_var2", slot_troop_relations_begin),
    (jump_to_menu, ":var_0"),
    (assign, ":var_1", 2),
    (try_for_range, ":var_2", 1, ":var_1"),
        (try_begin),
            (troop_slot_ge, "trp_notification_menu_types", ":var_2", 1),
            (val_add, ":var_1", 1),
        (try_end),
        (store_sub, ":var_3", ":var_2", 1),
        (troop_get_slot, ":var_4", "trp_notification_menu_types", ":var_2"),
        (troop_set_slot, "trp_notification_menu_types", ":var_3", ":var_4"),
        (troop_get_slot, ":var_4", "trp_notification_menu_var1", ":var_2"),
        (troop_set_slot, "trp_notification_menu_var1", ":var_3", ":var_4"),
        (troop_get_slot, ":var_4", "trp_notification_menu_var2", ":var_2"),
        (troop_set_slot, "trp_notification_menu_var2", ":var_3", ":var_4"),
    (try_end),

]),

(3.000000,
[
    (map_free),
    (call_script, "script_get_closest_center", "p_main_party"),
    (party_get_slot, ":var_0", reg0, slot_center_original_faction),
    (music_set_situation, 65536),
    (try_begin),
        (this_or_next|eq, ":var_0", "fac_kingdom_20"),
        (this_or_next|eq, ":var_0", "fac_kingdom_25"),
        (this_or_next|eq, ":var_0", "fac_kingdom_28"),
        (eq, ":var_0", "fac_kingdom_31"),
        (music_set_culture, 8),
    (else_try),
        (this_or_next|eq, ":var_0", "fac_kingdom_28"),
        (eq, ":var_0", "fac_kingdom_31"),
        (music_set_culture, 16),
    (else_try),
        (this_or_next|eq, ":var_0", "fac_kingdom_3"),
        (eq, ":var_0", "fac_kingdom_27"),
        (music_set_culture, 4),
    (else_try),
        (this_or_next|eq, ":var_0", "fac_kingdom_4"),
        (this_or_next|eq, ":var_0", "fac_kingdom_11"),
        (this_or_next|eq, ":var_0", "fac_kingdom_2"),
        (eq, ":var_0", "fac_kingdom_14"),
        (music_set_culture, 2),
    (else_try),
        (music_set_culture, 1),
    (try_end),

]),

(0.000000,
[
    (try_begin),
        (eq, "$caravan_escort_state", 1),
        (party_is_active, "$caravan_escort_party_id"),
        (store_distance_to_party_from_party, ":var_0", "$caravan_escort_destination_town", "$caravan_escort_party_id"),
        (neg|ge, ":var_0", 2),
        (store_distance_to_party_from_party, ":var_1", "p_main_party", "$caravan_escort_party_id"),
        (neg|ge, ":var_1", 5),
        (assign, "$talk_context", 2),
        (assign, "$g_encountered_party", "$caravan_escort_party_id"),
        (party_stack_get_troop_id, ":var_2", "$caravan_escort_party_id", 0),
        (party_stack_get_troop_dna, ":var_3", "$caravan_escort_party_id", 0),
        (start_map_conversation, ":var_2", ":var_3"),
    (try_end),
    (try_begin),
        (gt, "$g_reset_mission_participation", 1),
        (try_for_range, ":var_4", "trp_npc1", "trp_heroes_end"),
            (troop_set_slot, ":var_4", slot_troop_mission_participation, 0),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 0),
    (faction_slot_eq, "fac_player_supporters_faction", slot_faction_ai_state, 6),
    (store_current_hours, ":var_0"),
    (faction_get_slot, ":var_1", "fac_player_supporters_faction", slot_faction_ai_current_state_started),
    (val_sub, ":var_0", ":var_1"),
    (gt, ":var_0", 168),
    (call_script, "script_faction_conclude_feast", "fac_player_supporters_faction", 6),
    (display_message, "@Your kingdoms feast have concluded."),

]),

(4.000000,
[
    (try_for_range, ":var_0", "trp_knight_1_1_wife", "trp_heroes_end"),
        (neg|troop_slot_ge, ":var_0", slot_troop_prisoner_of_party, 0),
        (call_script, "script_get_kingdom_lady_social_determinants", ":var_0"),
        (assign, ":var_1", reg1),
        (troop_set_slot, ":var_0", slot_troop_cur_center, ":var_1"),
    (try_end),

]),

(2.000000,
[

]),

(24.000000,
[
    (try_begin),
        (neg|check_quest_active, "qst_visit_lady"),
        (neg|troop_slot_ge, "trp_player", slot_troop_prisoner_of_party, 1),
        (neg|troop_slot_ge, "trp_player", slot_troop_spouse, "trp_npc1"),
        (assign, ":var_0", -1),
        (assign, ":var_1", 120),
        (try_for_range, ":var_2", "trp_knight_1_1_wife", "trp_heroes_end"),
            (troop_slot_ge, ":var_2", slot_troop_met, 2),
            (neg|troop_slot_eq, ":var_2", slot_troop_met, 4),
            (troop_slot_eq, ":var_2", slot_troop_love_interest_3, 0),
            (troop_slot_eq, ":var_2", slot_troop_spouse, -1),
            (troop_get_slot, ":var_3", ":var_2", slot_troop_cur_center),
            (is_between, ":var_3", "p_town_1_1", "p_village_1_1"),
            (call_script, "script_troop_get_relation_with_troop", "trp_player", ":var_2"),
            (gt, reg0, 1),
            (store_current_hours, ":var_4"),
            (troop_get_slot, ":var_5", ":var_2", slot_troop_last_talk_time),
            (val_sub, ":var_4", ":var_5"),
            (gt, ":var_4", ":var_1"),
            (assign, ":var_1", ":var_4"),
            (assign, ":var_0", ":var_2"),
            (assign, ":var_6", ":var_3"),
        (try_end),
        (try_begin),
            (gt, ":var_0", 0),
            (call_script, "script_add_notification_menu", "mnu_notification_lady_requests_visit", ":var_0", ":var_6"),
        (try_end),
    (try_end),

]),

(1.000000,
[
    (ge, "$g_player_raiding_village", 1),
    (try_begin),
        (neg|eq, "$g_player_is_captive", 0),
        (assign, "$g_player_raiding_village", 0),
    (else_try),
        (map_free),
        (assign, "$g_player_raiding_village", 0),
    (else_try),
        (this_or_next|party_slot_eq, "$g_player_raiding_village", slot_village_state, 2),
        (party_slot_eq, "$g_player_raiding_village", slot_village_state, 4),
        (start_encounter, "$g_player_raiding_village"),
        (rest_for_hours, 0),
        (assign, "$g_player_raiding_village", 0),
        (assign, "$g_player_raid_complete", 1),
    (else_try),
        (party_slot_eq, "$g_player_raiding_village", slot_village_state, 1),
        (rest_for_hours, 3, 3, 1),
    (else_try),
        (rest_for_hours, 0, 0, 0),
        (assign, "$g_player_raiding_village", 0),
        (assign, "$g_player_raid_complete", 0),
    (try_end),

]),

(168.000000,
[
    (assign, "$g_presentation_lines_to_display_begin", 0),
    (assign, "$g_presentation_lines_to_display_end", 15),
    (assign, "$g_apply_budget_report_to_gold", 1),
    (store_current_hours, "$g_last_payday"),
    (try_begin),
        (eq, "$g_infinite_camping", 0),
        (start_presentation, "prsnt_budget_report"),
        (try_begin),
            (gt, "$g_player_debt_to_party_members", 5000),
            (call_script, "script_add_notification_menu", "mnu_dplmc_deserters", 20, 0),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (neg|gt, "$auto_menu", 0),
    (gt, "$players_kingdom", 0),
    (neg|eq, "$players_kingdom", "fac_player_supporters_faction"),
    (eq, "$player_has_homage", 0),
    (troop_get_slot, ":var_0", "trp_player", slot_troop_spouse),
    (assign, ":var_1", 0),
    (try_begin),
        (is_between, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (store_troop_faction, ":var_2", ":var_0"),
        (eq, ":var_2", "$players_kingdom"),
        (assign, ":var_1", 1),
    (try_end),
    (eq, ":var_1", 0),
    (store_current_day, ":var_3"),
    (gt, ":var_3", "$mercenary_service_next_renew_day"),
    (jump_to_menu, "mnu_oath_fulfilled"),

]),

(180.000000,
[
    (val_sub, "$g_player_luck", 1),
    (val_max, "$g_player_luck", 0),

]),

(72.000000,
[
    (assign, "$lady_flirtation_location", 0),

]),

(4.000000,
[
    (assign, "$g_time_to_spare", 1),
    (try_begin),
        (troop_slot_ge, "trp_player", slot_troop_spouse, "trp_npc1"),
        (assign, "$g_player_banner_granted", 1),
    (try_end),

]),

(24.000000,
[
    (eq, "$g_player_banner_granted", 1),
    (troop_slot_eq, "trp_player", slot_troop_banner_scene_prop, 0),
    (neg|gt, "$auto_menu", 0),
    (start_presentation, "prsnt_banner_selection"),

]),

(24.000000,
[
    (call_script, "script_get_player_party_morale_values"),
    (assign, ":var_0", reg0),
    (party_get_morale, ":var_1", "p_main_party"),
    (store_sub, ":var_2", ":var_0", ":var_1"),
    (store_div, ":var_3", ":var_2", 5),
    (store_mul, ":var_4", ":var_3", 5),
    (try_begin),
        (neg|eq, ":var_4", ":var_2"),
        (try_begin),
            (gt, ":var_2", 0),
            (val_add, ":var_3", 1),
        (else_try),
            (val_sub, ":var_3", 1),
        (try_end),
    (try_end),
    (val_add, ":var_1", ":var_3"),
    (party_set_morale, "p_main_party", ":var_1"),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (party_get_num_prisoner_stacks, ":var_1", ":var_0"),
        (try_for_range_backwards, ":var_2", 0, ":var_1"),
            (party_prisoner_stack_get_troop_id, ":var_3", ":var_0", ":var_2"),
            (neg|troop_is_hero, ":var_3"),
            (party_prisoner_stack_get_size, ":var_4", ":var_0", ":var_2"),
            (store_random_in_range, ":var_5", 0, 40),
            (val_mul, ":var_4", ":var_5"),
            (val_div, ":var_4", 100),
            (party_remove_prisoners, ":var_0", ":var_3", ":var_4"),
        (try_end),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_player_debt),
        (val_mul, ":var_1", 101),
        (val_div, ":var_1", 100),
        (troop_set_slot, ":var_0", slot_troop_player_debt, ":var_1"),
        (call_script, "script_calculate_hero_weekly_net_income_and_add_to_wealth", ":var_0"),
    (try_end),

]),

(24.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
        (ge, ":var_1", 1),
        (party_is_active, ":var_1"),
        (party_get_attached_to, ":var_2", ":var_1"),
        (is_between, ":var_2", "p_town_1_1", "p_salt_mine"),
        (party_slot_eq, ":var_2", slot_center_is_besieged_by, -1),
        (store_faction_of_party, ":var_3", ":var_1"),
        (try_begin),
            (this_or_next|eq, ":var_3", "fac_player_supporters_faction"),
            (eq, ":var_3", "$players_kingdom"),
            (assign, ":var_4", 1),
            (store_random_in_range, ":var_5", 0, 2),
            (val_add, ":var_4", ":var_5"),
        (else_try),
            (game_get_reduce_campaign_ai, ":var_6"),
            (try_begin),
                (eq, ":var_6", 0),
                (assign, ":var_4", 3),
            (else_try),
                (eq, ":var_6", 1),
                (assign, ":var_4", 2),
            (else_try),
                (eq, ":var_6", 2),
                (assign, ":var_4", 1),
            (try_end),
        (try_end),
        (try_begin),
            (faction_slot_eq, ":var_3", slot_faction_marshall, ":var_0"),
            (val_add, ":var_4", 1),
        (try_end),
        (try_for_range, ":var_7", 0, ":var_4"),
            (call_script, "script_hire_men_to_kingdom_hero_party", ":var_0"),
        (try_end),
    (try_end),
    (try_for_range, ":var_8", "p_town_1_1", "p_village_1_1"),
        (neg|party_slot_eq, ":var_8", slot_town_lord, "trp_player"),
        (party_set_slot, ":var_8", 700, 0),
    (try_end),
    (try_for_range, ":var_8", "p_town_1_1", "p_village_1_1"),
        (party_slot_ge, ":var_8", slot_town_lord, 0),
        (party_slot_eq, ":var_8", slot_center_is_besieged_by, -1),
        (party_slot_eq, ":var_8", 700, 0),
        (assign, ":var_9", 300),
        (try_begin),
            (is_between, ":var_8", "p_town_1_1", "p_castle_1_1"),
            (assign, ":var_9", 500),
        (try_end),
        (party_get_num_companions, ":var_10", ":var_8"),
        (try_begin),
            (neg|ge, ":var_10", ":var_9"),
            (call_script, "script_cf_reinforce_party", ":var_8"),
        (try_end),
    (try_end),

]),

(360.000000,
[

]),

(6.000000,
[
    (store_current_day, ":var_0"),
    (try_begin),
        (neg|eq, ":var_0", "$g_last_half_payment_check_day"),
        (assign, "$g_last_half_payment_check_day", ":var_0"),
        (try_begin),
            (eq, "$g_half_payment_checkpoint", 1),
            (val_add, "$g_cur_week_half_daily_wage_payments", 1),
        (try_end),
        (assign, "$g_half_payment_checkpoint", 1),
    (try_end),
    (assign, ":var_1", 0),
    (try_begin),
        (neg|map_free),
        (ge, "$g_last_rest_center", 0),
        (this_or_next|party_slot_eq, "$g_last_rest_center", slot_center_has_manor, 1),
        (is_between, "$g_last_rest_center", "p_town_1_1", "p_village_1_1"),
        (assign, ":var_1", 1),
    (try_end),
    (eq, ":var_1", 0),
    (assign, "$g_half_payment_checkpoint", 0),

]),

(2.000000,
[
    (store_current_hours, ":var_0"),
    (try_begin),
        (gt, ":var_0", 168),
        (call_script, "script_randomly_start_war_peace_new", 1),
    (try_end),
    (store_sub, ":var_1", "fac_kingdoms_end", 1),
    (try_begin),
        (ge, "$g_diplo_kingdom", ":var_1"),
        (try_begin),
            (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 0),
            (assign, "$g_diplo_kingdom", "fac_player_supporters_faction"),
        (else_try),
            (assign, "$g_diplo_kingdom", "fac_kingdom_1"),
        (try_end),
    (else_try),
        (val_add, "$g_diplo_kingdom", 1),
    (try_end),

]),

(24.000000,
[
    (try_begin),
        (call_script, "script_raf_create_incidents"),
        (assign, ":var_0", reg0),
        (assign, ":var_1", reg1),
        (gt, ":var_0", 0),
        (gt, ":var_1", 0),
        (store_faction_of_party, ":var_2", ":var_0"),
        (store_faction_of_party, ":var_3", ":var_1"),
        (neg|eq, ":var_0", ":var_1"),
        (neg|eq, ":var_2", ":var_3"),
        (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":var_3", ":var_2"),
        (eq, reg0, 0),
        (try_begin),
            (party_slot_eq, ":var_0", slot_center_original_faction, ":var_3"),
            (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_0", -1),
        (else_try),
            (party_slot_eq, ":var_0", slot_center_ex_faction, ":var_3"),
            (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_0", -1),
        (else_try),
            (set_fixed_point_multiplier, 1),
            (store_distance_to_party_from_party, ":var_4", ":var_0", ":var_1"),
            (neg|ge, ":var_4", 25),
            (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var_0", ":var_1"),
        (try_end),
    (try_end),
    (try_for_range, ":var_5", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_5", slot_faction_state, 0),
        (try_for_range, ":var_6", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (neg|eq, ":var_5", ":var_6"),
            (faction_slot_eq, ":var_6", slot_faction_state, 0),
            (store_add, ":var_7", ":var_6", 120),
            (val_sub, ":var_7", "fac_player_supporters_faction"),
            (faction_get_slot, ":var_8", ":var_5", ":var_7"),
            (try_begin),
                (ge, ":var_8", 1),
                (try_begin),
                    (eq, ":var_8", 1),
                    (call_script, "script_update_faction_notes", ":var_5"),
                    (neg|ge, ":var_5", ":var_6"),
                    (call_script, "script_add_notification_menu", "mnu_notification_truce_expired", ":var_5", ":var_6"),
                (try_end),
                (val_sub, ":var_8", 1),
                (faction_set_slot, ":var_5", ":var_7", ":var_8"),
            (try_end),
            (store_add, ":var_9", ":var_6", 170),
            (val_sub, ":var_9", "fac_player_supporters_faction"),
            (faction_get_slot, ":var_10", ":var_5", ":var_9"),
            (try_begin),
                (ge, ":var_10", 1),
                (try_begin),
                    (store_relation, ":var_11", ":var_5", ":var_6"),
                    (neg|ge, ":var_11", 0),
                    (faction_set_slot, ":var_5", ":var_9", 0),
                (else_try),
                    (eq, ":var_10", 1),
                    (call_script, "script_add_notification_menu", "mnu_notification_casus_belli_expired", ":var_5", ":var_6"),
                    (faction_set_slot, ":var_5", ":var_9", 0),
                (else_try),
                    (val_sub, ":var_10", 1),
                    (faction_set_slot, ":var_5", ":var_9", ":var_10"),
                (try_end),
            (try_end),
            (try_begin),
                (store_relation, ":var_11", ":var_5", ":var_6"),
                (neg|ge, ":var_11", 0),
                (store_add, ":var_12", ":var_6", 220),
                (val_sub, ":var_12", "fac_player_supporters_faction"),
                (faction_get_slot, ":var_13", ":var_5", ":var_12"),
                (val_add, ":var_13", 1),
                (faction_set_slot, ":var_5", ":var_12", ":var_13"),
            (try_end),
        (try_end),
        (call_script, "script_update_faction_notes", ":var_5"),
    (try_end),

]),

(48.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
        (gt, ":var_1", "p_salt_mine"),
        (party_is_active, ":var_1"),
        (store_skill_level, ":var_2", skl_trainer, ":var_0"),
        (val_add, ":var_2", 3),
        (store_mul, ":var_3", ":var_2", 500),
        (assign, ":var_4", 30),
        (try_begin),
            (store_troop_faction, ":var_5", ":var_0"),
            (neg|eq, ":var_5", "$players_kingdom"),
            (game_get_reduce_campaign_ai, ":var_6"),
            (try_begin),
                (eq, ":var_6", 0),
                (assign, ":var_4", 35),
                (val_mul, ":var_3", 3),
                (val_div, ":var_3", 2),
            (else_try),
                (eq, ":var_6", 2),
                (assign, ":var_4", 25),
                (val_div, ":var_3", 2),
            (try_end),
        (try_end),
        (store_random_in_range, ":var_7", 0, 100),
        (neg|gt, ":var_7", ":var_4"),
    (try_end),
    (try_for_range, ":var_8", "p_town_1_1", "p_village_1_1"),
        (party_get_slot, ":var_9", ":var_8", slot_town_lord),
        (neg|eq, ":var_9", "trp_player"),
        (assign, ":var_3", 3000),
        (assign, ":var_4", 30),
        (try_begin),
            (assign, ":var_10", -1),
            (try_begin),
                (ge, ":var_9", 0),
                (store_troop_faction, ":var_10", ":var_9"),
            (try_end),
            (neg|eq, ":var_10", "$players_kingdom"),
            (game_get_reduce_campaign_ai, ":var_6"),
            (try_begin),
                (eq, ":var_6", 0),
                (assign, ":var_4", 35),
                (val_mul, ":var_3", 3),
                (val_div, ":var_3", 2),
            (else_try),
                (eq, ":var_6", 2),
                (assign, ":var_4", 25),
                (val_div, ":var_3", 2),
            (try_end),
        (try_end),
        (store_random_in_range, ":var_7", 0, 100),
        (neg|gt, ":var_7", ":var_4"),
    (try_end),

]),

(24.000000,
[
    (call_script, "script_process_sieges"),

]),

(2.000000,
[
    (call_script, "script_process_village_raids"),

]),

(7.000000,
[
    (call_script, "script_init_ai_calculation"),
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (call_script, "script_calculate_troop_ai", ":var_0"),
    (try_end),

]),

(24.000000,
[
    (assign, "$men_are_pleased", 0),

]),

(24.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_intrigue_impatience),
        (val_sub, ":var_1", 5),
        (val_max, ":var_1", 0),
        (troop_set_slot, ":var_0", slot_troop_intrigue_impatience, ":var_1"),
    (try_end),
    (store_random_in_range, ":var_2", 1, 3),
    (val_min, ":var_2", 2),
    (try_for_range, ":var_3", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_get_slot, ":var_4", ":var_3", slot_troop_days_on_mission),
        (ge, ":var_4", 1),
        (val_sub, ":var_4", ":var_2"),
        (val_max, ":var_4", 0),
        (troop_set_slot, ":var_3", slot_troop_days_on_mission, ":var_4"),
    (try_end),
    (troop_get_slot, ":var_4", "trp_player", slot_troop_days_on_mission),
    (val_sub, ":var_4", ":var_2"),
    (val_max, ":var_4", 0),
    (troop_set_slot, "trp_player", slot_troop_days_on_mission, ":var_4"),

]),

(6.000000,
[
    (call_script, "script_cf_random_political_event"),
    (call_script, "script_cf_random_political_event"),

]),

(0.500000,
[
    (val_add, "$g_lord_long_term_count", 1),
    (try_begin),
        (neg|is_between, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin", "trp_knight_1_1_wife"),
        (assign, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin"),
    (try_end),
    (assign, ":var_0", "$g_lord_long_term_count"),
    (try_begin),
        (eq, ":var_0", "trp_kingdom_heroes_including_player_begin"),
        (assign, ":var_0", "trp_player"),
    (try_end),
    (try_begin),
        (eq, "$cheat_mode", 1),
        (str_store_troop_name, s9, ":var_0"),
        (display_message, "@{!}DEBUG -- Doing political calculations for {s9}"),
    (try_end),
    (try_begin),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (neg|eq, ":var_0", "trp_player"),
        (assign, ":var_1", -1),
        (try_for_range, ":var_2", "p_town_1_1", "p_salt_mine"),
            (party_slot_eq, ":var_2", slot_town_lord, ":var_0"),
            (assign, ":var_1", ":var_2"),
        (try_end),
        (try_begin),
            (eq, ":var_1", -1),
            (store_troop_faction, ":var_3", ":var_0"),
            (faction_get_slot, ":var_4", ":var_3", slot_faction_leader),
            (troop_get_slot, ":var_5", ":var_0", slot_lord_reputation_type),
            (try_begin),
                (neg|eq, ":var_4", ":var_0"),
                (try_begin),
                    (this_or_next|eq, ":var_5", 2),
                    (this_or_next|eq, ":var_5", 3),
                    (this_or_next|eq, ":var_5", 4),
                    (eq, ":var_5", 5),
                    (call_script, "script_troop_change_relation_with_troop", ":var_0", ":var_4", -4),
                    (val_add, "$total_no_fief_changes", -4),
                (else_try),
                    (eq, ":var_5", 1),
                    (call_script, "script_troop_change_relation_with_troop", ":var_0", ":var_4", -2),
                    (val_add, "$total_no_fief_changes", -2),
                (try_end),
            (try_end),
        (try_end),
    (try_end),
    (try_begin),
        (this_or_next|troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (eq, ":var_0", "trp_player"),
        (try_begin),
            (eq, ":var_0", "trp_player"),
            (assign, ":var_6", "$players_kingdom"),
        (else_try),
            (store_troop_faction, ":var_6", ":var_0"),
        (try_end),
        (faction_get_slot, ":var_4", ":var_6", slot_faction_leader),
        (neg|eq, ":var_0", ":var_4"),
        (neg|is_between, ":var_0", "trp_kingdom_1_lord", "trp_knight_1_1"),
        (neg|is_between, ":var_0", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
        (assign, ":var_7", 0),
        (try_for_range, ":var_8", "p_town_1_1", "p_village_1_1"),
            (store_faction_of_party, ":var_9", ":var_8"),
            (eq, ":var_9", ":var_6"),
            (val_add, ":var_7", 1),
        (try_end),
        (try_begin),
            (this_or_next|eq, ":var_6", "$players_kingdom"),
            (eq, ":var_6", "fac_player_supporters_faction"),
            (val_add, ":var_7", 1),
        (try_end),
        (call_script, "script_troop_get_relation_with_troop", ":var_0", ":var_4"),
        (this_or_next|neg|gt, reg0, -50),
        (eq, ":var_7", 0),
        (call_script, "script_cf_troop_can_intrigue", ":var_0", 0),
        (store_random_in_range, ":var_10", 0, 2),
        (try_begin),
            (this_or_next|eq, ":var_7", 0),
            (neg|eq, ":var_10", 0),
            (neg|eq, ":var_0", "trp_player"),
            (try_begin),
                (neg|eq, ":var_7", 0),
                (assign, "$g_give_advantage_to_original_faction", 1),
            (try_end),
            (store_troop_faction, ":var_11", ":var_0"),
            (call_script, "script_lord_find_alternative_faction", ":var_0"),
            (assign, ":var_12", reg0),
            (assign, "$g_give_advantage_to_original_faction", 0),
            (try_begin),
                (neg|eq, ":var_12", ":var_11"),
                (is_between, ":var_12", "fac_player_supporters_faction", "fac_kingdoms_end"),
                (str_store_troop_name_link, s1, ":var_0"),
                (str_store_faction_name_link, s2, ":var_12"),
                (str_store_faction_name_link, s3, ":var_6"),
                (call_script, "script_change_troop_faction", ":var_0", ":var_12"),
                (try_begin),
                    (ge, "$cheat_mode", 1),
                    (str_store_troop_name, s4, ":var_0"),
                    (display_message, "@{!}DEBUG - {s4} faction changed in defection"),
                (try_end),
                (troop_get_type, reg4, ":var_0"),
                (str_store_string, s4, "str_lord_defects_ordinary"),
                (display_log_message, "@{!}{s4}"),
                (try_begin),
                    (eq, "$cheat_mode", 1),
                    (this_or_next|eq, ":var_12", "$players_kingdom"),
                    (eq, ":var_6", "$players_kingdom"),
                    (call_script, "script_add_notification_menu", "mnu_notification_lord_defects", ":var_0", ":var_6"),
                (try_end),
            (try_end),
        (else_try),
            (neg|eq, ":var_4", "trp_player"),
            (call_script, "script_troop_get_relation_with_troop", ":var_0", ":var_4"),
            (neg|gt, reg0, -50),
            (call_script, "script_indict_lord_for_treason", ":var_0", ":var_6"),
        (try_end),
    (else_try),
        (neg|eq, ":var_0", "trp_player"),
        (store_troop_faction, ":var_6", ":var_0"),
        (faction_slot_ge, ":var_6", slot_faction_political_issue, 1),
        (neg|troop_slot_ge, ":var_0", slot_troop_stance_on_faction_issue, 1),
        (this_or_next|troop_slot_eq, ":var_0", slot_troop_stance_on_faction_issue, -1),
        (neg|eq, "$players_kingdom", ":var_6"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (call_script, "script_npc_decision_checklist_take_stand_on_issue", ":var_0"),
        (troop_set_slot, ":var_0", slot_troop_stance_on_faction_issue, reg0),
    (try_end),
    (try_for_range, ":var_13", "trp_npc1", "trp_knight_1_1_wife"),
        (call_script, "script_troop_get_relation_with_troop", ":var_0", ":var_13"),
        (neg|ge, reg0, 0),
        (assign, ":var_14", reg0),
        (store_sub, ":var_15", 0, ":var_14"),
        (store_random_in_range, ":var_16", 0, 300),
        (neg|ge, ":var_16", ":var_15"),
        (call_script, "script_troop_change_relation_with_troop", ":var_0", ":var_13", 1),
        (val_add, "$total_relation_changes_through_convergence", 1),
    (try_end),

]),

(3.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (try_begin),
            (this_or_next|party_slot_ge, ":var_0", slot_center_is_besieged_by, 0),
            (party_slot_eq, ":var_0", slot_village_state, 1),
            (party_slot_eq, ":var_0", slot_center_last_spotted_enemy, -1),
            (call_script, "script_process_alarms_new", ":var_0"),
        (else_try),
            (this_or_next|neg|party_slot_ge, ":var_0", slot_center_is_besieged_by, 0),
            (neg|party_slot_eq, ":var_0", slot_village_state, 1),
            (party_set_slot, ":var_0", slot_center_last_spotted_enemy, -1),
            (party_set_slot, ":var_0", slot_center_sortie_strength, 0),
            (party_set_slot, ":var_0", slot_center_sortie_enemy_strength, 0),
        (try_end),
    (try_end),

]),

(1.000000,
[
    (call_script, "script_allow_vassals_to_join_indoor_battle"),
    (call_script, "script_process_kingdom_parties_ai"),

]),

(3.000000,
[
    (store_current_hours, ":var_0"),
    (try_for_range, ":var_1", "p_town_1_1", "p_village_1_1"),
        (party_get_slot, ":var_2", ":var_1", slot_center_is_besieged_by),
        (gt, ":var_2", 0),
        (party_is_active, ":var_2"),
        (store_faction_of_party, ":var_3", ":var_2"),
        (party_slot_ge, ":var_1", slot_center_is_besieged_by, 1),
        (party_get_slot, ":var_4", ":var_1", slot_center_siege_begin_hours),
        (store_sub, ":var_4", ":var_0", ":var_4"),
        (assign, ":var_5", 0),
        (assign, ":var_6", 0),
        (assign, ":var_7", 0),
        (assign, ":var_8", 0),
        (try_for_range, ":var_9", "trp_npc1", "trp_knight_1_1_wife"),
            (troop_slot_eq, ":var_9", slot_troop_occupation, 2),
            (neg|troop_slot_ge, ":var_9", slot_troop_prisoner_of_party, 0),
            (troop_get_slot, ":var_10", ":var_9", slot_troop_leaded_party),
            (gt, ":var_10", 0),
            (party_is_active, ":var_10"),
            (store_troop_faction, ":var_11", ":var_9"),
            (eq, ":var_11", ":var_3"),
            (assign, ":var_12", 0),
            (try_begin),
                (party_slot_eq, ":var_10", slot_party_ai_state, 1),
                (party_slot_eq, ":var_10", slot_party_ai_object, ":var_1"),
                (assign, ":var_12", 1),
            (else_try),
                (party_slot_eq, ":var_10", slot_party_ai_state, 11),
                (party_get_slot, ":var_13", ":var_10", slot_party_ai_object),
                (gt, ":var_13", 0),
                (party_is_active, ":var_13"),
                (party_slot_eq, ":var_13", slot_party_ai_state, 1),
                (party_slot_eq, ":var_13", slot_party_ai_object, ":var_1"),
                (assign, ":var_12", 1),
            (try_end),
            (eq, ":var_12", 1),
            (party_get_battle_opponent, ":var_14", ":var_10"),
            (this_or_next|neg|ge, ":var_14", 0),
            (eq, ":var_14", ":var_1"),
            (try_begin),
                (faction_slot_eq, ":var_3", slot_faction_marshall, ":var_9"),
                (assign, ":var_8", 1),
            (try_end),
            (call_script, "script_party_calculate_regular_strength", ":var_10"),
            (val_add, ":var_7", reg0),
        (try_end),
        (try_begin),
            (gt, ":var_7", 0),
            (party_collect_attachments_to_party, ":var_1", "p_collective_enemy"),
            (call_script, "script_party_calculate_regular_strength", "p_collective_enemy"),
            (assign, ":var_15", reg0),
            (try_begin),
                (eq, "$auto_enter_town", ":var_1"),
                (eq, "$g_player_is_captive", 0),
                (call_script, "script_party_calculate_regular_strength", "p_main_party"),
                (val_add, ":var_15", reg0),
                (val_mul, ":var_7", 2),
            (try_end),
            (party_get_slot, ":var_16", ":var_1", slot_center_siege_hardness),
            (val_add, ":var_16", 100),
            (val_mul, ":var_15", ":var_16"),
            (val_div, ":var_15", 100),
            (val_max, ":var_15", 1),
            (try_begin),
                (eq, ":var_8", 1),
                (eq, ":var_3", "$players_kingdom"),
                (check_quest_active, "qst_follow_army"),
                (val_mul, ":var_7", 2),
            (try_end),
            (store_mul, ":var_17", ":var_7", 100),
            (val_div, ":var_17", ":var_15"),
            (store_sub, ":var_18", ":var_17", 240),
            (try_begin),
                (gt, ":var_18", -100),
                (store_div, ":var_19", ":var_4", 2),
                (val_add, ":var_18", ":var_19"),
            (try_end),
            (val_div, ":var_18", 5),
            (val_max, ":var_18", 0),
            (store_sub, ":var_20", 175, ":var_17"),
            (val_max, ":var_20", 0),
            (try_begin),
                (store_random_in_range, ":var_21", 0, 100),
                (neg|ge, ":var_21", ":var_18"),
                (gt, ":var_4", 24),
                (assign, ":var_5", 1),
            (else_try),
                (store_random_in_range, ":var_21", 0, 100),
                (neg|ge, ":var_21", ":var_20"),
                (assign, ":var_6", 1),
            (try_end),
        (else_try),
            (assign, ":var_6", 1),
        (try_end),
        (try_begin),
            (eq, ":var_5", 1),
            (call_script, "script_begin_assault_on_center", ":var_1"),
        (else_try),
            (eq, ":var_6", 1),
            (try_for_range, ":var_9", "trp_npc1", "trp_knight_1_1_wife"),
                (troop_slot_eq, ":var_9", slot_troop_occupation, 2),
                (neg|troop_slot_ge, ":var_9", slot_troop_prisoner_of_party, 0),
                (troop_get_slot, ":var_10", ":var_9", slot_troop_leaded_party),
                (gt, ":var_10", 0),
                (party_is_active, ":var_10"),
                (party_slot_eq, ":var_10", slot_party_ai_state, 1),
                (party_slot_eq, ":var_10", slot_party_ai_object, ":var_1"),
                (party_slot_eq, ":var_10", slot_party_ai_substate, 1),
                (call_script, "script_party_set_ai_state", ":var_10", -1, -1),
                (call_script, "script_party_set_ai_state", ":var_10", 1, ":var_1"),
                (party_set_slot, ":var_1", slot_center_siege_begin_hours, ":var_0"),
            (try_end),
        (try_end),
    (try_end),

]),

(0.500000,
[
    (call_script, "script_recalculate_ais"),
    (val_add, "$g_ai_kingdom", 1),
    (try_begin),
        (ge, "$g_ai_kingdom", "fac_kingdoms_end"),
        (assign, "$g_ai_kingdom", "fac_player_supporters_faction"),
    (try_end),

]),

(24.000000,
[
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (call_script, "script_faction_recalculate_strength", ":var_0"),
    (try_end),
    (try_for_range, ":var_1", "trp_npc1", "trp_knight_1_1_wife"),
        (store_troop_faction, ":var_2", ":var_1"),
        (neg|faction_slot_eq, ":var_2", slot_faction_ai_state, 0),
        (neg|faction_slot_eq, ":var_2", slot_faction_ai_state, 6),
        (neg|faction_slot_eq, ":var_2", slot_faction_ai_state, 1),
        (troop_get_slot, ":var_3", ":var_1", slot_troop_leaded_party),
        (party_is_active, ":var_3"),
        (val_add, "$total_vassal_days_on_campaign", 1),
        (party_slot_eq, ":var_3", slot_party_ai_state, 11),
        (val_add, "$total_vassal_days_responding_to_campaign", 1),
    (try_end),

]),

(36.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_heroes_end"),
        (troop_set_slot, ":var_0", slot_troop_does_not_give_quest, 0),
    (try_end),
    (try_for_range, ":var_0", "trp_village_1_elder", "trp_merchants_end"),
        (troop_set_slot, ":var_0", slot_troop_does_not_give_quest, 0),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (call_script, "script_refresh_village_merchant_inventory", ":var_0"),
    (try_end),

]),

(48.000000,
[
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (call_script, "script_refresh_village_defenders", ":var_0"),
        (party_set_slot, ":var_0", slot_village_player_can_not_steal_cattle, 0),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (neg|is_between, ":var_0", "p_castle_1_1", "p_village_1_1"),
        (party_get_slot, ":var_1", ":var_0", slot_town_trade_routes_end),
        (party_get_slot, ":var_2", ":var_0", slot_center_head_sheep),
        (party_get_slot, ":var_3", ":var_0", slot_center_acres_pasture),
        (val_max, ":var_3", 1),
        (store_mul, ":var_4", ":var_1", 400),
        (store_mul, ":var_5", ":var_2", 200),
        (val_add, ":var_4", ":var_5"),
        (val_div, ":var_4", ":var_3"),
        (store_random_in_range, ":var_6", 0, 100),
        (try_begin),
            (eq, ":var_6", 0),
            (val_min, ":var_1", 10),
        (else_try),
            (gt, ":var_4", 100),
            (val_mul, ":var_2", 90),
            (val_div, ":var_2", 100),
            (val_mul, ":var_1", 90),
            (val_div, ":var_1", 100),
        (else_try),
            (neg|ge, ":var_4", 30),
            (val_mul, ":var_1", 120),
            (val_div, ":var_1", 100),
            (val_add, ":var_1", 1),
            (val_mul, ":var_2", 120),
            (val_div, ":var_2", 100),
            (val_add, ":var_2", 1),
        (else_try),
            (neg|ge, ":var_4", 60),
            (val_mul, ":var_1", 110),
            (val_div, ":var_1", 100),
            (val_add, ":var_1", 1),
            (val_mul, ":var_2", 110),
            (val_div, ":var_2", 100),
            (val_add, ":var_2", 1),
        (else_try),
            (neg|ge, ":var_4", 100),
            (neg|ge, ":var_6", 50),
            (val_mul, ":var_1", 105),
            (val_div, ":var_1", 100),
            (try_begin),
                (neg|gt, ":var_1", 20),
                (val_add, ":var_1", 1),
            (try_end),
            (val_mul, ":var_2", 105),
            (val_div, ":var_2", 100),
            (try_begin),
                (neg|gt, ":var_2", 20),
                (val_add, ":var_2", 1),
            (try_end),
        (try_end),
        (party_set_slot, ":var_0", slot_town_trade_routes_end, ":var_1"),
        (party_set_slot, ":var_0", slot_center_head_sheep, ":var_2"),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (try_begin),
            (party_slot_ge, ":var_0", slot_town_lord, 0),
            (party_get_slot, ":var_1", ":var_0", slot_center_accumulated_rents),
            (assign, ":var_2", 800),
            (try_begin),
                (party_slot_eq, ":var_0", slot_party_type, 4),
                (try_begin),
                    (party_slot_eq, ":var_0", slot_village_state, 0),
                    (assign, ":var_2", 3000),
                (try_end),
            (else_try),
                (party_slot_eq, ":var_0", slot_party_type, 2),
                (assign, ":var_2", 6000),
            (else_try),
                (party_slot_eq, ":var_0", slot_party_type, 3),
                (assign, ":var_2", 10000),
            (try_end),
            (party_get_slot, ":var_3", ":var_0", slot_town_prosperity),
            (store_add, ":var_4", 35, ":var_3"),
            (val_mul, ":var_2", ":var_4"),
            (val_div, ":var_2", 135),
            (try_begin),
                (party_slot_eq, ":var_0", slot_town_lord, "trp_player"),
                (game_get_reduce_campaign_ai, ":var_5"),
                (try_begin),
                    (eq, ":var_5", 0),
                    (val_mul, ":var_2", 3),
                    (val_div, ":var_2", 4),
                (else_try),
                    (eq, ":var_5", 1),
                (else_try),
                    (eq, ":var_5", 2),
                    (val_mul, ":var_2", 4),
                    (val_div, ":var_2", 3),
                (try_end),
            (try_end),
            (party_get_slot, ":var_6", ":var_0", 400),
            (store_mul, ":var_7", ":var_2", ":var_6"),
            (val_div, ":var_7", 100),
            (val_add, ":var_1", ":var_7"),
            (val_add, ":var_1", ":var_2"),
            (party_set_slot, ":var_0", slot_center_accumulated_rents, ":var_1"),
        (try_end),
    (try_end),

]),

(32.000000,
[
    (eq, "$players_kingdom", 0),
    (neg|gt, "$g_invite_faction", 0),
    (eq, "$g_player_is_captive", 0),
    (troop_get_type, ":var_0", "trp_player"),
    (try_begin),
        (eq, ":var_0", 1),
        (eq, "$npc_with_sisterly_advice", 0),
        (try_for_range, ":var_1", "trp_npc1", "trp_kingdom_1_lord"),
            (main_party_has_troop, ":var_1"),
            (troop_get_type, ":var_2", ":var_1"),
            (eq, ":var_2", 1),
            (troop_slot_ge, "trp_player", slot_troop_renown, 150),
            (troop_slot_ge, ":var_1", slot_troop_woman_to_woman_string, 1),
            (assign, "$npc_with_sisterly_advice", ":var_1"),
        (try_end),
    (else_try),
        (store_random_in_range, ":var_3", "fac_kingdom_1", "fac_kingdoms_end"),
        (assign, ":var_4", 999999),
        (try_for_range, ":var_5", "p_town_1_1", "p_village_1_1"),
            (store_faction_of_party, ":var_6", ":var_5"),
            (eq, ":var_6", ":var_3"),
            (store_distance_to_party_from_party, ":var_7", "p_main_party", ":var_5"),
            (val_min, ":var_4", ":var_7"),
        (try_end),
        (neg|ge, ":var_4", 30),
        (store_relation, ":var_8", ":var_3", "fac_player_supporters_faction"),
        (faction_get_slot, ":var_9", ":var_3", slot_faction_leader),
        (call_script, "script_troop_get_player_relation", ":var_9"),
        (assign, ":var_10", reg0),
        (call_script, "script_get_number_of_hero_centers", "trp_player"),
        (assign, ":var_11", reg0),
        (eq, "$g_infinite_camping", 0),
        (assign, ":var_12", 0),
        (try_begin),
            (ge, "p_main_party", 0),
            (store_party_size_wo_prisoners, ":var_12", "p_main_party"),
        (try_end),
        (try_begin),
            (eq, ":var_11", 0),
            (troop_get_slot, ":var_13", "trp_player", slot_troop_renown),
            (ge, ":var_13", 160),
            (ge, ":var_8", 0),
            (ge, ":var_10", 0),
            (ge, ":var_12", 45),
            (store_random_in_range, ":var_14", 0, 100),
            (neg|ge, ":var_14", 50),
            (call_script, "script_get_poorest_village_of_faction", ":var_3"),
            (assign, "$g_invite_offered_center", reg0),
            (ge, "$g_invite_offered_center", 0),
            (assign, "$g_invite_faction", ":var_3"),
            (jump_to_menu, "mnu_invite_player_to_faction"),
        (else_try),
            (gt, ":var_11", 0),
            (neg|eq, "$players_oath_renounced_against_kingdom", ":var_3"),
            (ge, ":var_8", -40),
            (ge, ":var_10", -20),
            (ge, ":var_12", 30),
            (store_random_in_range, ":var_14", 0, 100),
            (neg|ge, ":var_14", 20),
            (assign, "$g_invite_faction", ":var_3"),
            (assign, "$g_invite_offered_center", -1),
            (jump_to_menu, "mnu_invite_player_to_faction_without_center"),
        (try_end),
    (try_end),

]),

(168.000000,
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_1", slot_faction_state, 0),
        (try_for_range, ":var_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (faction_slot_eq, ":var_2", slot_faction_state, 0),
            (neg|eq, ":var_2", ":var_1"),
            (store_relation, ":var_3", ":var_1", ":var_2"),
            (neg|ge, ":var_3", 0),
            (val_add, ":var_0", 1),
        (try_end),
        (try_for_range, ":var_4", "trp_npc1", "trp_knight_1_1_wife"),
            (store_troop_faction, ":var_5", ":var_4"),
            (eq, ":var_5", ":var_1"),
            (try_begin),
                (eq, ":var_0", 2),
                (store_random_in_range, ":var_6", 3000, 9999),
            (else_try),
                (gt, ":var_0", 3),
                (store_random_in_range, ":var_6", 7000, 9999),
            (else_try),
                (store_random_in_range, ":var_6", 0, 9999),
            (try_end),
            (troop_set_slot, ":var_4", slot_troop_temp_decision_seed, ":var_6"),
        (try_end),
    (try_end),

]),

(0.300000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_heroes_end"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
        (ge, ":var_1", 1),
        (party_is_active, ":var_1"),
        (party_get_attached_to, ":var_2", ":var_1"),
        (neg|ge, ":var_2", 1),
        (party_get_cur_town, ":var_3", ":var_1"),
        (is_between, ":var_3", "p_town_1_1", "p_salt_mine"),
        (call_script, "script_get_relation_between_parties", ":var_3", ":var_1"),
        (try_begin),
            (ge, reg0, 0),
            (party_attach_to_party, ":var_1", ":var_3"),
        (else_try),
            (party_set_ai_behavior, ":var_1", 0),
        (try_end),
        (try_begin),
            (this_or_next|party_slot_eq, ":var_3", slot_party_type, 3),
            (party_slot_eq, ":var_3", slot_party_type, 2),
            (store_faction_of_party, ":var_4", ":var_1"),
            (store_faction_of_party, ":var_5", ":var_3"),
            (eq, ":var_4", ":var_5"),
            (party_get_num_prisoner_stacks, ":var_6", ":var_1"),
            (gt, ":var_6", 0),
            (assign, "$g_move_heroes", 1),
            (call_script, "script_party_prisoners_add_party_prisoners", ":var_3", ":var_1"),
            (assign, "$g_move_heroes", 1),
            (call_script, "script_party_remove_all_prisoners", ":var_1"),
        (try_end),
    (try_end),
    (try_for_parties, ":var_7"),
        (gt, ":var_7", "p_spawn_points_end"),
        (party_get_template_id, ":var_8", ":var_7"),
        (ge, ":var_8", "pt_steppe_bandit_lair"),
        (store_distance_to_party_from_party, ":var_9", "p_main_party", ":var_7"),
        (neg|ge, ":var_9", 3),
        (party_set_flags, ":var_7", 256, 0),
        (party_set_flags, ":var_7", 16384, 1),
    (try_end),

]),

(48.000000,
[
    (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", "p_main_party", 50),
    (try_for_range, ":var_0", "p_town_1_1", "p_village_1_1"),
        (assign, ":var_1", 30),
        (try_begin),
            (party_slot_eq, ":var_0", slot_center_has_prisoner_tower, 1),
            (assign, ":var_1", 5),
        (try_end),
        (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":var_0", ":var_1"),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (neg|troop_slot_ge, ":var_0", slot_troop_prisoner_of_party, 0),
        (neg|troop_slot_ge, ":var_0", slot_troop_leaded_party, 1),
        (store_troop_faction, ":var_1", ":var_0"),
        (try_begin),
            (eq, ":var_1", "fac_outlaws"),
        (else_try),
            (try_begin),
                (eq, "$cheat_mode", 2),
                (str_store_troop_name, s4, ":var_0"),
                (display_message, "str_debug__attempting_to_spawn_s4"),
            (try_end),
            (call_script, "script_cf_select_random_walled_center_with_faction_and_owner_priority_no_siege", ":var_1", ":var_0"),
            (assign, ":var_2", reg0),
            (try_begin),
                (eq, "$cheat_mode", 2),
                (assign, reg7, ":var_2"),
                (str_store_party_name, s7, ":var_2"),
                (display_message, "str_debug__s0_is_spawning_around_party__s7"),
            (try_end),
            (call_script, "script_create_kingdom_hero_party", ":var_0", ":var_2"),
            (try_begin),
                (eq, "$g_there_is_no_avaliable_centers", 0),
                (party_attach_to_party, "$pout_party", ":var_2"),
            (try_end),
            (troop_get_slot, ":var_3", ":var_0", slot_troop_leaded_party),
            (call_script, "script_party_set_ai_state", ":var_3", 7, ":var_2"),
        (else_try),
            (neg|faction_slot_eq, ":var_1", slot_faction_state, 0),
            (try_begin),
                (is_between, ":var_0", "trp_kingdom_1_lord", "trp_knight_1_1"),
                (troop_set_slot, ":var_0", slot_troop_change_to_faction, "fac_commoners"),
            (else_try),
                (store_random_in_range, ":var_4", 0, 100),
                (neg|ge, ":var_4", 10),
                (call_script, "script_cf_get_random_active_faction_except_player_faction_and_faction", ":var_1"),
                (troop_set_slot, ":var_0", slot_troop_change_to_faction, reg0),
            (try_end),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (party_slot_eq, ":var_0", slot_village_state, 0),
        (store_random_in_range, ":var_1", 0, 100),
        (neg|ge, ":var_1", 60),
        (party_get_slot, ":var_2", ":var_0", slot_village_market_town),
        (party_slot_eq, ":var_2", slot_center_is_besieged_by, -1),
        (call_script, "script_do_villager_center_trade", ":var_0", ":var_2"),
        (assign, ":var_3", reg0),
        (call_script, "script_do_villager_center_trade", ":var_2", ":var_0"),
        (party_get_slot, ":var_4", ":var_2", slot_center_accumulated_tariffs),
        (party_get_slot, ":var_5", ":var_2", slot_town_prosperity),
        (assign, ":var_6", ":var_3"),
        (val_mul, ":var_6", ":var_5"),
        (val_div, ":var_6", 100),
        (val_div, ":var_6", 20),
        (val_add, ":var_4", ":var_6"),
        (party_set_slot, ":var_2", slot_center_accumulated_tariffs, ":var_4"),
        (party_get_slot, ":var_7", ":var_2", slot_party_food_store),
        (call_script, "script_center_get_food_store_limit", ":var_2"),
        (assign, ":var_8", reg0),
        (val_add, ":var_7", 1000),
        (val_min, ":var_7", ":var_8"),
        (party_set_slot, ":var_2", slot_party_food_store, ":var_7"),
    (try_end),

]),

(72.000000,
[
    (call_script, "script_update_trade_good_prices"),
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (party_get_slot, ":var_1", ":var_0", slot_town_player_odds),
        (try_begin),
            (gt, ":var_1", 1000),
            (val_mul, ":var_1", 95),
            (val_div, ":var_1", 100),
            (val_max, ":var_1", 1000),
        (else_try),
            (neg|ge, ":var_1", 1000),
            (val_mul, ":var_1", 105),
            (val_div, ":var_1", 100),
            (val_min, ":var_1", 1000),
        (try_end),
        (party_set_slot, ":var_0", slot_town_player_odds, ":var_1"),
    (try_end),

]),

(8.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 11),
        (party_is_in_any_town, ":var_0"),
        (store_faction_of_party, ":var_1", ":var_0"),
        (faction_get_slot, ":var_2", ":var_1", slot_faction_num_towns),
        (try_begin),
            (neg|gt, ":var_2", 0),
            (remove_party, ":var_0"),
        (else_try),
            (party_get_cur_town, ":var_3", ":var_0"),
            (store_random_in_range, ":var_4", 0, 100),
            (try_begin),
                (party_slot_eq, ":var_3", slot_town_lord, "trp_player"),
                (game_get_reduce_campaign_ai, ":var_5"),
                (try_begin),
                    (eq, ":var_5", 0),
                    (assign, ":var_6", 35),
                (else_try),
                    (eq, ":var_5", 1),
                    (assign, ":var_6", 45),
                (else_try),
                    (eq, ":var_5", 2),
                    (assign, ":var_6", 60),
                (try_end),
            (else_try),
                (assign, ":var_6", 45),
            (try_end),
            (neg|ge, ":var_4", ":var_6"),
            (assign, ":var_7", 1),
            (try_begin),
                (is_between, ":var_3", "p_town_1_1", "p_village_1_1"),
                (neg|party_slot_eq, ":var_3", slot_center_is_besieged_by, -1),
                (assign, ":var_7", 0),
            (try_end),
            (eq, ":var_7", 1),
            (assign, ":var_8", 0),
            (try_begin),
                (party_get_slot, ":var_9", ":var_0", slot_party_ai_state),
                (eq, ":var_9", 13),
                (party_get_slot, ":var_10", ":var_0", slot_party_ai_object),
                (eq, ":var_3", ":var_10"),
                (assign, ":var_8", 1),
            (try_end),
            (assign, ":var_11", -1),
            (try_begin),
                (eq, "$caravan_escort_party_id", ":var_0"),
                (neg|party_is_in_town, ":var_0", "$caravan_escort_destination_town"),
                (assign, ":var_11", "$caravan_escort_destination_town"),
            (else_try),
                (call_script, "script_cf_select_most_profitable_town_at_peace_with_faction_in_trade_route", ":var_3", ":var_1"),
                (assign, ":var_11", reg0),
            (try_end),
            (is_between, ":var_11", "p_town_1_1", "p_castle_1_1"),
            (neg|party_is_in_town, ":var_0", ":var_11"),
            (try_begin),
                (eq, ":var_8", 1),
                (str_store_party_name, s7, ":var_3"),
                (call_script, "script_do_merchant_town_trade", ":var_0", ":var_3"),
            (try_end),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_11"),
            (party_set_flags, ":var_0", 65536, 0),
            (party_set_slot, ":var_0", slot_party_ai_state, 13),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_11"),
        (try_end),
    (try_end),

]),

(8.000000,
[
    (eq, 0, 1),
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 15),
        (party_is_in_any_town, ":var_0"),
        (party_get_slot, ":var_1", ":var_0", slot_party_home_center),
        (party_get_cur_town, ":var_2", ":var_0"),
        (assign, ":var_3", 1),
        (try_begin),
            (is_between, ":var_2", "p_town_1_1", "p_village_1_1"),
            (neg|party_slot_eq, ":var_2", slot_center_is_besieged_by, -1),
            (assign, ":var_3", 0),
        (try_end),
        (eq, ":var_3", 1),
        (try_begin),
            (eq, ":var_2", ":var_1"),
            (call_script, "script_do_party_center_trade", ":var_0", ":var_1", 25),
            (store_faction_of_party, ":var_4", ":var_2"),
            (party_set_faction, ":var_0", ":var_4"),
            (party_get_slot, ":var_5", ":var_1", slot_village_market_town),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_5"),
            (party_set_slot, ":var_0", slot_party_ai_state, 13),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_5"),
        (else_try),
            (try_begin),
                (party_get_slot, ":var_6", ":var_0", slot_party_ai_object),
                (eq, ":var_2", ":var_6"),
                (call_script, "script_do_party_center_trade", ":var_0", ":var_6", 25),
                (assign, ":var_7", reg0),
                (party_get_slot, ":var_8", ":var_6", slot_center_accumulated_tariffs),
                (party_get_slot, ":var_9", ":var_6", slot_town_prosperity),
                (assign, ":var_10", ":var_7"),
                (val_mul, ":var_10", ":var_9"),
                (val_div, ":var_10", 100),
                (val_div, ":var_10", 20),
                (val_add, ":var_8", ":var_10"),
                (try_begin),
                    (ge, "$cheat_mode", 3),
                    (assign, reg4, ":var_10"),
                    (str_store_party_name, s4, ":var_6"),
                    (assign, reg5, ":var_8"),
                    (display_message, "@{!}New tariffs at {s4} = {reg4}, total = {reg5}"),
                (try_end),
                (party_set_slot, ":var_6", slot_center_accumulated_tariffs, ":var_8"),
                (party_get_slot, ":var_11", ":var_6", slot_party_food_store),
                (call_script, "script_center_get_food_store_limit", ":var_6"),
                (assign, ":var_12", reg0),
                (val_add, ":var_11", 1000),
                (val_min, ":var_11", ":var_12"),
                (party_set_slot, ":var_6", slot_party_food_store, ":var_11"),
                (try_begin),
                    (store_random_in_range, ":var_13", 0, 100),
                    (neg|ge, ":var_13", 35),
                    (call_script, "script_change_center_prosperity", ":var_1", 1),
                    (val_add, "$newglob_total_prosperity_from_village_trade", 1),
                (try_end),
            (try_end),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_1"),
            (party_set_slot, ":var_0", slot_party_ai_state, 13),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_1"),
        (try_end),
    (try_end),

]),

(2.000000,
[
    (try_for_range, ":var_0", "p_castle_1_1", "p_village_1_1"),
        (party_slot_eq, ":var_0", slot_center_is_besieged_by, -1),
        (party_get_slot, ":var_1", ":var_0", slot_party_food_store),
        (val_add, ":var_1", 100),
        (call_script, "script_center_get_food_store_limit", ":var_0"),
        (assign, ":var_2", reg0),
        (val_min, ":var_1", ":var_2"),
        (party_set_slot, ":var_0", slot_party_food_store, ":var_1"),
    (try_end),

]),

(0.200000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_heroes_end"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
        (gt, ":var_1", 0),
        (try_begin),
            (party_is_active, ":var_1"),
            (try_begin),
                (get_party_ai_current_behavior, ":var_2", ":var_1"),
                (eq, ":var_2", 5),
                (assign, ":var_3", 1),
                (try_begin),
                    (this_or_next|troop_slot_eq, ":var_0", slot_lord_reputation_type, 7),
                    (troop_slot_eq, ":var_0", slot_lord_reputation_type, 1),
                    (get_party_ai_current_object, ":var_4", ":var_1"),
                    (party_is_active, ":var_4"),
                    (party_get_battle_opponent, ":var_5", ":var_4"),
                    (party_is_active, ":var_5"),
                    (assign, ":var_3", 0),
                (try_end),
                (eq, ":var_3", 1),
                (store_faction_of_party, ":var_6", ":var_1"),
                (party_get_slot, ":var_7", ":var_1", slot_party_commander_party),
                (faction_get_slot, ":var_8", ":var_6", slot_faction_marshall),
                (neg|eq, ":var_8", ":var_0"),
                (assign, ":var_3", 1),
                (try_begin),
                    (ge, ":var_8", 0),
                    (troop_get_slot, ":var_9", ":var_8", slot_troop_leaded_party),
                    (party_is_active, ":var_9", 0),
                    (eq, ":var_7", ":var_9"),
                    (assign, ":var_3", 0),
                (try_end),
                (eq, ":var_3", 1),
                (assign, ":var_10", 0),
                (try_for_range, ":var_11", "p_town_1_1", "p_village_1_1"),
                    (eq, ":var_10", 0),
                    (party_slot_eq, ":var_11", slot_center_is_besieged_by, -1),
                    (store_faction_of_party, ":var_12", ":var_11"),
                    (store_relation, ":var_13", ":var_12", ":var_6"),
                    (gt, ":var_13", 0),
                    (store_distance_to_party_from_party, ":var_14", ":var_1", ":var_11"),
                    (neg|ge, ":var_14", 20),
                    (party_get_position, pos1, ":var_1"),
                    (party_get_position, pos2, ":var_11"),
                    (neg|position_is_behind_position, 2, 1),
                    (call_script, "script_party_set_ai_state", ":var_1", 14, ":var_11"),
                    (assign, ":var_10", 1),
                (try_end),
            (try_end),
        (else_try),
            (troop_set_slot, ":var_0", slot_troop_leaded_party, -1),
        (try_end),
    (try_end),

]),

(0.500000,
[
    (store_current_hours, ":var_0"),
    (store_mod, ":var_1", ":var_0", 11),
    (store_sub, ":var_2", ":var_0", 5),
    (party_get_num_companions, ":var_3", "p_main_party"),
    (party_get_num_prisoners, ":var_4", "p_main_party"),
    (val_add, ":var_3", ":var_4"),
    (convert_to_fixed_point, ":var_3"),
    (store_sqrt, ":var_5", ":var_3"),
    (convert_from_fixed_point, ":var_5"),
    (try_begin),
        (eq, ":var_1", 0),
        (try_for_range, ":var_6", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (faction_get_slot, ":var_7", ":var_6", slot_faction_player_alarm),
            (val_sub, ":var_7", 1),
            (val_max, ":var_7", 0),
            (faction_set_slot, ":var_6", slot_faction_player_alarm, ":var_7"),
        (try_end),
    (try_end),
    (eq, "$g_player_is_captive", 0),
    (try_for_range, ":var_8", "p_town_1_1", "p_salt_mine"),
        (store_faction_of_party, ":var_6", ":var_8"),
        (store_relation, ":var_9", ":var_6", "fac_player_supporters_faction"),
        (neg|ge, ":var_9", 0),
        (store_distance_to_party_from_party, ":var_10", "p_main_party", ":var_8"),
        (neg|ge, ":var_10", 5),
        (store_mul, ":var_11", ":var_10", ":var_10"),
        (store_sub, ":var_12", 20, ":var_11"),
        (store_sub, ":var_13", 20, ":var_9"),
        (store_mul, ":var_14", ":var_12", ":var_13"),
        (val_mul, ":var_14", ":var_5"),
        (store_div, ":var_15", ":var_14", 10),
        (store_random_in_range, ":var_16", 0, 1000),
        (neg|ge, ":var_16", ":var_15"),
        (faction_get_slot, ":var_7", ":var_6", slot_faction_player_alarm),
        (val_add, ":var_7", 1),
        (val_min, ":var_7", 100),
        (faction_set_slot, ":var_6", slot_faction_player_alarm, ":var_7"),
        (try_begin),
            (neg|party_slot_ge, ":var_8", slot_center_last_player_alarm_hour, ":var_2"),
            (str_store_party_name_link, s1, ":var_8"),
            (display_message, "@Your party is spotted by {s1}."),
            (party_set_slot, ":var_8", slot_center_last_player_alarm_hour, ":var_0"),
        (try_end),
    (try_end),

]),

(14.000000,
[
    (eq, "$g_player_is_captive", 0),
    (party_get_num_companion_stacks, ":var_0", "p_main_party"),
    (assign, ":var_1", 0),
    (try_for_range, ":var_2", 0, ":var_0"),
        (party_stack_get_size, ":var_3", "p_main_party", ":var_2"),
        (val_add, ":var_1", ":var_3"),
    (try_end),
    (val_div, ":var_1", 3),
    (try_begin),
        (eq, ":var_1", 0),
        (val_add, ":var_1", 1),
    (try_end),
    (try_begin),
        (assign, ":var_4", 0),
        (try_for_range, ":var_5", "itm_smoked_fish", "itm_siege_supply"),
            (call_script, "script_cf_player_has_item_without_modifier", ":var_5", 41),
            (val_add, ":var_4", 1),
        (try_end),
    (try_end),
    (assign, ":var_6", ":var_1"),
    (assign, ":var_7", 0),
    (try_for_range, ":var_8", 0, ":var_6"),
        (assign, ":var_9", 0),
        (try_for_range, ":var_10", "itm_smoked_fish", "itm_siege_supply"),
            (item_set_slot, ":var_10", slot_item_is_checked, 0),
            (call_script, "script_cf_player_has_item_without_modifier", ":var_10", 41),
            (val_add, ":var_9", 1),
        (try_end),
        (try_begin),
            (gt, ":var_9", 0),
            (store_random_in_range, ":var_11", 0, ":var_9"),
            (call_script, "script_consume_food", ":var_11"),
        (else_try),
            (eq, ":var_7", 0),
            (display_message, "@Party has nothing to eat!", 0xFF0000),
            (call_script, "script_change_player_party_morale", -3),
            (assign, ":var_7", 1),
            (try_begin),
                (call_script, "script_party_count_fit_regulars", "p_main_party"),
                (gt, reg0, 0),
                (call_script, "script_objectionable_action", 2, "str_men_hungry"),
            (try_end),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (troop_get_inventory_capacity, ":var_0", "trp_player"),
    (try_for_range, ":var_1", 0, ":var_0"),
        (troop_get_inventory_slot, ":var_2", "trp_player", ":var_1"),
        (this_or_next|eq, ":var_2", "itm_cattle_meat"),
        (this_or_next|eq, ":var_2", "itm_chicken"),
        (eq, ":var_2", "itm_pork"),
        (troop_get_inventory_slot_modifier, ":var_3", "trp_player", ":var_1"),
        (try_begin),
            (ge, ":var_3", 37),
            (neg|ge, ":var_3", 41),
            (val_add, ":var_3", 1),
            (troop_set_inventory_slot_modifier, "trp_player", ":var_1", ":var_3"),
        (else_try),
            (neg|ge, ":var_3", 37),
            (troop_set_inventory_slot_modifier, "trp_player", ":var_1", 37),
        (try_end),
    (try_end),

]),

(72.000000,
[

]),

(0.000000,
[
    (troop_get_inventory_slot, ":var_0", "trp_player", 8),
    (assign, ":var_1", -1),
    (try_begin),
        (eq, "$g_player_icon_state", 0),
        (try_begin),
            (ge, ":var_0", 0),
            (assign, ":var_1", "icon_player_horseman"),
        (else_try),
            (assign, ":var_1", "icon_player"),
        (try_end),
    (else_try),
        (eq, "$g_player_icon_state", 1),
        (assign, ":var_1", "icon_camp"),
    (else_try),
        (eq, "$g_player_icon_state", 2),
        (assign, ":var_1", "icon_ship"),
    (try_end),
    (try_begin),
        (call_script, "script_cf_is_party_on_water", "p_main_party"),
        (assign, ":var_1", "icon_longship"),
    (try_end),
    (neg|eq, ":var_1", "$g_player_party_icon"),
    (assign, "$g_player_party_icon", ":var_1"),
    (party_set_icon, "p_main_party", ":var_1"),

]),

(4.000000,
[
    (store_troop_gold, ":var_0", "trp_player"),
    (store_div, ":var_1", ":var_0", 100),
    (troop_get_inventory_capacity, ":var_2", "trp_player"),
    (try_for_range, ":var_3", 0, ":var_2"),
        (troop_get_inventory_slot, ":var_4", "trp_player", ":var_3"),
        (ge, ":var_4", 0),
        (try_begin),
            (is_between, ":var_4", "itm_spice", "itm_siege_supply"),
            (store_item_value, ":var_5", ":var_4"),
            (val_add, ":var_0", ":var_5"),
        (try_end),
    (try_end),
    (val_clamp, ":var_1", 0, 100),
    (party_set_bandit_attraction, "p_main_party", ":var_1"),

]),

(3.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_village_1_1"),
        (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, 2),
        (store_faction_of_party, ":var_1", ":var_0"),
        (eq, ":var_1", "fac_player_supporters_faction"),
        (call_script, "script_activate_player_faction", "trp_player"),
    (try_end),

]),

(6.000000,
[
    (gt, "$g_prisoner_recruit_troop_id", 0),
    (gt, "$g_prisoner_recruit_size", 0),
    (gt, "$g_prisoner_recruit_last_time", 0),
    (is_currently_night),
    (try_begin),
        (store_skill_level, ":var_0", "skl_leadership", "trp_player"),
        (val_mul, ":var_0", 5),
        (store_sub, ":var_1", 66, ":var_0"),
        (gt, ":var_1", 0),
        (assign, ":var_2", 0),
        (try_for_range, ":var_3", 0, "$g_prisoner_recruit_size"),
            (store_random_in_range, ":var_4", 0, 100),
            (neg|ge, ":var_4", ":var_1"),
            (val_add, ":var_2", 1),
        (try_end),
        (party_remove_members, "p_main_party", "$g_prisoner_recruit_troop_id", ":var_2"),
        (assign, ":var_2", reg0),
        (gt, ":var_2", 0),
        (try_begin),
            (gt, ":var_2", 1),
            (assign, reg2, 1),
        (else_try),
            (assign, reg2, 0),
        (try_end),
        (assign, reg1, ":var_2"),
        (str_store_troop_name_by_count, s1, "$g_prisoner_recruit_troop_id", ":var_2"),
        (display_log_message, "@{reg1} {s1} {reg2?have:has} escaped from your party during the night."),
    (try_end),
    (assign, "$g_prisoner_recruit_troop_id", 0),
    (assign, "$g_prisoner_recruit_size", 0),

]),

(24.000000,
[
    (neg|eq, "$g_ransom_offer_rejected", 1),
    (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", "p_main_party"),
    (eq, reg0, 0),
    (assign, ":var_0", "p_village_1_1"),
    (try_for_range, ":var_1", "p_town_1_1", ":var_0"),
        (party_slot_eq, ":var_1", slot_town_lord, "trp_player"),
        (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", ":var_1"),
        (eq, reg0, 1),
        (assign, ":var_0", 0),
    (try_end),

]),

(72.000000,
[
    (assign, "$g_ransom_offer_rejected", 0),
    (try_for_range, ":var_0", "p_town_1_1", "p_village_1_1"),
        (party_get_slot, ":var_1", ":var_0", slot_town_lord),
        (gt, ":var_1", 0),
        (party_get_num_prisoner_stacks, ":var_2", ":var_0"),
        (try_for_range_backwards, ":var_3", 0, ":var_2"),
            (party_prisoner_stack_get_troop_id, ":var_4", ":var_0", ":var_3"),
            (troop_is_hero, ":var_4"),
            (troop_slot_eq, ":var_4", slot_troop_occupation, 2),
            (store_random_in_range, ":var_5", 0, 100),
            (try_begin),
                (neg|gt, ":var_5", 10),
                (call_script, "script_calculate_ransom_amount_for_troop", ":var_4"),
                (assign, ":var_6", reg0),
                (troop_get_slot, ":var_7", ":var_1", slot_troop_wealth),
                (val_add, ":var_7", ":var_6"),
                (troop_set_slot, ":var_1", slot_troop_wealth, ":var_7"),
                (party_remove_prisoners, ":var_0", ":var_4", 1),
                (call_script, "script_remove_troop_from_prison", ":var_4"),
                (store_troop_faction, ":var_8", ":var_1"),
                (store_troop_faction, ":var_9", ":var_4"),
                (str_store_troop_name, s1, ":var_4"),
                (str_store_faction_name, s2, ":var_8"),
                (str_store_faction_name, s3, ":var_9"),
                (store_relation, ":var_10", ":var_9", "$players_kingdom"),
                (try_begin),
                    (this_or_next|neg|ge, ":var_10", 0),
                    (eq, ":var_9", "$players_kingdom"),
                    (display_log_message, "@{s1} of {s3} has been released from captivity."),
                (try_end),
            (try_end),
        (try_end),
    (try_end),

]),

(72.000000,
[
    (call_script, "script_update_mercenary_units_of_towns"),
    (call_script, "script_update_ransom_brokers"),
    (call_script, "script_update_tavern_travellers"),
    (call_script, "script_update_tavern_minstrels"),
    (call_script, "script_update_booksellers"),
    (call_script, "script_update_villages_infested_by_bandits"),
    (call_script, "script_update_manor_infested_by_bandits"),
    (eq, "$use_feudal_lance", 0),
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (call_script, "script_update_volunteer_troops_in_village", ":var_0"),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_0"),
    (try_end),
    (try_for_range, ":var_0", "p_town_1_1", "p_castle_1_1"),
        (call_script, "script_update_volunteer_troops_in_village", ":var_0"),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_0"),
    (try_end),
    (try_for_range, ":var_0", "p_castle_1_1", "p_village_1_1"),
        (call_script, "script_update_volunteer_troops_in_village", ":var_0"),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_0"),
    (try_end),

]),

(24.000000,
[
    (call_script, "script_update_other_taverngoers"),

]),

(36.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (this_or_next|party_slot_eq, ":var_0", slot_party_type, 3),
        (party_slot_eq, ":var_0", slot_party_type, 4),
        (call_script, "script_center_remove_walker_type_from_walkers", ":var_0", 1),
        (call_script, "script_center_remove_walker_type_from_walkers", ":var_0", 2),
        (store_random_in_range, ":var_1", 0, 100),
        (try_begin),
            (neg|ge, ":var_1", 70),
            (neg|party_slot_ge, ":var_0", slot_town_prosperity, 60),
            (call_script, "script_cf_center_get_free_walker", ":var_0"),
            (call_script, "script_center_set_walker_to_type", ":var_0", reg0, 1),
        (try_end),
    (try_end),

]),

(12.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (party_get_slot, ":var_1", ":var_0", slot_center_current_improvement),
        (gt, ":var_1", 0),
        (party_get_slot, ":var_2", ":var_0", slot_center_improvement_end_hour),
        (store_current_hours, ":var_3"),
        (ge, ":var_3", ":var_2"),
        (party_set_slot, ":var_0", ":var_1", 1),
        (party_set_slot, ":var_0", slot_center_current_improvement, 0),
        (call_script, "script_get_improvement_details", ":var_1"),
        (try_begin),
            (party_slot_eq, ":var_0", slot_town_lord, "trp_player"),
            (str_store_party_name, s4, ":var_0"),
            (display_log_message, "@Building of {s0} in {s4} has been completed."),
        (try_end),
        (try_begin),
            (is_between, ":var_0", "p_village_1_1", "p_salt_mine"),
            (eq, ":var_1", 131),
            (call_script, "script_change_center_prosperity", ":var_0", 5),
        (try_end),
        (try_begin),
            (is_between, ":var_0", "p_village_1_1", "p_salt_mine"),
            (eq, ":var_1", 248),
            (party_get_slot, ":var_4", ":var_0", slot_village_bound_center),
            (party_get_position, pos0, ":var_4"),
            (map_get_land_position_around_position, 1, pos0, pos3),
            (party_set_position, "p_village_player", pos1),
            (party_set_flags, "p_village_player", 256, 0),
            (str_store_party_name, s10, ":var_4"),
            (str_store_string, s11, "@{s10} Village"),
            (party_set_name, "p_village_player", 11),
            (party_set_flags, "p_village_player", 256, 0),
            (party_set_slot, "p_village_player", slot_village_bound_center, ":var_4"),
            (party_get_slot, ":var_5", ":var_0", slot_town_center),
            (party_set_slot, "p_village_player", slot_town_center, ":var_5"),
            (party_get_position, pos0, ":var_0"),
            (map_get_land_position_around_position, 1, pos0, pos3),
            (party_set_position, "p_castle_player", pos1),
            (party_set_flags, "p_castle_player", 256, 0),
            (str_store_party_name, s10, ":var_0"),
            (str_store_string, s11, "@{s10} Castle"),
            (party_set_name, "p_castle_player", 11),
            (party_set_slot, ":var_0", slot_village_bound_center, "p_castle_player"),
            (party_set_slot, "p_castle_player", slot_party_type, 2),
            (party_set_slot, "p_village_player", slot_party_type, 4),
            (call_script, "script_give_center_to_faction_aux", "p_castle_player", "$players_kingdom"),
            (call_script, "script_give_center_to_faction_aux", "p_village_player", "$players_kingdom"),
            (try_begin),
                (call_script, "script_cf_get_random_lord_except_king_with_faction", "$players_kingdom"),
                (call_script, "script_give_center_to_lord", "p_village_player", reg0, 0),
            (else_try),
                (call_script, "script_give_center_to_lord", "p_village_player", "trp_player", 0),
            (try_end),
            (call_script, "script_give_center_to_lord", "p_castle_player", "trp_player", 0),
            (call_script, "script_give_center_to_lord", ":var_0", "trp_player", 0),
            (call_script, "script_update_village_market_towns"),
            (party_get_slot, ":var_6", ":var_0", slot_center_culture),
            (party_get_slot, ":var_7", ":var_0", slot_center_original_faction),
            (party_set_slot, "p_castle_player", slot_center_culture, ":var_6"),
            (party_set_slot, "p_castle_player", slot_center_original_faction, ":var_7"),
            (party_set_slot, "p_village_player", slot_center_culture, ":var_6"),
            (party_set_slot, "p_village_player", slot_center_original_faction, ":var_7"),
            (party_get_current_terrain, ":var_8", "p_castle_player"),
            (try_begin),
                (this_or_next|eq, ":var_8", 5),
                (eq, ":var_8", 13),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier1"),
                (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (else_try),
                (this_or_next|eq, ":var_8", 4),
                (eq, ":var_8", 12),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_1"),
                (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (else_try),
                (eq, "fac_kingdom_10", "$players_kingdom"),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier1"),
                (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 1),
            (else_try),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier1"),
                (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (try_end),
            (party_set_slot, "p_village_player", slot_town_center, "scn_village_eastern"),
            (party_set_slot, "p_castle_player", slot_town_castle, "scn_interior_moscow"),
            (party_set_slot, "p_castle_player", slot_town_prison, "scn_castle_prison_eastern"),
            (party_set_slot, "p_village_player", slot_center_original_faction, "$players_kingdom"),
            (party_set_slot, "p_castle_player", slot_center_original_faction, "$players_kingdom"),
            (party_set_slot, "p_village_player", slot_center_accumulated_rents, 0),
            (party_set_slot, "p_village_player", slot_center_accumulated_tariffs, 0),
            (party_set_slot, "p_castle_player", slot_center_accumulated_rents, 0),
            (party_set_slot, "p_castle_player", slot_center_accumulated_tariffs, 0),
            (try_begin),
                (party_clear, "p_castle_player"),
                (remove_member_from_party, "trp_temp_lord", "p_castle_player"),
            (try_end),
        (try_end),
        (party_get_current_terrain, ":var_8", "p_castle_player"),
        (try_begin),
            (this_or_next|eq, ":var_8", 5),
            (eq, ":var_8", 13),
            (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (try_begin),
                (eq, ":var_1", 252),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier2"),
            (else_try),
                (eq, ":var_1", 253),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_desert_tier3"),
            (try_end),
        (else_try),
            (this_or_next|eq, ":var_8", 4),
            (eq, ":var_8", 12),
            (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (try_begin),
                (eq, ":var_1", 252),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_2"),
            (else_try),
                (eq, ":var_1", 253),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_castle_player_nordic_3"),
            (try_end),
        (else_try),
            (eq, "fac_kingdom_10", "$players_kingdom"),
            (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 1),
            (try_begin),
                (eq, ":var_1", 252),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier2"),
            (else_try),
                (eq, ":var_1", 253),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_french_tier3"),
            (try_end),
        (else_try),
            (party_set_slot, "p_castle_player", slot_center_siege_with_belfry, 0),
            (try_begin),
                (eq, ":var_1", 252),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier2"),
            (else_try),
                (eq, ":var_1", 253),
                (party_set_slot, "p_castle_player", slot_town_center, "scn_player_castle_central_europe_tier3"),
            (try_end),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "p_town_1_1", "p_castle_1_1"),
        (party_get_slot, ":var_2", ":var_1", slot_town_has_tournament),
        (try_begin),
            (eq, ":var_2", 1),
            (call_script, "script_fill_tournament_participants_troop", ":var_1", 0),
            (call_script, "script_sort_tournament_participant_troops"),
            (call_script, "script_get_num_tournament_participants"),
            (store_sub, ":var_3", reg0, 1),
            (call_script, "script_remove_tournament_participants_randomly", ":var_3"),
            (call_script, "script_sort_tournament_participant_troops"),
            (troop_get_slot, ":var_4", "trp_tournament_participants", slot_troop_relations_begin),
            (try_begin),
                (is_between, ":var_4", "trp_npc1", "trp_knight_1_1_wife"),
                (str_store_troop_name_link, s1, ":var_4"),
                (str_store_party_name_link, s2, ":var_1"),
                (display_message, "@{s1} has won the tournament at {s2}."),
                (call_script, "script_change_troop_renown", ":var_4", 20),
            (try_end),
        (try_end),
        (val_sub, ":var_2", 1),
        (val_max, ":var_2", 0),
        (party_set_slot, ":var_1", slot_town_has_tournament, ":var_2"),
        (try_begin),
            (gt, ":var_2", 0),
            (val_add, ":var_0", 1),
        (try_end),
    (try_end),
    (try_for_range, ":var_1", "p_town_1_1", "p_salt_mine"),
        (this_or_next|party_slot_eq, ":var_1", slot_party_type, 3),
        (party_slot_eq, ":var_1", slot_party_type, 4),
        (party_get_slot, ":var_5", ":var_1", slot_center_has_bandits),
        (try_begin),
            (neg|gt, ":var_5", 0),
            (assign, ":var_6", 0),
            (try_begin),
                (check_quest_active, "qst_deal_with_night_bandits"),
                (quest_slot_eq, "qst_deal_with_night_bandits", 1, ":var_1"),
                (neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
                (assign, ":var_6", 1),
            (else_try),
                (store_random_in_range, ":var_7", 0, 100),
                (neg|ge, ":var_7", 3),
                (assign, ":var_6", 1),
            (try_end),
            (try_begin),
                (eq, ":var_6", 1),
                (store_random_in_range, ":var_7", 0, 3),
                (try_begin),
                    (eq, ":var_7", 0),
                    (assign, ":var_8", "trp_bandit"),
                (else_try),
                    (eq, ":var_7", 1),
                    (assign, ":var_8", "trp_mountain_bandit"),
                (else_try),
                    (assign, ":var_8", "trp_forest_bandit"),
                (try_end),
                (party_set_slot, ":var_1", slot_center_has_bandits, ":var_8"),
                (try_begin),
                    (eq, "$cheat_mode", 1),
                    (str_store_party_name, s1, ":var_1"),
                    (display_message, "@{!}{s1} is infested by bandits (at night)."),
                (try_end),
            (try_end),
        (else_try),
            (try_begin),
                (assign, ":var_9", 40),
                (try_begin),
                    (party_slot_eq, ":var_1", slot_party_type, 3),
                    (assign, ":var_9", 20),
                (try_end),
                (store_random_in_range, ":var_7", 0, 100),
                (neg|ge, ":var_7", ":var_9"),
                (party_set_slot, ":var_1", slot_center_has_bandits, 0),
                (try_begin),
                    (eq, "$cheat_mode", 1),
                    (str_store_party_name, s1, ":var_1"),
                    (display_message, "@{s1} is no longer infested by bandits (at night)."),
                (try_end),
            (try_end),
        (try_end),
    (try_end),
    (try_for_range, ":var_10", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_10", slot_faction_ai_state, 6),
        (faction_get_slot, ":var_11", ":var_10", slot_faction_ai_object),
        (is_between, ":var_11", "p_town_1_1", "p_castle_1_1"),
        (party_slot_ge, ":var_11", slot_town_has_tournament, 1),
        (party_set_slot, ":var_11", slot_town_has_tournament, 2),
    (try_end),
    (try_begin),
        (neg|ge, ":var_0", 3),
        (store_random_in_range, ":var_7", 0, 100),
        (neg|ge, ":var_7", 5),
        (store_random_in_range, ":var_12", "p_town_1_1", "p_castle_1_1"),
        (store_random_in_range, ":var_13", 12, 15),
        (party_set_slot, ":var_12", slot_town_has_tournament, ":var_13"),
        (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var_12"),
            (display_message, "@{!}{s1} is holding a tournament."),
        (try_end),
    (try_end),

]),

(3.000000,
[
    (assign, "$g_player_tournament_placement", 0),

]),

(8.000000,
[

]),

(1.000000,
[
    (neg|map_free),
    (is_currently_night),
    (is_between, "$g_last_rest_center", "p_town_1_1", "p_salt_mine"),
    (neg|party_slot_eq, "$g_last_rest_center", slot_town_lord, "trp_player"),
    (store_faction_of_party, ":var_0", "$g_last_rest_center"),
    (neg|eq, ":var_0", "fac_player_supporters_faction"),
    (store_current_hours, ":var_1"),
    (ge, ":var_1", "$g_last_rest_payment_until"),
    (store_add, "$g_last_rest_payment_until", ":var_1", 24),
    (store_troop_gold, ":var_2", "trp_player"),
    (party_get_num_companions, ":var_3", "p_main_party"),
    (store_div, ":var_4", ":var_3", 4),
    (val_add, ":var_4", 1),
    (try_begin),
        (ge, ":var_2", ":var_4"),
        (display_message, "@You pay for accommodation."),
        (troop_remove_gold, "trp_player", ":var_4"),
    (else_try),
        (gt, ":var_2", 0),
        (troop_remove_gold, "trp_player", ":var_2"),
    (try_end),

]),

(36.000000,
[
    (call_script, "script_spawn_bandits"),
    (call_script, "script_spawn_balts"),
    (call_script, "script_spawn_peasant_rebels"),
    (try_begin),
        (call_script, "script_cf_spawn_crusaders_and_jihadists"),
    (try_end),

]),

(24.000000,
[
    (call_script, "script_update_party_creation_random_limits"),

]),

(24.000000,
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_set_slot, ":var_1", slot_faction_number_of_parties, 0),
    (try_end),
    (try_for_parties, ":var_2"),
        (store_faction_of_party, ":var_3", ":var_2"),
        (is_between, ":var_3", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (this_or_next|is_between, ":var_2", "p_town_1_1", "p_salt_mine"),
        (party_slot_eq, ":var_2", slot_party_type, 13),
        (faction_get_slot, ":var_4", ":var_3", slot_faction_number_of_parties),
        (val_add, ":var_4", 1),
        (faction_set_slot, ":var_3", slot_faction_number_of_parties, ":var_4"),
    (try_end),
    (try_for_range, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_1", slot_faction_state, 0),
        (val_add, ":var_0", 1),
        (faction_slot_eq, ":var_1", slot_faction_number_of_parties, 0),
        (assign, ":var_5", 0),
        (try_begin),
            (eq, ":var_1", "fac_player_supporters_faction"),
            (try_begin),
                (neg|gt, "$supported_pretender", 0),
                (faction_set_slot, ":var_1", slot_faction_state, 2),
                (assign, ":var_5", 1),
            (try_end),
        (else_try),
            (neg|eq, "$players_kingdom", ":var_1"),
            (faction_set_slot, ":var_1", slot_faction_state, 1),
            (try_for_parties, ":var_2"),
                (store_faction_of_party, ":var_3", ":var_2"),
                (eq, ":var_3", ":var_1"),
                (party_get_slot, ":var_6", ":var_2", slot_party_home_center),
                (store_faction_of_party, ":var_7", ":var_6"),
                (party_set_faction, ":var_2", ":var_7"),
            (try_end),
            (assign, ":var_8", -1),
            (try_for_range, ":var_9", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
                (troop_slot_eq, ":var_9", slot_troop_original_faction, ":var_1"),
                (assign, ":var_8", ":var_9"),
            (try_end),
            (try_begin),
                (is_between, ":var_8", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
                (neg|eq, ":var_8", "$supported_pretender"),
                (troop_set_slot, ":var_8", slot_troop_cur_center, 0),
            (try_end),
            (assign, ":var_5", 1),
            (try_begin),
                (eq, "$players_oath_renounced_against_kingdom", ":var_1"),
                (assign, "$players_oath_renounced_against_kingdom", 0),
                (assign, "$players_oath_renounced_given_center", 0),
                (assign, "$players_oath_renounced_begin_time", 0),
                (call_script, "script_add_notification_menu", "mnu_notification_oath_renounced_faction_defeated", ":var_1", 0),
            (try_end),
            (call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":var_1", 0),
        (try_end),
        (try_begin),
            (eq, ":var_5", 1),
            (val_sub, ":var_0", 1),
        (try_end),
        (try_for_range, ":var_10", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (call_script, "script_update_faction_notes", ":var_10"),
        (try_end),
    (try_end),
    (try_begin),
        (eq, ":var_0", 1),
        (eq, "$g_one_faction_left_notification_shown", 0),
        (assign, "$g_one_faction_left_notification_shown", 1),
        (try_for_range, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (faction_slot_eq, ":var_1", slot_faction_state, 0),
            (call_script, "script_add_notification_menu", "mnu_notification_one_faction_left", ":var_1", 0),
        (try_end),
    (try_end),

]),

(3.000000,
[
    (try_begin),
        (is_between, "$g_player_court", "p_town_1_1", "p_salt_mine"),
        (party_slot_eq, "$g_player_court", slot_village_infested_by_bandits, "trp_peasant_woman"),
        (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (else_try),
        (is_between, "$g_player_court", "p_town_1_1", "p_salt_mine"),
        (store_faction_of_party, ":var_0", "$g_player_court"),
        (neg|eq, ":var_0", "fac_player_supporters_faction"),
        (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (else_try),
        (neg|ge, "$g_player_court", "p_town_1_1"),
        (this_or_next|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
        (gt, "$g_player_minister", 0),
        (assign, ":var_1", 0),
        (try_for_range, ":var_2", "p_town_1_1", "p_village_1_1"),
            (eq, ":var_1", 0),
            (store_faction_of_party, ":var_0", ":var_2"),
            (eq, ":var_0", "fac_player_supporters_faction"),
            (assign, ":var_1", ":var_2"),
        (try_end),
        (ge, ":var_1", 1),
        (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (try_end),
    (try_for_parties, ":var_3"),
        (gt, ":var_3", "p_spawn_points_end"),
        (party_get_template_id, ":var_4", ":var_3"),
        (is_between, ":var_4", "pt_steppe_bandits", "pt_deserters"),
        (party_template_get_slot, ":var_5", ":var_4", slot_party_template_lair_party),
        (try_begin),
            (gt, ":var_5", "p_spawn_points_end"),
            (store_distance_to_party_from_party, ":var_6", ":var_3", ":var_5"),
            (gt, ":var_6", 30),
            (neg|ge, ":var_6", 35),
            (party_set_ai_behavior, ":var_3", 6),
            (party_get_position, pos5, ":var_5"),
            (party_set_ai_target_position, ":var_3", pos5),
        (else_try),
            (get_party_ai_behavior, ":var_7", ":var_3"),
            (eq, ":var_7", 6),
            (try_begin),
                (gt, ":var_5", "p_spawn_points_end"),
                (store_distance_to_party_from_party, ":var_6", ":var_3", ":var_5"),
                (neg|ge, ":var_6", 3),
                (party_set_ai_behavior, ":var_3", 3),
                (party_template_get_slot, ":var_8", ":var_4", slot_party_template_lair_spawnpoint),
                (party_set_ai_object, ":var_3", ":var_8"),
                (party_set_ai_patrol_radius, ":var_3", 45),
            (else_try),
                (neg|ge, ":var_5", "p_spawn_points_end"),
                (party_set_ai_behavior, ":var_3", 3),
                (party_template_get_slot, ":var_8", ":var_4", slot_party_template_lair_spawnpoint),
                (party_set_ai_object, ":var_3", ":var_8"),
                (party_set_ai_patrol_radius, ":var_3", 45),
            (try_end),
        (try_end),
    (try_end),
    (try_begin),
        (troop_get_slot, ":var_9", "trp_player", slot_troop_betrothed),
        (gt, ":var_9", 0),
        (neg|check_quest_active, "qst_wed_betrothed"),
        (neg|check_quest_active, "qst_wed_betrothed_female"),
        (str_store_troop_name, s5, ":var_9"),
        (display_message, "@Betrothal to {s5} expires"),
        (troop_set_slot, "trp_player", slot_troop_betrothed, -1),
        (troop_set_slot, ":var_9", slot_troop_betrothed, -1),
    (try_end),

]),

(168.000000,
[
    (troop_get_slot, ":var_0", "trp_player", slot_troop_renown),
    (store_div, ":var_1", ":var_0", 200),
    (val_sub, ":var_0", ":var_1"),
    (troop_set_slot, "trp_player", slot_troop_renown, ":var_0"),

]),

(1.000000,
[
    (neg|map_free),
    (gt, "$g_player_reading_book", 0),
    (player_has_item, "$g_player_reading_book"),
    (store_attribute_level, ":var_0", "trp_player", ca_intelligence),
    (item_get_slot, ":var_1", "$g_player_reading_book", slot_item_intelligence_requirement),
    (neg|gt, ":var_1", ":var_0"),
    (item_get_slot, ":var_2", "$g_player_reading_book", slot_item_book_reading_progress),
    (item_get_slot, ":var_3", "$g_player_reading_book", slot_item_book_read),
    (eq, ":var_3", 0),
    (val_add, ":var_2", 7),
    (item_set_slot, "$g_player_reading_book", slot_item_book_reading_progress, ":var_2"),
    (ge, ":var_2", 1000),
    (item_set_slot, "$g_player_reading_book", slot_item_book_read, 1),
    (str_store_item_name, s1, "$g_player_reading_book"),
    (str_clear, s2),
    (try_begin),
        (eq, "$g_player_reading_book", "itm_book_tactics"),
        (troop_raise_skill, "trp_player", "skl_tactics", 1),
        (str_store_string, s2, "@ Your tactics skill has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_persuasion"),
        (troop_raise_skill, "trp_player", "skl_persuasion", 1),
        (str_store_string, s2, "@ Your persuasion skill has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_leadership"),
        (troop_raise_skill, "trp_player", "skl_leadership", 1),
        (str_store_string, s2, "@ Your leadership skill has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_intelligence"),
        (troop_raise_attribute, "trp_player", ca_intelligence, 1),
        (str_store_string, s2, "@ Your intelligence has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_trade"),
        (troop_raise_skill, "trp_player", "skl_trade", 1),
        (str_store_string, s2, "@ Your trade skill has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_weapon_mastery"),
        (troop_raise_skill, "trp_player", "skl_weapon_master", 1),
        (str_store_string, s2, "@ Your weapon master skill has increased by 1."),
    (else_try),
        (eq, "$g_player_reading_book", "itm_book_engineering"),
        (troop_raise_skill, "trp_player", "skl_engineer", 1),
        (str_store_string, s2, "@ Your engineer skill has increased by 1."),
    (try_end),
    (unlock_achievement, 37),
    (try_begin),
        (eq, "$g_infinite_camping", 0),
        (dialog_box, "@You have finished reading {s1}.{s2}", "@Book Read"),
    (try_end),
    (assign, "$g_player_reading_book", 0),

]),

(12.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 17),
        (store_distance_to_party_from_party, ":var_1", ":var_0", "p_main_party"),
        (try_begin),
            (gt, ":var_1", 30),
            (remove_party, ":var_0"),
            (try_begin),
                (check_quest_active, "qst_move_cattle_herd"),
                (neg|check_quest_concluded, "qst_move_cattle_herd"),
                (quest_slot_eq, "qst_move_cattle_herd", 8, ":var_0"),
                (call_script, "script_fail_quest", "qst_move_cattle_herd"),
            (try_end),
        (else_try),
            (gt, ":var_1", 10),
            (party_set_slot, ":var_0", slot_town_lord, 0),
            (party_set_ai_behavior, ":var_0", 0),
        (try_end),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (party_slot_eq, ":var_0", slot_town_lord, "trp_player"),
        (party_slot_eq, ":var_0", slot_center_has_school, 1),
        (party_get_slot, ":var_1", ":var_0", slot_center_player_relation),
        (val_add, ":var_1", 1),
        (val_min, ":var_1", 100),
        (party_set_slot, ":var_0", slot_center_player_relation, ":var_1"),
    (try_end),

]),

(24.000000,
[
    (try_for_range, ":var_0", 0, "qst_quests_end"),
        (try_begin),
            (check_quest_active, ":var_0"),
            (try_begin),
                (neg|check_quest_concluded, ":var_0"),
                (quest_slot_ge, ":var_0", 23, 1),
                (quest_get_slot, ":var_1", ":var_0", 23),
                (val_sub, ":var_1", 1),
                (try_begin),
                    (eq, ":var_1", 0),
                    (call_script, "script_abort_quest", ":var_0", 1),
                (else_try),
                    (quest_set_slot, ":var_0", 23, ":var_1"),
                    (assign, reg0, ":var_1"),
                    (add_quest_note_from_sreg, ":var_0", 7, "@You have {reg0} days to finish this quest.", 0),
                (try_end),
            (try_end),
        (else_try),
            (quest_slot_ge, ":var_0", 25, 1),
            (quest_get_slot, ":var_2", ":var_0", 25),
            (val_sub, ":var_2", 1),
            (quest_set_slot, ":var_0", 25, ":var_2"),
        (try_end),
    (try_end),

]),

(2.000000,
[
    (eq, "$g_infinite_camping", 0),
    (eq, "$g_player_crusading", 0),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (eq, "$g_player_is_captive", 0),
    (try_begin),
        (check_quest_active, "qst_report_to_army"),
        (faction_slot_eq, "$players_kingdom", slot_faction_marshall, -1),
        (call_script, "script_abort_quest", "qst_report_to_army", 0),
    (try_end),
    (faction_get_slot, ":var_0", "$players_kingdom", slot_faction_ai_object),
    (neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
    (neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 6),
    (assign, ":var_1", 1),
    (try_begin),
        (this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 5),
        (this_or_next|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
        (faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 3),
        (neg|is_between, ":var_0", "p_town_1_1", "p_village_1_1"),
        (assign, ":var_1", 0),
    (try_end),
    (eq, ":var_1", 1),
    (assign, ":var_2", 0),
    (try_for_range, ":var_3", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neg|eq, ":var_3", "$players_kingdom"),
        (store_relation, ":var_4", ":var_3", "$players_kingdom"),
        (neg|ge, ":var_4", 0),
        (assign, ":var_2", 1),
    (try_end),
    (eq, ":var_2", 1),
    (neg|check_quest_active, "qst_report_to_army"),
    (neg|check_quest_active, "qst_follow_army"),
    (neg|quest_slot_ge, "qst_report_to_army", 25, 1),
    (faction_get_slot, ":var_5", "$players_kingdom", slot_faction_marshall),
    (gt, ":var_5", 0),
    (troop_get_slot, ":var_6", ":var_5", slot_troop_leaded_party),
    (gt, ":var_6", 0),
    (party_is_active, ":var_6"),
    (store_distance_to_party_from_party, ":var_7", ":var_6", "p_main_party"),
    (neg|gt, ":var_7", 96),
    (assign, ":var_8", 1),
    (try_for_range, ":var_9", "qst_deliver_message", "qst_follow_army"),
        (check_quest_active, ":var_9"),
        (quest_slot_eq, ":var_9", 6, ":var_5"),
        (assign, ":var_8", 0),
    (try_end),
    (eq, ":var_8", 1),
    (try_for_range, ":var_9", "qst_destroy_bandit_lair", "qst_blank_quest_2"),
        (check_quest_active, ":var_9"),
        (quest_slot_eq, ":var_9", 6, ":var_5"),
        (assign, ":var_8", 0),
    (try_end),
    (eq, ":var_8", 1),
    (try_for_range, ":var_9", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
        (check_quest_active, ":var_9"),
        (assign, ":var_8", 0),
    (try_end),
    (eq, ":var_8", 1),
    (store_character_level, ":var_10", "trp_player"),
    (ge, ":var_10", 8),
    (assign, ":var_11", 2),
    (try_for_range, ":var_12", "p_town_1_1", "p_salt_mine"),
        (party_slot_eq, ":var_12", slot_town_lord, "trp_player"),
        (try_begin),
            (party_slot_eq, ":var_12", slot_party_type, 3),
            (val_add, ":var_11", 3),
        (else_try),
            (party_slot_eq, ":var_12", slot_party_type, 2),
            (val_add, ":var_11", 1),
        (else_try),
            (val_add, ":var_11", 1),
        (try_end),
    (try_end),
    (val_mul, ":var_11", 4),
    (val_min, ":var_11", 60),
    (quest_set_slot, "qst_report_to_army", 6, ":var_5"),
    (quest_set_slot, "qst_report_to_army", 2, ":var_5"),
    (quest_set_slot, "qst_report_to_army", 10, ":var_11"),
    (quest_set_slot, "qst_report_to_army", 23, 4),
    (quest_set_slot, "qst_report_to_army", 24, 15),
    (jump_to_menu, "mnu_kingdom_army_quest_report_to_army"),

]),

(3.000000,
[
    (assign, "$g_random_army_quest", -1),
    (check_quest_active, "qst_follow_army", 1),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (neg|faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 0),
    (faction_get_slot, ":var_0", "$players_kingdom", slot_faction_marshall),
    (neg|eq, ":var_0", "trp_player"),
    (gt, ":var_0", 0),
    (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
    (gt, ":var_1", 0),
    (party_is_active, ":var_1"),
    (store_distance_to_party_from_party, ":var_2", ":var_1", "p_main_party"),
    (try_begin),
        (neg|ge, ":var_2", 15),
        (assign, "$g_player_follow_army_warnings", 0),
        (store_current_hours, ":var_3"),
        (faction_get_slot, ":var_4", "$players_kingdom", slot_faction_ai_last_offensive_time),
        (store_sub, ":var_5", ":var_3", ":var_4"),
        (assign, ":var_6", -1),
        (try_begin),
            (store_random_in_range, ":var_7", 0, 100),
            (neg|ge, ":var_7", 30),
            (troop_slot_eq, ":var_0", slot_troop_does_not_give_quest, 0),
            (try_for_range, ":var_8", 0, 20),
                (eq, ":var_6", -1),
                (store_random_in_range, ":var_9", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
                (neg|quest_slot_ge, ":var_9", 25, 1),
                (try_begin),
                    (eq, ":var_9", "qst_deliver_cattle_to_army"),
                    (try_begin),
                        (faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
                        (gt, ":var_5", 120),
                        (store_random_in_range, ":var_10", 5, 10),
                        (assign, ":var_6", "qst_deliver_cattle_to_army"),
                        (quest_set_slot, ":var_6", 10, ":var_10"),
                        (quest_set_slot, ":var_6", 23, 10),
                        (quest_set_slot, ":var_6", 24, 30),
                    (try_end),
                (else_try),
                    (eq, ":var_9", "qst_join_siege_with_army"),
                    (eq, 1, 0),
                    (try_begin),
                        (faction_slot_eq, "$players_kingdom", slot_faction_ai_state, 2),
                        (faction_get_slot, ":var_11", "$players_kingdom", slot_faction_ai_object),
                        (is_between, ":var_11", "p_town_1_1", "p_village_1_1"),
                        (party_get_battle_opponent, ":var_12", ":var_1"),
                        (eq, ":var_12", ":var_11"),
                        (assign, ":var_6", ":var_9"),
                        (quest_set_slot, ":var_6", 1, ":var_11"),
                        (quest_set_slot, ":var_6", 23, 2),
                        (quest_set_slot, ":var_6", 24, 15),
                    (try_end),
                (else_try),
                    (eq, ":var_9", "qst_scout_waypoints"),
                    (try_begin),
                        (assign, ":var_13", 100),
                        (assign, "$qst_scout_waypoints_wp_1", -1),
                        (assign, "$qst_scout_waypoints_wp_2", -1),
                        (assign, "$qst_scout_waypoints_wp_3", -1),
                        (assign, ":var_14", 0),
                        (try_for_range, ":var_8", 0, ":var_13"),
                            (try_begin),
                                (neg|ge, "$qst_scout_waypoints_wp_1", 0),
                                (call_script, "script_cf_get_random_enemy_center_within_range", ":var_1", 50),
                                (assign, "$qst_scout_waypoints_wp_1", reg0),
                            (try_end),
                            (try_begin),
                                (neg|ge, "$qst_scout_waypoints_wp_2", 0),
                                (call_script, "script_cf_get_random_enemy_center_within_range", ":var_1", 50),
                                (neg|eq, "$qst_scout_waypoints_wp_1", reg0),
                                (assign, "$qst_scout_waypoints_wp_2", reg0),
                            (try_end),
                            (try_begin),
                                (neg|ge, "$qst_scout_waypoints_wp_3", 0),
                                (call_script, "script_cf_get_random_enemy_center_within_range", ":var_1", 50),
                                (neg|eq, "$qst_scout_waypoints_wp_1", reg0),
                                (neg|eq, "$qst_scout_waypoints_wp_2", reg0),
                                (assign, "$qst_scout_waypoints_wp_3", reg0),
                            (try_end),
                            (neg|eq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                            (neg|eq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                            (neg|eq, "$qst_scout_waypoints_wp_2", "$qst_scout_waypoints_wp_3"),
                            (ge, "$qst_scout_waypoints_wp_1", 0),
                            (ge, "$qst_scout_waypoints_wp_2", 0),
                            (ge, "$qst_scout_waypoints_wp_3", 0),
                            (assign, ":var_13", 0),
                            (assign, ":var_14", 1),
                        (try_end),
                        (eq, ":var_14", 1),
                        (assign, "$qst_scout_waypoints_wp_1_visited", 0),
                        (assign, "$qst_scout_waypoints_wp_2_visited", 0),
                        (assign, "$qst_scout_waypoints_wp_3_visited", 0),
                        (assign, ":var_6", "qst_scout_waypoints"),
                        (quest_set_slot, ":var_6", 23, 7),
                        (quest_set_slot, ":var_6", 24, 25),
                    (try_end),
                (try_end),
            (try_end),
            (try_begin),
                (neg|eq, ":var_6", -1),
                (quest_set_slot, ":var_6", 11, 0),
                (quest_set_slot, ":var_6", 6, ":var_0"),
                (try_begin),
                    (eq, ":var_6", "qst_join_siege_with_army"),
                    (jump_to_menu, "mnu_kingdom_army_quest_join_siege_order"),
                (else_try),
                    (assign, "$g_random_army_quest", ":var_6"),
                    (quest_set_slot, "$g_random_army_quest", 6, ":var_0"),
                    (jump_to_menu, "mnu_kingdom_army_quest_messenger"),
                (try_end),
            (try_end),
        (try_end),
    (else_try),
        (val_add, "$g_player_follow_army_warnings", 1),
        (try_begin),
            (neg|ge, "$g_player_follow_army_warnings", 15),
            (try_begin),
                (store_mod, ":var_15", "$g_player_follow_army_warnings", 3),
                (eq, ":var_15", 0),
                (str_store_troop_name_link, s1, ":var_0"),
                (try_begin),
                    (neg|ge, "$g_player_follow_army_warnings", 8),
                (else_try),
                    (display_message, "str_marshal_warning"),
                (try_end),
            (try_end),
        (else_try),
            (jump_to_menu, "mnu_kingdom_army_follow_failed"),
        (try_end),
    (try_end),

]),

(0.500000,
[
    (check_quest_active, "qst_move_cattle_herd"),
    (neg|check_quest_concluded, "qst_move_cattle_herd"),
    (quest_get_slot, ":var_0", "qst_move_cattle_herd", 8),
    (quest_get_slot, ":var_1", "qst_move_cattle_herd", 1),
    (store_distance_to_party_from_party, ":var_2", ":var_0", ":var_1"),
    (neg|ge, ":var_2", 3),
    (remove_party, ":var_0"),
    (call_script, "script_succeed_quest", "qst_move_cattle_herd"),

]),

(2.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_leaded_party),
        (ge, ":var_1", 1),
        (party_is_active, ":var_1"),
        (party_slot_eq, ":var_1", slot_party_following_player, 1),
        (store_current_hours, ":var_2"),
        (neg|party_slot_ge, ":var_1", slot_party_follow_player_until_time, ":var_2"),
        (party_set_slot, ":var_1", slot_party_commander_party, -1),
        (party_set_slot, ":var_1", slot_party_following_player, 0),
        (assign, ":var_3", 200),
        (store_add, ":var_4", ":var_2", ":var_3"),
        (party_set_slot, ":var_1", slot_party_dont_follow_player_until_time, ":var_4"),
    (try_end),

]),

(0.500000,
[
    (try_begin),
        (check_quest_active, "qst_deliver_cattle"),
        (neg|check_quest_succeeded, "qst_deliver_cattle"),
        (quest_get_slot, ":var_0", "qst_deliver_cattle", 1),
        (quest_get_slot, ":var_1", "qst_deliver_cattle", 10),
        (quest_get_slot, ":var_2", "qst_deliver_cattle", 11),
        (store_sub, ":var_3", ":var_1", ":var_2"),
        (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var_0", ":var_3"),
        (val_add, ":var_2", reg0),
        (quest_set_slot, "qst_deliver_cattle", 11, ":var_2"),
        (neg|gt, ":var_1", ":var_2"),
        (call_script, "script_succeed_quest", "qst_deliver_cattle"),
    (try_end),
    (try_begin),
        (check_quest_active, "qst_deliver_cattle_to_army"),
        (neg|check_quest_succeeded, "qst_deliver_cattle_to_army"),
        (quest_get_slot, ":var_4", "qst_deliver_cattle_to_army", 6),
        (troop_get_slot, ":var_5", ":var_4", slot_troop_leaded_party),
        (try_begin),
            (gt, ":var_5", 0),
            (quest_get_slot, ":var_1", "qst_deliver_cattle_to_army", 10),
            (quest_get_slot, ":var_2", "qst_deliver_cattle_to_army", 11),
            (store_sub, ":var_3", ":var_1", ":var_2"),
            (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var_5", ":var_3"),
            (val_add, ":var_2", reg0),
            (quest_set_slot, "qst_deliver_cattle_to_army", 11, ":var_2"),
            (try_begin),
                (neg|gt, ":var_1", ":var_2"),
                (call_script, "script_succeed_quest", "qst_deliver_cattle_to_army"),
            (try_end),
        (else_try),
            (call_script, "script_abort_quest", "qst_deliver_cattle_to_army", 0),
        (try_end),
    (try_end),

]),

(1.000000,
[
    (neg|map_free),
    (check_quest_active, "qst_train_peasants_against_bandits"),
    (neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
    (eq, "$qst_train_peasants_against_bandits_currently_training", 1),
    (val_add, "$qst_train_peasants_against_bandits_num_hours_trained", 1),
    (call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
    (assign, ":var_0", reg0),
    (store_sub, ":var_1", 20, ":var_0"),
    (val_mul, ":var_1", 3),
    (val_div, ":var_1", 5),
    (ge, "$qst_train_peasants_against_bandits_num_hours_trained", ":var_1"),
    (assign, "$qst_train_peasants_against_bandits_num_hours_trained", 0),
    (rest_for_hours, 0, 0, 0),
    (jump_to_menu, "mnu_train_peasants_against_bandits_ready"),

]),

(1.000000,
[
    (check_quest_active, "qst_scout_waypoints"),
    (neg|check_quest_succeeded, "qst_scout_waypoints"),
    (try_begin),
        (eq, "$qst_scout_waypoints_wp_1_visited", 0),
        (store_distance_to_party_from_party, ":var_0", "$qst_scout_waypoints_wp_1", "p_main_party"),
        (neg|gt, ":var_0", 3),
        (assign, "$qst_scout_waypoints_wp_1_visited", 1),
        (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_1"),
        (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
        (eq, "$qst_scout_waypoints_wp_2_visited", 0),
        (store_distance_to_party_from_party, ":var_0", "$qst_scout_waypoints_wp_2", "p_main_party"),
        (neg|gt, ":var_0", 3),
        (assign, "$qst_scout_waypoints_wp_2_visited", 1),
        (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_2"),
        (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
        (eq, "$qst_scout_waypoints_wp_3_visited", 0),
        (store_distance_to_party_from_party, ":var_0", "$qst_scout_waypoints_wp_3", "p_main_party"),
        (neg|gt, ":var_0", 3),
        (assign, "$qst_scout_waypoints_wp_3_visited", 1),
        (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_3"),
        (display_message, "@{s1} is scouted."),
    (try_end),
    (eq, "$qst_scout_waypoints_wp_1_visited", 1),
    (eq, "$qst_scout_waypoints_wp_2_visited", 1),
    (eq, "$qst_scout_waypoints_wp_3_visited", 1),
    (call_script, "script_succeed_quest", "qst_scout_waypoints"),

]),

(3.000000,
[
    (neg|map_free),
    (check_quest_active, "qst_kill_local_merchant"),
    (quest_slot_eq, "qst_kill_local_merchant", 11, 0),
    (quest_set_slot, "qst_kill_local_merchant", 11, 1),
    (rest_for_hours, 0, 0, 0),
    (assign, "$auto_enter_town", "$qst_kill_local_merchant_center"),
    (assign, "$quest_auto_menu", "mnu_kill_local_merchant_begin"),

]),

(1.000000,
[
    (neg|map_free),
    (check_quest_active, "qst_collect_taxes"),
    (eq, "$g_player_is_captive", 0),
    (eq, "$qst_collect_taxes_currently_collecting", 1),
    (quest_get_slot, ":var_0", "qst_collect_taxes", 11),
    (this_or_next|eq, ":var_0", 1),
    (this_or_next|eq, ":var_0", 2),
    (eq, ":var_0", 3),
    (quest_get_slot, ":var_1", "qst_collect_taxes", 10),
    (val_sub, ":var_1", 1),
    (quest_set_slot, "qst_collect_taxes", 10, ":var_1"),
    (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
    (try_begin),
        (neg|ge, ":var_1", 0),
        (assign, ":var_0", 4),
        (quest_set_slot, "qst_collect_taxes", 11, 4),
        (rest_for_hours, 0, 0, 0),
        (jump_to_menu, "mnu_collect_taxes_complete"),
    (else_try),
        (assign, ":var_2", "$qst_collect_taxes_hourly_income"),
        (party_get_slot, ":var_3", "$g_encountered_party", slot_town_prosperity),
        (store_add, ":var_4", 30, ":var_3"),
        (val_mul, ":var_2", ":var_4"),
        (val_div, ":var_2", 80),
        (try_begin),
            (eq, "$qst_collect_taxes_halve_taxes", 1),
            (val_div, ":var_2", 2),
        (try_end),
        (val_max, ":var_2", 2),
        (store_random_in_range, ":var_5", 1, ":var_2"),
        (quest_get_slot, ":var_6", "qst_collect_taxes", 22),
        (val_add, ":var_6", ":var_5"),
        (quest_set_slot, "qst_collect_taxes", 22, ":var_6"),
        (call_script, "script_troop_add_gold", "trp_player", ":var_5"),
    (try_end),
    (try_begin),
        (eq, ":var_0", 1),
        (val_sub, "$qst_collect_taxes_menu_counter", 1),
        (neg|gt, "$qst_collect_taxes_menu_counter", 0),
        (quest_set_slot, "qst_collect_taxes", 11, 2),
        (jump_to_menu, "mnu_collect_taxes_revolt_warning"),
    (else_try),
        (eq, ":var_0", 2),
        (val_sub, "$qst_collect_taxes_unrest_counter", 1),
        (neg|gt, "$qst_collect_taxes_unrest_counter", 0),
        (eq, "$qst_collect_taxes_halve_taxes", 0),
        (quest_set_slot, "qst_collect_taxes", 11, 3),
        (store_div, ":var_7", 10000, "$qst_collect_taxes_total_hours"),
        (val_add, ":var_7", 30),
        (store_random_in_range, ":var_8", 0, 1000),
        (try_begin),
            (neg|ge, ":var_8", ":var_7"),
            (jump_to_menu, "mnu_collect_taxes_revolt"),
        (try_end),
    (try_end),

]),

(72.000000,
[
    (gt, "$g_force_peace_faction_1", 0),
    (gt, "$g_force_peace_faction_2", 0),
    (try_begin),
        (store_relation, ":var_0", "$g_force_peace_faction_1", "$g_force_peace_faction_2"),
        (neg|ge, ":var_0", 0),
        (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_force_peace_faction_1", "$g_force_peace_faction_2", 1),
    (try_end),
    (assign, "$g_force_peace_faction_1", 0),
    (assign, "$g_force_peace_faction_2", 0),

]),

(1.000000,
[
    (str_store_string, s51, "str_no_trigger_noted"),
    (try_begin),
        (gt, "$npc_to_rejoin_party", 0),
        (eq, "$g_infinite_camping", 0),
        (try_begin),
            (neg|main_party_has_troop, "$npc_to_rejoin_party"),
            (neg|eq, "$g_player_is_captive", 1),
            (str_store_string, s51, "str_triggered_by_npc_to_rejoin_party"),
            (assign, "$npc_map_talk_context", 151),
            (start_map_conversation, "$npc_to_rejoin_party", -1),
        (else_try),
            (troop_set_slot, "$npc_to_rejoin_party", slot_troop_mission_object, 8),
            (assign, "$npc_to_rejoin_party", 0),
        (try_end),
    (else_try),
        (gt, "$npc_is_quitting", 0),
        (eq, "$g_infinite_camping", 0),
        (try_begin),
            (main_party_has_troop, "$npc_is_quitting"),
            (neg|eq, "$g_player_is_captive", 1),
            (neg|troop_slot_eq, "trp_player", slot_troop_spouse, "$npc_is_quitting"),
            (neg|troop_slot_eq, "$npc_is_quitting", slot_troop_spouse, "trp_player"),
            (str_store_string, s51, "str_triggered_by_npc_is_quitting"),
            (start_map_conversation, "$npc_is_quitting", -1),
        (else_try),
            (assign, "$npc_is_quitting", 0),
        (try_end),
    (else_try),
        (gt, "$npc_with_grievance", 0),
        (eq, "$g_infinite_camping", 0),
        (eq, "$disable_npc_complaints", 0),
        (try_begin),
            (main_party_has_troop, "$npc_with_grievance"),
            (neg|eq, "$g_player_is_captive", 1),
            (str_store_string, s51, "str_triggered_by_npc_has_grievance"),
            (assign, "$npc_map_talk_context", 61),
            (start_map_conversation, "$npc_with_grievance", -1),
        (else_try),
            (assign, "$npc_with_grievance", 0),
        (try_end),
    (else_try),
        (gt, "$npc_with_personality_clash", 0),
        (eq, "$g_infinite_camping", 0),
        (eq, "$disable_npc_complaints", 0),
        (troop_get_slot, ":var_0", "$npc_with_personality_clash", slot_troop_personalityclash_object),
        (try_begin),
            (main_party_has_troop, "$npc_with_personality_clash"),
            (main_party_has_troop, ":var_0"),
            (neg|eq, "$g_player_is_captive", 1),
            (assign, "$npc_map_talk_context", 72),
            (str_store_string, s51, "str_triggered_by_npc_has_personality_clash"),
            (start_map_conversation, "$npc_with_personality_clash", -1),
        (else_try),
            (assign, "$npc_with_personality_clash", 0),
        (try_end),
    (else_try),
        (gt, "$npc_with_political_grievance", 0),
        (eq, "$g_infinite_camping", 0),
        (eq, "$disable_npc_complaints", 0),
        (try_begin),
            (main_party_has_troop, "$npc_with_political_grievance"),
            (neg|eq, "$g_player_is_captive", 1),
            (str_store_string, s51, "str_triggered_by_npc_has_political_grievance"),
            (assign, "$npc_map_talk_context", 145),
            (start_map_conversation, "$npc_with_political_grievance", -1),
        (else_try),
            (assign, "$npc_with_political_grievance", 0),
        (try_end),
    (else_try),
        (eq, "$disable_sisterly_advice", 0),
        (eq, "$g_infinite_camping", 0),
        (gt, "$npc_with_sisterly_advice", 0),
        (try_begin),
            (main_party_has_troop, "$npc_with_sisterly_advice"),
            (neg|eq, "$g_player_is_captive", 1),
            (troop_slot_ge, "$npc_with_sisterly_advice", slot_troop_woman_to_woman_string, 1),
            (assign, "$npc_map_talk_context", 139),
            (start_map_conversation, "$npc_with_sisterly_advice", -1),
        (else_try),
            (assign, "$npc_with_sisterly_advice", 0),
        (try_end),
    (else_try),
        (eq, "$disable_local_histories", 0),
        (eq, "$g_infinite_camping", 0),
        (try_for_range, ":var_1", "trp_npc1", "trp_kingdom_1_lord"),
            (main_party_has_troop, ":var_1"),
            (troop_slot_eq, ":var_1", slot_troop_home_speech_delivered, 0),
            (troop_get_slot, ":var_2", ":var_1", slot_troop_home),
            (gt, ":var_2", 0),
            (store_distance_to_party_from_party, ":var_3", ":var_2", "p_main_party"),
            (neg|ge, ":var_3", 7),
            (assign, "$npc_map_talk_context", 60),
            (str_store_string, s51, "str_triggered_by_local_histories"),
            (start_map_conversation, ":var_1", -1),
        (try_end),
    (try_end),
    (try_begin),
        (check_quest_active, "qst_rebel_against_kingdom"),
        (is_between, "$supported_pretender", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
        (neg|main_party_has_troop, "$supported_pretender"),
        (neg|troop_slot_eq, "$supported_pretender", slot_troop_occupation, 2),
        (party_add_members, "p_main_party", "$supported_pretender", 1),
    (try_end),
    (try_begin),
        (check_quest_active, "qst_rebel_against_kingdom"),
        (is_between, "$supported_pretender", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
        (main_party_has_troop, "$supported_pretender"),
        (neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_marshall, "trp_player"),
        (call_script, "script_appoint_faction_marshall", "fac_player_supporters_faction", "trp_player"),
    (try_end),

]),

(1.000000,
[
    (try_for_range, ":var_0", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_ge, ":var_0", slot_troop_change_to_faction, 1),
        (store_troop_faction, ":var_1", ":var_0"),
        (troop_get_slot, ":var_2", ":var_0", slot_troop_change_to_faction),
        (troop_get_slot, ":var_3", ":var_0", slot_troop_leaded_party),
        (assign, ":var_4", 0),
        (try_begin),
            (neg|gt, ":var_3", 0),
            (neg|troop_slot_ge, ":var_0", slot_troop_prisoner_of_party, 0),
            (assign, ":var_4", 1),
        (else_try),
            (gt, ":var_3", 0),
            (party_get_attached_to, ":var_5", ":var_3"),
            (try_begin),
                (neg|ge, ":var_5", 0),
                (party_get_cur_town, ":var_5", ":var_3"),
            (try_end),
            (this_or_next|neg|is_between, ":var_5", "p_town_1_1", "p_salt_mine"),
            (party_slot_eq, ":var_5", slot_town_lord, ":var_0"),
            (assign, ":var_6", "trp_knight_1_1_wife"),
            (try_for_range, ":var_7", "trp_npc1", ":var_6"),
                (troop_slot_eq, ":var_7", slot_troop_occupation, 2),
                (troop_get_slot, ":var_8", ":var_7", slot_troop_leaded_party),
                (party_is_active, ":var_8"),
                (store_faction_of_party, ":var_9", ":var_8"),
                (eq, ":var_9", ":var_1"),
                (store_distance_to_party_from_party, ":var_10", ":var_3", ":var_8"),
                (neg|ge, ":var_10", 4),
                (assign, ":var_6", 0),
            (try_end),
            (neg|eq, ":var_6", 0),
            (assign, ":var_4", 1),
        (try_end),
        (eq, ":var_4", 1),
        (try_begin),
            (ge, "$cheat_mode", 1),
            (str_store_troop_name, s4, ":var_0"),
            (display_message, "@{!}DEBUG - {s4} faction changed from slot troop change to faction"),
        (try_end),
        (call_script, "script_change_troop_faction", ":var_0", ":var_2"),
        (troop_set_slot, ":var_0", slot_troop_change_to_faction, 0),
        (try_begin),
            (is_between, ":var_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (str_store_troop_name_link, s1, ":var_0"),
            (str_store_faction_name_link, s2, ":var_1"),
            (str_store_faction_name_link, s3, ":var_2"),
            (display_message, "@{s1} has switched from {s2} to {s3}."),
            (try_begin),
                (eq, ":var_1", "$players_kingdom"),
                (call_script, "script_add_notification_menu", "mnu_notification_troop_left_players_faction", ":var_0", ":var_2"),
            (else_try),
                (eq, ":var_2", "$players_kingdom"),
                (call_script, "script_add_notification_menu", "mnu_notification_troop_joined_players_faction", ":var_0", ":var_1"),
            (try_end),
        (try_end),
    (try_end),

]),

(1.000000,
[
    (store_current_day, ":var_0"),
    (gt, ":var_0", "$g_last_report_control_day"),
    (store_time_of_day, ":var_1"),
    (ge, ":var_1", 18),
    (store_random_in_range, ":var_2", 0, 4),
    (this_or_next|ge, ":var_1", 22),
    (eq, ":var_2", 0),
    (assign, "$g_last_report_control_day", ":var_0"),
    (store_troop_gold, ":var_3", "trp_player"),
    (try_begin),
        (neg|ge, ":var_3", 0),
        (store_sub, ":var_4", 0, ":var_3"),
        (troop_add_gold, "trp_player", ":var_4"),
    (try_end),
    (party_get_morale, ":var_5", "p_main_party"),
    (try_begin),
        (str_store_string, s1, "str_party_morale_is_low"),
        (str_clear, s2),
        (party_get_num_companion_stacks, ":var_6", "p_main_party"),
        (assign, ":var_7", 0),
        (try_for_range_backwards, ":var_8", 0, ":var_6"),
            (party_stack_get_troop_id, ":var_9", "p_main_party", ":var_8"),
            (neg|troop_is_hero, ":var_9"),
            (party_stack_get_size, ":var_10", "p_main_party", ":var_8"),
            (store_troop_faction, ":var_11", ":var_9"),
            (assign, ":var_12", ":var_5"),
            (try_begin),
                (ge, ":var_11", "fac_kingdom_1"),
                (neg|ge, ":var_11", "fac_kingdoms_end"),
                (faction_get_slot, ":var_13", ":var_11", slot_faction_morale_of_player_troops),
                (val_div, ":var_13", 100),
                (val_add, ":var_12", ":var_13"),
            (try_end),
            (neg|ge, ":var_12", 32),
            (store_sub, ":var_14", 36, ":var_12"),
            (val_div, ":var_14", 4),
            (assign, ":var_15", 0),
            (try_for_range, ":var_16", 0, ":var_10"),
                (store_random_in_range, ":var_2", 0, 100),
                (neg|ge, ":var_2", ":var_14"),
                (val_add, ":var_15", 1),
                (remove_member_from_party, ":var_9", "p_main_party"),
            (try_end),
            (try_begin),
                (ge, ":var_15", 1),
                (str_store_troop_name, s2, ":var_9"),
                (assign, reg0, ":var_15"),
                (try_begin),
                    (ge, ":var_7", 1),
                    (str_store_string, s1, "str_s1_reg0_s2"),
                (else_try),
                    (str_store_string, s3, 1),
                    (str_store_string, s1, "str_s3_reg0_s2"),
                (try_end),
                (val_add, ":var_7", ":var_15"),
            (try_end),
        (try_end),
        (try_begin),
            (ge, ":var_7", 1),
            (try_begin),
                (ge, ":var_7", 2),
                (str_store_string, s2, "str_have_deserted_the_party"),
            (else_try),
                (str_store_string, s2, "str_has_deserted_the_party"),
            (try_end),
            (str_store_string, s1, "str_s1_s2"),
            (eq, "$g_infinite_camping", 0),
            (dialog_box, 1, "str_weekly_report"),
        (try_end),
    (try_end),

]),

(1.000000,
[

]),

(1.000000,
[
    (try_begin),
        (eq, "$g_player_is_captive", 1),
        (neg|party_is_active, "$capturer_party"),
        (rest_for_hours, 0, 0, 0),
    (try_end),
    (assign, ":var_0", "$next_center_will_be_fired"),
    (party_get_slot, ":var_1", ":var_0", slot_village_smoke_added),
    (eq, ":var_1", 0),
    (try_begin),
        (party_get_slot, ":var_2", ":var_0", slot_village_bound_center),
        (party_get_slot, ":var_3", ":var_2", slot_town_last_nearby_fire_time),
        (store_current_hours, ":var_4"),
        (try_begin),
            (eq, "$cheat_mode", 1),
            (is_between, ":var_0", "p_town_1_1", "p_salt_mine"),
            (is_between, ":var_2", "p_town_1_1", "p_salt_mine"),
            (str_store_party_name, s4, ":var_0"),
            (str_store_party_name, s5, ":var_2"),
            (store_current_hours, reg3),
            (party_get_slot, reg4, ":var_2", slot_town_last_nearby_fire_time),
            (display_message, "@{!}DEBUG - Checking fire at {s4} for {s5} - current time {reg3}, last nearby fire {reg4}"),
        (try_end),
        (eq, ":var_4", ":var_3"),
        (party_add_particle_system, ":var_0", "psys_map_village_fire"),
        (party_add_particle_system, ":var_0", "psys_map_village_fire_smoke"),
    (else_try),
        (store_add, ":var_5", ":var_3", 4),
        (eq, ":var_5", ":var_4"),
        (party_clear_particle_systems, ":var_0"),
    (try_end),

]),

(24.000000,
[
    (val_sub, "$g_dont_give_fief_to_player_days", 1),
    (val_max, "$g_dont_give_fief_to_player_days", -1),
    (val_sub, "$g_dont_give_marshalship_to_player_days", 1),
    (val_max, "$g_dont_give_marshalship_to_player_days", -1),
    (party_set_name, "p_steppe_bandit_spawn_point_1", "str_the_steppes"),
    (party_set_name, "p_taiga_bandit_spawn_point_1", "str_the_tundra"),
    (party_set_name, "p_forest_bandit_spawn_point_1", "str_the_forests"),
    (party_set_name, "p_forest_bandit_spawn_point_2", "str_the_forests"),
    (party_set_name, "p_mountain_bandit_spawn_point_1", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_2", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_3", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_4", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_5", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_6", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_7", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_8", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_9", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_10", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_11", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_12", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_13", "str_the_highlands"),
    (party_set_name, "p_mountain_bandit_spawn_point_14", "str_the_highlands"),
    (party_set_name, "p_sea_raider_spawn_point_1", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_2", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_3", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_4", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_5", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_6", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_7", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_8", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_9", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_10", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_11", "str_the_coast"),
    (party_set_name, "p_sea_raider_spawn_point_12", "str_the_coast"),
    (party_set_name, "p_desert_bandit_spawn_point_1", "str_the_deserts"),
    (party_set_name, "p_desert_bandit_spawn_point_2", "str_the_deserts"),
    (party_set_name, "p_desert_bandit_spawn_point_3", "str_the_deserts"),
    (try_begin),
        (check_quest_active, "qst_formal_marriage_proposal"),
        (check_quest_failed, "qst_formal_marriage_proposal"),
        (call_script, "script_end_quest", "qst_formal_marriage_proposal"),
    (try_end),
    (try_begin),
        (check_quest_active, "qst_lend_companion"),
        (quest_get_slot, ":var_0", "qst_lend_companion", 6),
        (store_troop_faction, ":var_1", ":var_0"),
        (store_relation, ":var_2", ":var_1", "$players_kingdom"),
        (this_or_next|neg|ge, ":var_2", 0),
        (neg|is_between, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (call_script, "script_abort_quest", "qst_lend_companion", 0),
    (try_end),
    (try_begin),
        (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neg|eq, "$players_kingdom", "fac_player_supporters_faction"),
        (faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
        (val_add, "$g_player_days_as_marshal", 1),
    (else_try),
        (assign, "$g_player_days_as_marshal", 0),
    (try_end),
    (try_for_range, ":var_3", "p_town_1_1", "p_castle_1_1"),
        (party_get_slot, ":var_4", ":var_3", slot_center_player_enterprise_consumption_order),
        (ge, ":var_4", 1),
        (val_sub, ":var_4", 1),
        (party_set_slot, ":var_3", slot_center_player_enterprise_consumption_order, ":var_4"),
    (try_end),

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(24.000000,
[

]),

(12.000000,
[
    (eq, "$g_player_is_captive", 0),
    (party_get_num_companion_stacks, ":var_0", "p_main_party"),
    (assign, ":var_1", 0),
    (try_for_range, ":var_2", 0, ":var_0"),
        (party_stack_get_size, ":var_3", "p_main_party", ":var_2"),
        (val_add, ":var_1", ":var_3"),
    (try_end),
    (val_div, ":var_1", 3),
    (try_begin),
        (eq, ":var_1", 0),
        (val_add, ":var_1", 1),
    (try_end),
    (assign, ":var_4", ":var_1"),
    (assign, ":var_5", 0),
    (troop_get_inventory_capacity, ":var_6", "trp_player"),
    (try_for_range, ":var_7", 0, ":var_6"),
        (troop_get_inventory_slot, ":var_8", "trp_player", ":var_7"),
        (try_begin),
            (ge, ":var_8", 0),
            (try_begin),
                (is_between, ":var_8", "itm_smoked_fish", "itm_siege_supply"),
                (troop_inventory_slot_get_item_amount, ":var_9", "trp_player", ":var_7"),
                (troop_get_inventory_slot_modifier, ":var_10", "trp_player", ":var_7"),
                (neg|eq, ":var_10", 41),
                (val_add, ":var_5", ":var_9"),
            (try_end),
        (try_end),
    (try_end),
    (store_mul, ":var_11", ":var_5", 14),
    (val_div, ":var_11", ":var_4"),
    (try_begin),
        (neg|gt, ":var_11", 48),
        (gt, ":var_11", 0),
        (display_message, "@Your party is low on food, less than 48 hours of food remaining", 0xFF0000),
    (try_end),

]),

(3.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 24),
        (party_get_slot, ":var_1", ":var_0", slot_party_orders_object),
        (party_get_slot, ":var_2", ":var_0", slot_party_home_center),
        (store_distance_to_party_from_party, ":var_3", ":var_0", ":var_1"),
        (try_begin),
            (neg|gt, ":var_3", 1),
            (try_begin),
                (neg|eq, ":var_1", ":var_2"),
                (try_begin),
                    (is_between, ":var_1", "p_village_1_1", "p_salt_mine"),
                    (party_get_slot, ":var_4", ":var_1", slot_town_elder),
                (else_try),
                    (party_get_slot, ":var_4", ":var_1", slot_town_merchant),
                (try_end),
                (troop_get_slot, ":var_5", "trp_player", slot_troop_spouse),
                (troop_get_slot, ":var_6", ":var_5", 162),
                (troop_remove_items, ":var_4", "itm_bread", ":var_6"),
                (party_set_slot, ":var_0", slot_party_ai_object, ":var_2"),
                (party_set_ai_behavior, ":var_0", 1),
                (party_set_ai_object, ":var_0", ":var_2"),
                (troop_add_items, "trp_household_possessions", "itm_bread", ":var_6"),
            (else_try),
                (remove_party, ":var_0"),
                (troop_set_slot, ":var_5", slot_troop_cur_center, "$g_player_court"),
            (try_end),
        (try_end),
    (try_end),

]),

(720.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 22),
        (party_get_slot, ":var_1", ":var_0", 233),
        (party_get_num_companion_stacks, ":var_2", ":var_0"),
        (assign, ":var_3", 1),
        (assign, ":var_4", 0),
        (try_for_range, ":var_5", 0, ":var_2"),
            (party_stack_get_troop_id, ":var_6", ":var_0", ":var_5"),
            (eq, ":var_6", "trp_dplmc_recruiter"),
            (assign, ":var_3", 0),
        (try_end),
        (try_begin),
            (party_get_battle_opponent, ":var_7", ":var_0"),
            (neg|ge, ":var_7", 0),
            (eq, ":var_3", 1),
            (party_get_slot, ":var_8", ":var_0", 234),
            (str_store_party_name_link, s13, ":var_8"),
            (assign, reg10, ":var_1"),
            (display_log_message, "@Your recruiter who was commissioned to recruit {reg10} recruits to {s13} has been defeated!", 0xFF0000),
            (remove_party, ":var_0"),
            (assign, ":var_4", 1),
        (try_end),
        (try_begin),
            (eq, ":var_4", 0),
            (party_get_slot, ":var_8", ":var_0", 234),
            (store_faction_of_party, ":var_9", ":var_8"),
            (neg|eq, ":var_9", "$players_kingdom"),
            (str_store_party_name_link, s13, ":var_8"),
            (assign, reg10, ":var_1"),
            (display_log_message, "@{s13} has been taken by the enemy and your recruiter who was commissioned to recruit {reg10} recruits vanished  without a trace!", 0xFF0000),
            (remove_party, ":var_0"),
            (assign, ":var_4", 1),
        (try_end),
        (eq, ":var_4", 0),
        (party_get_num_companions, ":var_10", ":var_0"),
        (val_sub, ":var_10", 1),
        (party_get_slot, ":var_11", ":var_0", 236),
        (neg|ge, ":var_10", ":var_1"),
        (try_begin),
            (get_party_ai_object, ":var_12", ":var_0"),
            (get_party_ai_behavior, ":var_13", ":var_0"),
            (try_begin),
                (neg|eq, ":var_13", 0),
                (neg|eq, ":var_12", -1),
                (party_set_slot, ":var_12", 235, 0),
            (try_end),
            (assign, ":var_14", 999999),
            (assign, ":var_15", -1),
            (try_for_range, ":var_16", "p_village_1_1", "p_salt_mine"),
                (store_distance_to_party_from_party, ":var_17", ":var_0", ":var_16"),
                (neg|ge, ":var_17", ":var_14"),
                (try_begin),
                    (store_faction_of_party, ":var_18", ":var_16"),
                    (assign, ":var_19", 100),
                    (try_begin),
                        (neg|eq, ":var_18", "$players_kingdom"),
                        (store_relation, ":var_19", "$players_kingdom", ":var_18"),
                    (try_end),
                    (ge, ":var_19", 0),
                    (party_get_slot, ":var_20", ":var_16", slot_center_player_relation),
                    (ge, ":var_20", 0),
                    (party_get_slot, ":var_21", ":var_16", slot_center_volunteer_troop_amount),
                    (gt, ":var_21", 0),
                    (party_get_slot, ":var_22", ":var_16", slot_center_original_faction),
                    (assign, ":var_23", 1),
                    (try_begin),
                        (eq, ":var_11", -1),
                        (assign, ":var_23", 0),
                    (else_try),
                        (eq, ":var_22", ":var_11"),
                        (assign, ":var_23", 0),
                    (try_end),
                    (neg|eq, ":var_23", 1),
                    (neg|party_slot_eq, ":var_16", slot_village_state, 2),
                    (neg|party_slot_eq, ":var_16", slot_village_state, 1),
                    (neg|party_slot_ge, ":var_16", slot_village_infested_by_bandits, 1),
                    (neg|party_slot_eq, ":var_16", 235, 1),
                    (assign, ":var_14", ":var_17"),
                    (assign, ":var_15", ":var_16"),
                (try_end),
            (try_end),
            (gt, ":var_15", -1),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_15"),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_15"),
            (party_set_slot, ":var_15", 235, 1),
        (try_end),
        (party_get_slot, ":var_24", ":var_0", slot_party_ai_object),
        (gt, ":var_24", -1),
        (store_distance_to_party_from_party, ":var_25", ":var_0", ":var_24"),
        (try_begin),
            (store_faction_of_party, ":var_26", ":var_24"),
            (assign, ":var_19", 100),
            (try_begin),
                (neg|eq, ":var_26", "$players_kingdom"),
                (store_relation, ":var_19", "$players_kingdom", ":var_26"),
            (try_end),
            (ge, ":var_19", 0),
            (party_get_slot, ":var_27", ":var_24", slot_center_player_relation),
            (ge, ":var_27", 0),
            (call_script, "script_raf_aor_faction_to_region", ":var_22"),
            (assign, ":var_28", reg0),
            (assign, ":var_23", 1),
            (try_begin),
                (eq, ":var_11", -1),
                (assign, ":var_23", 0),
            (else_try),
                (eq, ":var_28", ":var_11"),
                (assign, ":var_23", 0),
            (try_end),
            (neg|eq, ":var_23", 1),
            (neg|party_slot_eq, ":var_24", slot_village_state, 2),
            (neg|party_slot_eq, ":var_24", slot_village_state, 1),
            (neg|party_slot_ge, ":var_24", slot_village_infested_by_bandits, 1),
            (neg|gt, ":var_25", 0),
            (party_get_slot, ":var_29", ":var_24", slot_center_volunteer_troop_amount),
            (party_get_slot, ":var_30", ":var_24", slot_center_volunteer_troop_type),
            (assign, ":var_31", ":var_1"),
            (val_sub, ":var_31", ":var_10"),
            (try_begin),
                (gt, ":var_29", ":var_31"),
                (assign, ":var_32", ":var_29"),
                (val_sub, ":var_32", ":var_31"),
                (assign, ":var_33", ":var_29"),
                (val_sub, ":var_33", ":var_32"),
                (assign, ":var_34", ":var_29"),
                (val_sub, ":var_34", ":var_33"),
                (party_set_slot, ":var_24", slot_center_volunteer_troop_amount, ":var_34"),
                (party_add_members, ":var_0", ":var_30", ":var_33"),
                (party_set_ai_behavior, ":var_0", 0),
                (party_set_slot, ":var_24", 235, 0),
            (else_try),
                (neg|gt, ":var_29", ":var_31"),
                (gt, ":var_29", 0),
                (party_set_slot, ":var_24", slot_center_volunteer_troop_amount, -1),
                (party_add_members, ":var_0", ":var_30", ":var_29"),
                (party_set_ai_behavior, ":var_0", 0),
                (party_set_slot, ":var_24", 235, 0),
            (else_try),
                (neg|gt, ":var_29", 0),
                (party_set_ai_behavior, ":var_0", 0),
                (party_set_slot, ":var_24", 235, 0),
            (else_try),
                (display_message, "@ERROR IN THE RECRUITER KIT SIMPLE TRIGGERS!", 0xFF2222),
                (party_set_slot, ":var_24", 235, 0),
            (try_end),
        (try_end),
    (try_end),
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 22),
        (party_get_num_companions, ":var_10", ":var_0"),
        (val_sub, ":var_10", 1),
        (party_get_slot, ":var_1", ":var_0", 233),
        (eq, ":var_10", ":var_1"),
        (party_get_slot, ":var_8", ":var_0", 234),
        (try_begin),
            (neg|party_slot_eq, ":var_0", slot_party_ai_object, ":var_8"),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_8"),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_8"),
        (try_end),
        (store_distance_to_party_from_party, ":var_35", ":var_0", ":var_8"),
        (try_begin),
            (neg|gt, ":var_35", 0),
            (party_get_num_companion_stacks, ":var_2", ":var_0"),
            (try_for_range, ":var_5", 1, ":var_2"),
                (party_stack_get_size, ":var_36", ":var_0", ":var_5"),
                (party_stack_get_troop_id, ":var_6", ":var_0", ":var_5"),
                (party_add_members, ":var_8", ":var_6", ":var_36"),
            (try_end),
            (str_store_party_name_link, s13, ":var_8"),
            (assign, reg10, ":var_10"),
            (display_log_message, "@A recruiter has brought {reg10} recruits to {s13}.", 0xFF00),
            (remove_party, ":var_0"),
        (try_end),
    (try_end),

]),

(12.000000,
[
    (try_for_range, ":var_0", "p_village_1_1", "p_salt_mine"),
        (party_set_slot, ":var_0", 235, 0),
    (try_end),

]),

(2.000000,
[
    (eq, "$g_player_chancellor", "trp_dplmc_chancellor"),
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 23),
        (party_is_active, ":var_0"),
        (party_get_slot, ":var_1", ":var_0", slot_party_ai_object),
        (party_get_slot, ":var_2", ":var_0", slot_party_orders_object),
        (try_begin),
            (party_is_active, ":var_1"),
            (store_distance_to_party_from_party, ":var_3", ":var_0", ":var_1"),
            (str_store_party_name, s14, ":var_0"),
            (str_store_party_name, s15, ":var_1"),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (assign, reg0, ":var_3"),
                (display_message, "@Distance between {s14} and {s15}: {reg0}"),
            (try_end),
            (try_begin),
                (neg|gt, ":var_3", 1),
                (party_get_slot, ":var_4", ":var_0", 300),
                (str_store_item_name, s12, ":var_4"),
                (try_begin),
                    (gt, ":var_2", 0),
                    (str_store_troop_name, s13, ":var_2"),
                (else_try),
                    (str_store_party_name, s13, ":var_1"),
                (try_end),
                (display_log_message, "@Your caravan has brought {s12} to {s13}.", 0xFF00),
                (assign, ":var_5", 0),
                (store_faction_of_party, ":var_6", ":var_1"),
                (try_begin),
                    (gt, ":var_2", 0),
                    (faction_slot_eq, ":var_6", slot_faction_leader, ":var_2"),
                    (try_begin),
                        (eq, ":var_4", "itm_wine"),
                        (assign, ":var_5", 1),
                    (else_try),
                        (eq, ":var_4", "itm_oil"),
                        (assign, ":var_5", 2),
                    (try_end),
                (else_try),
                    (store_random_in_range, ":var_7", 1, 3),
                    (try_begin),
                        (eq, ":var_4", "itm_ale"),
                        (val_add, ":var_5", ":var_7"),
                    (else_try),
                        (eq, ":var_4", "itm_wine"),
                        (store_add, ":var_5", 1, ":var_7"),
                    (else_try),
                        (eq, ":var_4", "itm_oil"),
                        (store_add, ":var_5", 2, ":var_7"),
                    (else_try),
                        (eq, ":var_4", "itm_raw_dyes"),
                        (val_add, ":var_5", 1),
                    (else_try),
                        (eq, ":var_4", "itm_raw_silk"),
                        (val_add, ":var_5", 2),
                    (else_try),
                        (eq, ":var_4", "itm_velvet"),
                        (val_add, ":var_5", 4),
                    (else_try),
                        (eq, ":var_4", "itm_smoked_fish"),
                        (try_begin),
                            (party_slot_eq, ":var_1", slot_party_type, 4),
                            (val_add, ":var_5", 1),
                        (try_end),
                    (else_try),
                        (eq, ":var_4", "itm_cheese"),
                        (val_add, ":var_5", 1),
                        (try_begin),
                            (party_slot_eq, ":var_1", slot_party_type, 4),
                            (val_add, ":var_5", 1),
                        (try_end),
                    (else_try),
                        (eq, ":var_4", "itm_honey"),
                        (val_add, ":var_5", 2),
                        (try_begin),
                            (party_slot_eq, ":var_1", slot_party_type, 4),
                            (val_add, ":var_5", 2),
                        (try_end),
                    (try_end),
                (try_end),
                (try_begin),
                    (this_or_next|eq, ":var_6", "fac_player_supporters_faction"),
                    (eq, ":var_6", "$players_kingdom"),
                    (val_add, ":var_5", 1),
                (try_end),
                (try_begin),
                    (gt, ":var_2", 0),
                    (call_script, "script_change_player_relation_with_troop", ":var_2", ":var_5"),
                (else_try),
                    (call_script, "script_change_player_relation_with_center", ":var_1", ":var_5"),
                (try_end),
                (remove_party, ":var_0"),
            (try_end),
        (else_try),
            (display_log_message, "@Your caravan has lost its way and gave up your mission!", 0xFF0000),
            (remove_party, ":var_0"),
        (try_end),
    (try_end),

]),

(2.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 25),
        (party_get_slot, ":var_1", ":var_0", slot_party_ai_object),
        (party_get_slot, ":var_2", ":var_0", slot_party_orders_object),
        (try_begin),
            (party_is_active, ":var_1"),
            (store_distance_to_party_from_party, ":var_3", ":var_0", ":var_1"),
            (str_store_party_name, s14, ":var_0"),
            (str_store_party_name, s15, ":var_1"),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (assign, reg0, ":var_3"),
                (display_message, "@Distance between {s14} and {s15}: {reg0}"),
            (try_end),
            (try_begin),
                (neg|gt, ":var_3", 1),
                (try_begin),
                    (eq, ":var_1", "p_main_party"),
                    (party_get_slot, ":var_4", ":var_0", slot_party_orders_object),
                    (party_get_slot, ":var_5", ":var_0", 300),
                    (call_script, "script_add_notification_menu", "mnu_dplmc_messenger", ":var_4", ":var_5"),
                    (remove_party, ":var_0"),
                (else_try),
                    (party_stack_get_troop_id, ":var_4", ":var_1", 0),
                    (str_store_troop_name, s13, ":var_4"),
                    (try_begin),
                        (eq, "$cheat_mode", 1),
                        (display_log_message, "@Your messenger reached {s13}.", 0xFF00),
                        (assign, "$g_talk_troop", ":var_4"),
                    (try_end),
                    (party_get_slot, ":var_6", ":var_0", 300),
                    (assign, ":var_5", 0),
                    (try_begin),
                        (party_set_slot, ":var_1", slot_party_commander_party, "p_main_party"),
                        (store_current_hours, ":var_7"),
                        (party_set_slot, ":var_1", slot_party_following_orders_of_troop, "trp_kingdom_heroes_including_player_begin"),
                        (party_set_slot, ":var_1", slot_party_orders_object, ":var_2"),
                        (party_set_slot, ":var_1", slot_party_orders_type, ":var_6"),
                        (party_set_slot, ":var_1", slot_party_orders_time, ":var_7"),
                        (call_script, "script_npc_decision_checklist_party_ai", ":var_4"),
                        (try_begin),
                            (eq, "$cheat_mode", 1),
                            (display_message, "@{s14}"),
                        (try_end),
                        (try_begin),
                            (eq, reg0, ":var_6"),
                            (eq, reg1, ":var_2"),
                            (assign, ":var_5", 1),
                        (try_end),
                        (call_script, "script_party_set_ai_state", ":var_1", reg0, reg1),
                    (try_end),
                    (party_set_ai_behavior, ":var_0", 1),
                    (party_set_ai_object, ":var_0", "p_main_party"),
                    (party_set_slot, ":var_0", slot_party_ai_object, "p_main_party"),
                    (party_set_slot, ":var_0", slot_party_orders_object, ":var_4"),
                    (party_set_slot, ":var_0", 300, ":var_5"),
                (try_end),
            (try_end),
        (else_try),
            (display_log_message, "@Your messenger has lost it's way and gave up your mission!", 0xFF0000),
            (remove_party, ":var_0"),
        (try_end),
    (try_end),

]),

(168.000000,
[

]),

(2.000000,
[
    (try_for_parties, ":var_0"),
        (party_get_template_id, ":var_1", ":var_0"),
        (this_or_next|party_slot_eq, ":var_0", slot_party_type, 7),
        (this_or_next|eq, ":var_1", "pt_peasant_rebels_euro"),
        (this_or_next|eq, ":var_1", "pt_guelphs"),
        (this_or_next|eq, ":var_1", "pt_ghibellines"),
        (this_or_next|eq, ":var_1", "pt_prussians"),
        (this_or_next|eq, ":var_1", "pt_yotvingians"),
        (this_or_next|eq, ":var_1", "pt_curonians"),
        (this_or_next|eq, ":var_1", "pt_samogitians"),
        (this_or_next|eq, ":var_1", "pt_welsh"),
        (this_or_next|eq, ":var_1", "pt_mongolian_camp"),
        (this_or_next|eq, ":var_1", "pt_crusader_raiders"),
        (this_or_next|eq, ":var_1", "pt_jihadist_raiders"),
        (this_or_next|eq, ":var_1", "pt_teutonic_raiders"),
        (eq, ":var_1", "pt_sea_raiders"),
        (party_is_active, ":var_0"),
        (store_party_size_wo_prisoners, ":var_2", ":var_0"),
        (party_get_battle_opponent, ":var_3", ":var_0"),
        (try_begin),
            (neg|ge, ":var_3", 0),
            (neg|gt, ":var_2", 10),
            (neg|eq, ":var_1", "pt_sea_raiders"),
            (neg|eq, ":var_1", "pt_mongolian_camp"),
            (remove_party, ":var_0"),
        (else_try),
            (neg|ge, ":var_3", 0),
            (party_get_slot, ":var_4", ":var_0", slot_party_ai_object),
            (gt, ":var_4", 0),
            (party_is_active, ":var_4"),
            (try_begin),
                (store_distance_to_party_from_party, ":var_5", ":var_0", ":var_4"),
                (gt, ":var_5", 15),
                (party_set_ai_behavior, ":var_0", 6),
                (party_get_position, pos5, ":var_4"),
                (party_set_ai_target_position, ":var_0", pos5),
            (else_try),
                (get_party_ai_behavior, ":var_6", ":var_0"),
                (eq, ":var_6", 6),
                (try_begin),
                    (store_distance_to_party_from_party, ":var_5", ":var_0", ":var_4"),
                    (neg|ge, ":var_5", 3),
                    (party_set_ai_behavior, ":var_0", 2),
                    (party_set_ai_object, ":var_0", ":var_4"),
                    (party_set_ai_patrol_radius, ":var_0", 15),
                    (party_set_slot, ":var_0", slot_party_ai_object, ":var_4"),
                (try_end),
            (try_end),
        (try_end),
    (try_end),

]),

(1.000000,
[
    (try_for_parties, ":var_0"),
        (party_slot_eq, ":var_0", slot_party_type, 26),
        (party_get_slot, ":var_1", ":var_0", slot_party_ai_object),
        (party_get_slot, ":var_2", ":var_0", slot_party_orders_object),
        (troop_get_slot, ":var_3", ":var_2", slot_troop_cur_center),
        (party_get_slot, ":var_4", ":var_0", slot_party_home_center),
        (party_get_slot, ":var_5", ":var_0", slot_center_original_faction),
        (try_begin),
            (gt, "$players_kingdom", 0),
            (neg|eq, "$players_kingdom", ":var_5"),
            (party_set_faction, ":var_0", "$players_kingdom"),
            (party_set_slot, ":var_0", slot_center_original_faction, "$players_kingdom"),
        (else_try),
            (neg|eq, "fac_player_faction", ":var_5"),
            (neg|gt, "$players_kingdom", 0),
            (party_set_faction, ":var_0", "fac_player_faction"),
            (party_set_slot, ":var_0", slot_center_original_faction, "fac_player_faction"),
        (try_end),
        (try_begin),
            (neg|eq, ":var_3", ":var_1"),
            (neg|eq, ":var_1", ":var_4"),
            (party_set_ai_behavior, ":var_0", 1),
            (party_set_ai_object, ":var_0", ":var_3"),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_3"),
        (else_try),
            (store_distance_to_party_from_party, ":var_6", ":var_0", ":var_1"),
            (try_begin),
                (neg|gt, ":var_6", 1),
                (neg|eq, ":var_1", ":var_4"),
                (str_store_party_name, s25, ":var_4"),
                (str_store_troop_name, s26, ":var_2"),
                (display_message, "@Your messenger has delivered his message to {s26} and is on his way back to {s25}", 0xFF00),
                (party_add_members, ":var_0", ":var_2", 1),
                (troop_set_slot, ":var_2", slot_troop_cur_center, ":var_0"),
                (troop_set_slot, ":var_2", 400, 1),
                (party_set_ai_behavior, ":var_0", 1),
                (party_set_ai_object, ":var_0", ":var_4"),
                (party_set_slot, ":var_0", slot_party_ai_object, ":var_4"),
            (else_try),
                (neg|gt, ":var_6", 1),
                (eq, ":var_1", ":var_4"),
                (troop_set_slot, ":var_2", slot_troop_cur_center, ":var_4"),
                (str_store_party_name, s25, ":var_4"),
                (str_store_troop_name, s26, ":var_2"),
                (display_message, "@{s26} has arrived in {s25} and is awaiting you there.", 0xFF00),
                (remove_party, ":var_0"),
            (try_end),
        (try_end),
    (try_end),

]),

(0.000000,
[
    (eq, "$g_battle_preparation_phase", 2),
    (party_set_slot, "$g_battle_preparation", 251, 1),
    (try_for_parties, ":var_0"),
        (str_store_party_name, s20, ":var_0"),
        (neg|eq, ":var_0", "$g_battle_preparation"),
        (neg|eq, ":var_0", "p_main_party"),
        (neg|party_slot_eq, ":var_0", 251, 1),
        (this_or_next|party_slot_eq, ":var_0", slot_party_type, 7),
        (this_or_next|party_slot_eq, ":var_0", slot_party_type, 30),
        (party_slot_eq, ":var_0", slot_party_type, 13),
        (party_is_active, ":var_0"),
        (party_get_battle_opponent, ":var_1", ":var_0"),
        (neg|ge, ":var_1", 0),
        (party_get_attached_to, ":var_2", ":var_0"),
        (neg|ge, ":var_2", 0),
        (get_party_ai_behavior, ":var_3", ":var_0"),
        (neg|eq, ":var_3", 8),
        (store_faction_of_party, ":var_4", ":var_0"),
        (store_relation, ":var_5", "fac_player_supporters_faction", ":var_4"),
        (this_or_next|eq, ":var_4", "$players_kingdom"),
        (neg|ge, ":var_5", 0),
        (store_distance_to_party_from_party, ":var_6", ":var_0", "p_main_party"),
        (neg|gt, ":var_6", 5),
        (party_set_slot, ":var_0", 251, 1),
    (try_end),
    (try_begin),
        (map_free),
        (rest_for_hours, 12, 3, 0),
    (try_end),
    (store_current_hours, ":var_7"),
    (store_sub, ":var_8", ":var_7", "$g_battle_preparation_start"),
    (ge, ":var_8", 12),
    (assign, "$g_battle_preparation_phase", 3),
    (assign, "$g_battle_preparation_start", ":var_7"),

]),

(0.000000,
[
    (is_between, "$g_player_sally_town", "p_town_1_1", "p_salt_mine"),
    (party_is_active, "$g_player_sallies"),
    (start_encounter, "$g_player_sallies"),

]),

(4.000000,
[
    (party_get_current_terrain, ":var_0", "p_main_party"),
    (try_begin),
        (this_or_next|eq, ":var_0", 4),
        (eq, ":var_0", 12),
        (assign, "$tom_sand_storm_chance", 20),
        (set_global_haze_amount, 0),
        (store_random_in_range, ":var_1", 25, 101),
        (set_global_cloud_amount, ":var_1"),
    (else_try),
        (this_or_next|eq, ":var_0", 3),
        (eq, ":var_0", 11),
        (assign, "$tom_sand_storm_chance", 15),
        (store_random_in_range, ":var_1", 0, 101),
        (set_global_haze_amount, ":var_1"),
        (store_random_in_range, ":var_1", 15, 100),
        (set_global_cloud_amount, ":var_1"),
    (else_try),
        (this_or_next|eq, ":var_0", 2),
        (eq, ":var_0", 10),
        (assign, "$tom_sand_storm_chance", 10),
        (store_random_in_range, ":var_1", 0, 50),
        (set_global_haze_amount, ":var_1"),
        (store_random_in_range, ":var_1", 0, 80),
        (set_global_cloud_amount, ":var_1"),
    (else_try),
        (this_or_next|eq, ":var_0", 5),
        (eq, ":var_0", 13),
        (assign, "$tom_sand_storm_chance", 25),
        (set_global_haze_amount, 0),
        (set_global_cloud_amount, 0),
    (else_try),
        (assign, "$tom_sand_storm_chance", 15),
        (store_random_in_range, ":var_1", 0, 101),
        (set_global_haze_amount, ":var_1"),
        (store_random_in_range, ":var_1", 0, 101),
        (set_global_cloud_amount, ":var_1"),
    (try_end),

]),

(168.000000,
[
    (eq, "$freelancer_state", 1),
    (troop_get_slot, ":var_0", "trp_player", slot_troop_signup),
    (troop_get_xp, ":var_1", "trp_player"),
    (store_sub, ":var_2", ":var_1", ":var_0"),
    (try_begin),
        (troop_get_upgrade_troop, ":var_3", "$player_cur_troop", 0),
        (gt, ":var_3", 1),
        (call_script, "script_game_get_upgrade_xp", "$player_cur_troop"),
        (assign, ":var_4", reg0),
        (ge, ":var_2", ":var_4"),
        (try_begin),
            (call_script, "script_cf_freelancer_player_can_upgrade", ":var_3"),
            (troop_set_slot, "trp_player", slot_troop_signup, ":var_1"),
            (jump_to_menu, "mnu_upgrade_path"),
        (else_try),
            (assign, ":var_5", reg0),
            (try_begin),
                (eq, ":var_5", 0),
                (display_message, "@You are not strong enough to lift a weapon fit for your promotion!"),
            (else_try),
                (eq, ":var_5", 1),
                (display_message, "@You are not strong enough to hold all that weight required with promotion!."),
            (else_try),
                (eq, ":var_5", 2),
                (display_message, "@Your arms are to weak to advance in the artillary at this moment."),
            (else_try),
                (eq, ":var_5", 3),
                (display_message, "@You require more horse riding skills to fit your next poisition!"),
            (try_end),
        (try_end),
    (try_end),
    (try_begin),
        (eq, "$crusader_order_joined", 1),
        (troop_add_gold, "trp_player", 100),
        (troop_add_item, "trp_player", "itm_bread"),
        (call_script, "script_change_troop_renown", "trp_player", 1),
        (call_script, "script_change_player_honor", 1),
        (add_xp_to_troop, 70, "trp_player"),
    (else_try),
        (store_character_level, ":var_6", "$player_cur_troop"),
        (store_mul, ":var_7", 10, ":var_6"),
        (troop_add_gold, "trp_player", ":var_7"),
        (add_xp_to_troop, 70, "trp_player"),
        (play_sound, "snd_money_received", 0),
    (try_end),

]),

(1.000000,
[
    (eq, "$freelancer_state", 1),
    (set_camera_follow_party, "$enlisted_party"),
    (party_relocate_near_party, "p_main_party", "$enlisted_party", 1),
    (assign, ":var_0", 0),
    (troop_get_inventory_capacity, ":var_1", "trp_player"),
    (try_for_range, ":var_2", 0, ":var_1"),
        (troop_get_inventory_slot, ":var_3", "trp_player", ":var_2"),
        (ge, ":var_3", 0),
        (is_between, ":var_3", "itm_smoked_fish", "itm_siege_supply"),
        (val_add, ":var_0", 1),
    (try_end),
    (try_begin),
        (neg|ge, ":var_0", 2),
        (troop_add_item, "trp_player", "itm_bread"),
    (try_end),

]),

(168.000000,
[
    (troop_get_slot, ":var_0", "trp_manor_array", slot_troop_relations_begin),
    (try_for_range, ":var_1", 1, ":var_0"),
        (troop_get_slot, ":var_2", "trp_manor_array", ":var_1"),
        (party_get_slot, ":var_3", ":var_2", slot_village_bound_center),
        (this_or_next|neg|party_slot_eq, ":var_3", slot_village_state, 2),
        (party_slot_eq, ":var_2", 327, 1),
        (party_get_slot, ":var_4", ":var_3", slot_town_lord),
        (party_get_slot, ":var_5", ":var_2", slot_town_prosperity),
        (party_get_slot, ":var_6", ":var_2", 342),
        (party_get_slot, ":var_7", ":var_2", 341),
        (party_get_slot, ":var_8", ":var_2", 367),
        (assign, ":var_9", 0),
        (try_begin),
            (store_faction_of_party, ":var_10", ":var_3"),
            (party_set_faction, ":var_2", ":var_10"),
            (party_set_slot, ":var_2", slot_town_lord, ":var_4"),
        (try_end),
        (assign, ":var_11", 0),
        (try_for_range, ":var_12", 303, 328),
            (party_slot_eq, ":var_2", ":var_12", 2),
            (party_set_slot, ":var_2", ":var_12", 1),
            (try_begin),
                (this_or_next|eq, ":var_12", 303),
                (this_or_next|eq, ":var_12", 306),
                (this_or_next|eq, ":var_12", 305),
                (eq, ":var_12", 304),
                (val_add, ":var_11", 15),
            (else_try),
                (eq, ":var_12", 307),
                (val_add, ":var_11", 10),
            (try_end),
            (try_begin),
                (eq, ":var_4", "trp_player"),
                (try_begin),
                    (eq, ":var_12", 305),
                    (display_message, "@Peasants rejoice of your whorehouse in the regional manor. You gain fame!"),
                    (call_script, "script_change_troop_renown", "trp_player", 5),
                (else_try),
                    (this_or_next|eq, ":var_12", 322),
                    (this_or_next|eq, ":var_12", 323),
                    (this_or_next|eq, ":var_12", 324),
                    (this_or_next|eq, ":var_12", 325),
                    (this_or_next|eq, ":var_12", 326),
                    (eq, ":var_12", 327),
                    (display_message, "@You gain right to rule for building an important building in your regional manor!"),
                    (call_script, "script_change_player_right_to_rule", 3),
                (else_try),
                    (display_message, "@You gain renown for funding a building in your regional manor"),
                    (call_script, "script_change_troop_renown", "trp_player", 1),
                (try_end),
            (try_end),
        (try_end),
        (try_for_range, ":var_12", 303, 328),
            (party_slot_eq, ":var_2", ":var_12", 1),
            (store_sub, ":var_13", ":var_12", 308),
            (val_add, ":var_13", "trp_manor_grain"),
            (assign, ":var_14", 0),
            (assign, ":var_15", -1),
            (assign, ":var_16", -1),
            (troop_get_slot, ":var_17", ":var_13", 301),
            (party_get_slot, ":var_18", ":var_2", ":var_17"),
            (assign, ":var_19", 0),
            (try_begin),
                (is_between, ":var_12", 308, 312),
                (try_begin),
                    (this_or_next|neg|eq, ":var_4", "trp_player"),
                    (eq, ":var_18", 0),
                    (val_add, ":var_14", 30),
                    (val_add, ":var_19", 30),
                (else_try),
                    (eq, ":var_18", 1),
                    (troop_get_slot, ":var_15", ":var_13", 302),
                    (assign, ":var_16", 4),
                (try_end),
            (else_try),
                (this_or_next|eq, ":var_12", 303),
                (this_or_next|eq, ":var_12", 304),
                (eq, ":var_12", 305),
                (val_add, ":var_14", 50),
                (val_add, ":var_19", 50),
            (else_try),
                (is_between, ":var_12", 312, 322),
                (try_begin),
                    (this_or_next|neg|eq, ":var_4", "trp_player"),
                    (eq, ":var_18", 0),
                    (val_add, ":var_14", 80),
                    (val_add, ":var_19", 80),
                (else_try),
                    (this_or_next|neg|eq, ":var_4", "trp_player"),
                    (eq, ":var_18", 1),
                    (troop_get_slot, ":var_15", ":var_13", 302),
                    (assign, ":var_16", 3),
                (try_end),
            (else_try),
                (is_between, ":var_12", 323, 327),
                (val_add, ":var_14", 100),
            (try_end),
            (try_begin),
                (ge, ":var_14", 1),
                (store_random_in_range, ":var_20", -5, 5),
                (val_add, ":var_14", ":var_20"),
                (val_add, ":var_9", ":var_14"),
                (val_add, ":var_19", ":var_20"),
            (try_end),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (eq, ":var_4", "trp_player"),
                (str_store_troop_name, s1, ":var_13"),
                (assign, reg1, ":var_19"),
                (display_message, "@MANOR troop: {s1} pays {reg1} gold"),
            (try_end),
            (ge, ":var_16", 0),
            (ge, ":var_15", 0),
            (try_begin),
                (eq, ":var_7", 1),
                (val_div, ":var_16", 2),
            (else_try),
                (eq, ":var_7", -1),
                (val_mul, ":var_16", 3),
                (val_div, ":var_16", 2),
            (try_end),
            (troop_ensure_inventory_space, "trp_manor_array", ":var_16"),
            (troop_add_items, "trp_manor_array", ":var_15", ":var_16"),
        (try_end),
        (try_begin),
            (party_slot_eq, ":var_2", 327, 1),
            (val_sub, ":var_9", 500),
            (neg|ge, ":var_9", 0),
            (assign, ":var_9", 0),
        (try_end),
        (val_add, ":var_9", ":var_6"),
        (try_begin),
            (party_slot_eq, ":var_2", 302, 0),
            (val_clamp, ":var_6", 20, 200),
        (else_try),
            (party_slot_eq, ":var_2", 302, 1),
            (val_clamp, ":var_6", 20, 760),
        (else_try),
            (party_slot_eq, ":var_2", 302, 2),
            (val_clamp, ":var_6", 20, 1000),
        (try_end),
        (store_random_in_range, ":var_20", -5, 6),
        (val_add, ":var_6", ":var_20"),
        (try_begin),
            (eq, ":var_7", 1),
            (val_sub, ":var_11", 3),
            (val_add, ":var_6", 15),
            (val_mul, ":var_9", 3),
            (val_div, ":var_9", 2),
        (else_try),
            (eq, ":var_7", 0),
            (val_add, ":var_11", 1),
            (val_add, ":var_6", 40),
        (else_try),
            (eq, ":var_7", -1),
            (val_add, ":var_11", 2),
            (val_add, ":var_6", 50),
            (val_div, ":var_9", 2),
        (try_end),
        (val_clamp, ":var_11", 0, 100),
        (try_begin),
            (assign, ":var_21", ":var_5"),
            (val_clamp, ":var_21", 5, 100),
            (val_mul, ":var_9", ":var_21"),
            (val_div, ":var_9", 100),
        (try_end),
        (try_begin),
            (party_set_slot, ":var_2", 344, -1),
            (party_slot_eq, ":var_2", 303, 1),
            (ge, ":var_5", 50),
            (ge, ":var_6", 700),
            (store_random_in_range, ":var_22", "trp_manor_trader_silk", "trp_temp_lord"),
            (party_set_slot, ":var_2", 344, ":var_22"),
            (troop_get_slot, ":var_23", ":var_22", 302),
            (troop_clear_inventory, ":var_22"),
            (store_random_in_range, ":var_20", 5, 10),
            (troop_add_items, ":var_22", ":var_23", ":var_20"),
            (store_troop_gold, ":var_24", ":var_22"),
            (troop_remove_gold, ":var_22", ":var_24"),
            (store_random_in_range, ":var_24", 200, 800),
            (troop_add_gold, ":var_22", ":var_24"),
        (try_end),
        (try_begin),
            (party_slot_eq, ":var_2", 340, 1),
            (store_random_in_range, ":var_25", "itm_book_tactics", "itm_spice"),
            (troop_clear_inventory, "trp_manor_trader_book"),
            (troop_add_items, "trp_manor_trader_book", ":var_25", 1),
            (store_troop_gold, ":var_24", "trp_manor_trader_book"),
            (troop_remove_gold, "trp_manor_trader_book", ":var_24"),
            (store_random_in_range, ":var_24", 200, 300),
            (troop_add_gold, "trp_manor_trader_book", ":var_24"),
        (try_end),
        (val_add, ":var_8", ":var_9"),
        (try_begin),
            (eq, "$cheat_mode", 1),
            (eq, ":var_4", "trp_player"),
            (assign, reg0, ":var_9"),
            (assign, reg1, ":var_8"),
            (display_message, "@final gold :{reg0}, manor gold: {reg1}"),
        (try_end),
        (val_add, ":var_11", ":var_5"),
        (val_clamp, ":var_11", 0, 100),
        (party_set_slot, ":var_2", slot_town_prosperity, ":var_11"),
        (party_set_slot, ":var_2", 342, ":var_6"),
        (party_set_slot, ":var_2", 343, ":var_9"),
        (party_set_slot, ":var_2", 367, ":var_8"),
    (try_end),

]),

(168.000000,
[
    (troop_get_slot, ":var_0", "trp_manor_array", slot_troop_relations_begin),
    (try_for_range, ":var_1", 1, ":var_0"),
        (troop_get_slot, ":var_2", "trp_manor_array", ":var_1"),
        (party_get_slot, ":var_3", ":var_2", slot_village_bound_center),
        (party_get_slot, ":var_4", ":var_3", slot_town_lord),
        (neg|eq, ":var_4", "trp_player"),
        (neg|party_slot_eq, ":var_3", slot_village_state, 2),
        (party_get_slot, ":var_5", ":var_2", 367),
        (ge, ":var_5", 2000),
        (try_begin),
            (store_random_in_range, ":var_6", 308, 312),
            (party_slot_eq, ":var_2", ":var_6", 0),
            (party_set_slot, ":var_2", ":var_6", 1),
            (val_sub, ":var_5", 2000),
        (else_try),
            (ge, ":var_5", 3000),
            (store_random_in_range, ":var_6", 303, 308),
            (party_slot_eq, ":var_2", ":var_6", 0),
            (party_set_slot, ":var_2", ":var_6", 1),
            (val_sub, ":var_5", 3000),
        (else_try),
            (ge, ":var_5", 6000),
            (store_random_in_range, ":var_6", 303, 308),
            (party_slot_eq, ":var_2", ":var_6", 0),
            (party_set_slot, ":var_2", ":var_6", 1),
            (val_sub, ":var_5", 6000),
        (else_try),
            (ge, ":var_5", 10000),
            (store_random_in_range, ":var_6", 303, 308),
            (party_slot_eq, ":var_2", ":var_6", 0),
            (party_set_slot, ":var_2", ":var_6", 1),
            (val_sub, ":var_5", 10000),
        (try_end),
        (party_set_slot, ":var_2", 367, ":var_5"),
    (try_end),

]),

(168.000000,
[
    (try_for_parties, ":var_0"),
        (party_get_template_id, ":var_1", ":var_0"),
        (eq, ":var_1", "pt_manor"),
        (party_slot_ge, ":var_0", 340, 2),
        (party_set_slot, ":var_0", 709, 1),
    (try_end),
    (try_for_range, ":var_2", "p_town_1_1", "p_castle_1_1"),
        (try_begin),
            (party_get_slot, ":var_3", ":var_2", 299),
            (ge, ":var_3", 1),
            (party_get_template_id, ":var_4", ":var_3"),
            (eq, ":var_4", "pt_monastery"),
            (party_slot_ge, ":var_3", 340, 2),
            (party_set_slot, ":var_3", 709, 1),
        (try_end),
        (party_set_slot, ":var_2", 703, 1),
        (party_set_slot, ":var_2", 706, 1),
        (party_set_slot, ":var_2", 709, 1),
        (party_set_slot, ":var_2", 711, 3),
        (party_set_slot, ":var_2", 712, 2),
        (party_set_slot, ":var_2", 713, 1),
        (call_script, "script_feudal_lance_manpower_update", ":var_2", 15),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_2"),
    (try_end),
    (try_for_range, ":var_2", "p_village_1_1", "p_salt_mine"),
        (call_script, "script_feudal_lance_manpower_update", ":var_2", 12),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_2"),
    (try_end),
    (try_for_range, ":var_2", "p_castle_1_1", "p_village_1_1"),
        (call_script, "script_feudal_lance_manpower_update", ":var_2", 17),
        (call_script, "script_update_npc_volunteer_troops_in_village", ":var_2"),
    (try_end),

]),

(72.000000,
[
    (try_for_range, ":var_0", 3156, 3177),
        (store_random_in_range, ":var_1", "p_town_1_1", "p_castle_1_1"),
        (troop_set_slot, ":var_0", slot_troop_cur_center, ":var_1"),
        (troop_clear_inventory, ":var_0"),
        (try_begin),
            (is_between, ":var_0", "trp_trader_hat1", "trp_trader_sword1"),
            (try_for_range, reg0, 0, 30),
                (store_random_in_range, ":var_2", "itm_sarranid_head_cloth", "itm_leather_steppe_cap_a"),
                (troop_add_item, ":var_0", ":var_2"),
            (try_end),
        (else_try),
            (is_between, ":var_0", "trp_trader_sword1", "trp_trader_helmet1"),
            (try_for_range, reg0, 0, 10),
                (store_random_in_range, ":var_2", "itm_sword_type_xii", "itm_spatha"),
                (troop_add_item, ":var_0", ":var_2"),
            (try_end),
        (else_try),
            (is_between, ":var_0", "trp_trader_helmet1", "trp_trader_spice1"),
            (try_for_range, reg0, 0, 10),
                (store_random_in_range, ":var_2", "itm_flat_topped_helmet_a", "itm_bill"),
                (troop_add_item, ":var_0", ":var_2"),
            (try_end),
        (else_try),
            (is_between, ":var_0", "trp_trader_spice1", "trp_trader_silk1"),
            (try_for_range, reg0, 0, 5),
                (troop_add_item, ":var_0", "itm_spice"),
                (troop_add_item, ":var_0", "itm_salt"),
            (try_end),
        (else_try),
            (is_between, ":var_0", "trp_trader_silk1", "trp_maid_1"),
            (try_for_range, reg0, 0, 3),
                (troop_add_item, ":var_0", "itm_raw_silk"),
                (troop_add_item, ":var_0", "itm_velvet"),
            (try_end),
        (try_end),
        (store_troop_gold, reg6, ":var_0"),
        (troop_remove_gold, ":var_0", reg6),
        (store_random_in_range, ":var_3", 100, 200),
        (call_script, "script_troop_add_gold", ":var_0", ":var_3"),
    (try_end),

]),

(24.000000,
[
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_set_slot, ":var_0", 400, 0),
        (faction_slot_eq, ":var_0", slot_faction_state, 0),
        (call_script, "script_check_if_faction_is_at_war", ":var_0"),
        (faction_set_slot, ":var_0", 400, reg0),
    (try_end),

]),

(168.000000,
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (store_faction_of_party, ":var_1", ":var_0"),
        (faction_get_slot, ":var_2", ":var_1", 400),
        (party_get_slot, ":var_3", ":var_0", 400),
        (party_get_slot, ":var_4", ":var_0", slot_town_lord),
        (party_get_slot, ":var_5", ":var_0", slot_town_prosperity),
        (assign, reg1, ":var_5"),
        (try_begin),
            (eq, ":var_2", 0),
            (call_script, "script_change_center_prosperity", ":var_0", 20),
        (try_end),
        (call_script, "script_change_center_prosperity", ":var_0", 5),
        (store_mul, ":var_6", ":var_3", -1),
        (call_script, "script_change_center_prosperity", ":var_0", ":var_6"),
        (val_add, ":var_5", ":var_6"),
        (neg|eq, ":var_4", "trp_player"),
        (try_begin),
            (neg|gt, ":var_5", 20),
            (gt, ":var_3", -2),
            (val_sub, ":var_3", 1),
            (party_set_slot, ":var_0", 400, ":var_3"),
        (else_try),
            (ge, ":var_5", 99),
            (neg|ge, ":var_3", 2),
            (val_add, ":var_3", 1),
            (party_set_slot, ":var_0", 400, ":var_3"),
        (else_try),
            (store_random_in_range, ":var_7", 0, 10),
            (eq, ":var_7", 0),
            (store_random_in_range, ":var_7", -2, 3),
            (party_set_slot, ":var_0", 400, ":var_7"),
        (try_end),
    (try_end),

]),

(24.000000,
[
    (item_set_slot, "itm_bread", slot_item_food_bonus, 8),
    (item_set_slot, "itm_grain", slot_item_food_bonus, 2),
    (item_set_slot, "itm_smoked_fish", slot_item_food_bonus, 4),
    (item_set_slot, "itm_dried_meat", slot_item_food_bonus, 5),
    (item_set_slot, "itm_cheese", slot_item_food_bonus, 5),
    (item_set_slot, "itm_sausages", slot_item_food_bonus, 5),
    (item_set_slot, "itm_butter", slot_item_food_bonus, 4),
    (item_set_slot, "itm_chicken", slot_item_food_bonus, 8),
    (item_set_slot, "itm_cattle_meat", slot_item_food_bonus, 7),
    (item_set_slot, "itm_pork", slot_item_food_bonus, 6),
    (item_set_slot, "itm_raw_olives", slot_item_food_bonus, 1),
    (item_set_slot, "itm_cabbages", slot_item_food_bonus, 2),
    (item_set_slot, "itm_raw_grapes", slot_item_food_bonus, 3),
    (item_set_slot, "itm_apples", slot_item_food_bonus, 4),
    (item_set_slot, "itm_raw_date_fruit", slot_item_food_bonus, 4),
    (item_set_slot, "itm_honey", slot_item_food_bonus, 6),
    (item_set_slot, "itm_wine", slot_item_food_bonus, 5),
    (item_set_slot, "itm_ale", slot_item_food_bonus, 4),

]),


]
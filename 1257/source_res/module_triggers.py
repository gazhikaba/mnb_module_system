from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *

from module_constants import *

####################################################################################################################
#  Each trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Delay interval: Time to wait before applying the consequences of the trigger
#    After its conditions have been evaluated as true.
# 3) Re-arm interval. How much time must pass after applying the consequences of the trigger for the trigger to become active again.
#    You can put the constant ti_once here to make sure that the trigger never becomes active again after it fires once.
# 4) Conditions block (list). This must be a valid operation block. See header_operations.py for reference.
#    Every time the trigger is checked, the conditions block will be executed.
#    If the conditions block returns true, the consequences block will be executed.
#    If the conditions block is empty, it is assumed that it always evaluates to true.
# 5) Consequences block (list). This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

# Some constants for use below
merchant_inventory_space = 30
num_merchandise_goods = 36

triggers = [

(0.100000, 0.000000, ti_once,
[
    (map_free, 0),
],
[
    (dialog_box, "str_tutorial_map1"),
]),

(0.000000, 0.000000, 168.000000,
[
],
[
    (call_script, "script_refresh_center_inventories"),
]),

(0.000000, 0.000000, 168.000000,
[
],
[
    (call_script, "script_refresh_center_armories"),
]),

(0.000000, 0.000000, 168.000000,
[
],
[
    (call_script, "script_refresh_center_weaponsmiths"),
]),

(0.000000, 0.000000, 168.000000,
[
],
[
    (call_script, "script_refresh_center_stables"),
]),

(5.700000, 0.000000, 0.000000,
[
],
[
]),

(1.000000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_track_down_bandits"),
    (neg|check_quest_failed, "qst_track_down_bandits"),
    (neg|check_quest_succeeded, "qst_track_down_bandits"),
],
[
    (quest_get_slot, ":var_0", "qst_track_down_bandits", 8),
    (try_begin),
        (party_is_active, ":var_0"),
        (store_faction_of_party, ":var_1", ":var_0"),
        (neg|is_between, ":var_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (assign, ":var_2", 8),
        (try_begin),
            (is_currently_night),
            (assign, ":var_2", 5),
        (try_end),
        (try_for_parties, ":var_3"),
            (gt, ":var_3", "p_spawn_points_end"),
            (store_faction_of_party, ":var_4", ":var_3"),
            (is_between, ":var_4", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (store_distance_to_party_from_party, ":var_5", ":var_3", ":var_0"),
            (neg|ge, ":var_5", ":var_2"),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (str_store_party_name, s4, ":var_3"),
                (display_message, "@{!}DEBUG -- Wanted bandits spotted by {s4}"),
            (try_end),
            (call_script, "script_get_closest_center", ":var_0"),
            (assign, ":var_6", reg0),
            (call_script, "script_add_log_entry", 70, ":var_3", ":var_6", ":var_0", -1),
        (try_end),
    (else_try),
        (display_message, "str_bandits_eliminated_by_another"),
        (call_script, "script_abort_quest", "qst_track_down_bandits", 0),
    (try_end),
]),

(2.000000, 0.000000, 0.000000,
[
    (store_random_party_of_template, reg2, "pt_prisoner_train_party"),
    (party_is_in_any_town, reg2),
],
[
    (store_faction_of_party, ":var_0", reg2),
    (call_script, "script_cf_select_random_walled_center_with_faction", ":var_0", -1),
    (party_set_ai_behavior, reg2, 1),
    (party_set_ai_object, reg2, reg0),
    (party_set_flags, reg2, 65536, 0),
]),

(4.000000, 0.000000, 0.000000,
[
    (eq, "$caravan_escort_state", 1),
    (assign, ":var_0", 0),
    (try_begin),
        (neg|party_is_active, "$caravan_escort_party_id"),
        (assign, ":var_0", 1),
    (else_try),
        (get_party_ai_object, ":var_1", "$caravan_escort_party_id"),
        (neg|eq, ":var_1", "$caravan_escort_destination_town"),
        (assign, ":var_0", 1),
    (try_end),
    (eq, ":var_0", 1),
],
[
    (assign, "$caravan_escort_state", 0),
]),

(1.500000, 0.000000, 0.000000,
[
],
[
]),

(1.000000, 0.000000, 0.000000,
[
],
[
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_0", slot_faction_state, 0),
        (try_begin),
            (store_random_in_range, ":var_1", 0, 100),
            (neg|ge, ":var_1", 10),
            (call_script, "script_create_kingdom_party_if_below_limit", ":var_0", 7),
        (try_end),
        (try_begin),
            (store_random_in_range, ":var_1", 0, 100),
            (neg|ge, ":var_1", 10),
            (call_script, "script_create_kingdom_party_if_below_limit", ":var_0", 11),
        (try_end),
        (try_begin),
            (store_random_in_range, ":var_1", 0, 100),
            (neg|ge, ":var_1", 10),
            (call_script, "script_create_kingdom_party_if_below_limit", ":var_0", 12),
        (try_end),
    (try_end),
]),

(0.200000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_incriminate_loyal_commander"),
    (neg|check_quest_concluded, "qst_incriminate_loyal_commander"),
    (quest_slot_eq, "qst_incriminate_loyal_commander", 11, 2),
    (quest_get_slot, ":var_0", "qst_incriminate_loyal_commander", 1),
    (quest_get_slot, ":var_1", "qst_incriminate_loyal_commander", 8),
    (try_begin),
        (neg|party_is_active, ":var_1"),
        (quest_set_slot, "qst_incriminate_loyal_commander", 11, 3),
        (call_script, "script_fail_quest", "qst_incriminate_loyal_commander"),
    (else_try),
        (party_is_in_town, ":var_1", ":var_0"),
        (remove_party, ":var_1"),
        (quest_set_slot, "qst_incriminate_loyal_commander", 11, 3),
        (quest_get_slot, ":var_2", "qst_incriminate_loyal_commander", 4),
        (assign, ":var_3", 0),
        (try_for_range, ":var_4", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (faction_slot_eq, ":var_4", slot_faction_state, 0),
            (neg|eq, ":var_4", "fac_player_supporters_faction"),
            (neg|quest_slot_eq, "qst_incriminate_loyal_commander", 3, ":var_4"),
            (val_add, ":var_3", 1),
        (try_end),
        (try_begin),
            (gt, ":var_3", 0),
            (store_random_in_range, ":var_5", 0, ":var_3"),
            (assign, ":var_6", -1),
            (try_for_range, ":var_4", "fac_player_supporters_faction", "fac_kingdoms_end"),
                (eq, ":var_6", -1),
                (faction_slot_eq, ":var_4", slot_faction_state, 0),
                (neg|eq, ":var_4", "fac_player_supporters_faction"),
                (neg|quest_slot_eq, "qst_incriminate_loyal_commander", 3, ":var_4"),
                (val_sub, ":var_5", 1),
                (neg|ge, ":var_5", 0),
                (assign, ":var_6", ":var_4"),
            (try_end),
        (try_end),
        (try_begin),
            (gt, ":var_6", 0),
            (call_script, "script_change_troop_faction", ":var_2", ":var_6"),
        (else_try),
            (call_script, "script_change_troop_faction", ":var_2", "fac_robber_knights"),
        (try_end),
        (call_script, "script_succeed_quest", "qst_incriminate_loyal_commander"),
    (try_end),
],
[
]),

(0.200000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_bring_back_runaway_serfs"),
    (neg|check_quest_concluded, "qst_bring_back_runaway_serfs"),
    (quest_get_slot, ":var_0", "qst_bring_back_runaway_serfs", 7),
    (quest_get_slot, ":var_1", "qst_bring_back_runaway_serfs", 1),
    (try_begin),
        (party_is_active, "$qst_bring_back_runaway_serfs_party_1"),
        (try_begin),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":var_1"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_1"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
        (else_try),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":var_0"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_1"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
        (else_try),
            (store_distance_to_party_from_party, ":var_2", "p_main_party", "$qst_bring_back_runaway_serfs_party_1"),
            (gt, ":var_2", 3),
            (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_1", ":var_1"),
        (try_end),
    (try_end),
    (try_begin),
        (party_is_active, "$qst_bring_back_runaway_serfs_party_2"),
        (try_begin),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":var_1"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_2"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
        (else_try),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":var_0"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_2"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
        (else_try),
            (store_distance_to_party_from_party, ":var_2", "p_main_party", "$qst_bring_back_runaway_serfs_party_2"),
            (gt, ":var_2", 3),
            (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_2", ":var_1"),
        (try_end),
    (try_end),
    (try_begin),
        (party_is_active, "$qst_bring_back_runaway_serfs_party_3"),
        (try_begin),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":var_1"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_3"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
        (else_try),
            (party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":var_0"),
            (remove_party, "$qst_bring_back_runaway_serfs_party_3"),
            (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
        (else_try),
            (store_distance_to_party_from_party, ":var_2", "p_main_party", "$qst_bring_back_runaway_serfs_party_3"),
            (gt, ":var_2", 3),
            (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_3", ":var_1"),
        (try_end),
    (try_end),
    (assign, ":var_3", "$qst_bring_back_runaway_serfs_num_parties_returned"),
    (val_add, ":var_3", "$qst_bring_back_runaway_serfs_num_parties_fleed"),
    (ge, ":var_3", 3),
    (try_begin),
        (ge, "$qst_bring_back_runaway_serfs_num_parties_returned", 3),
        (call_script, "script_succeed_quest", "qst_bring_back_runaway_serfs"),
    (else_try),
        (eq, "$qst_bring_back_runaway_serfs_num_parties_returned", 0),
        (call_script, "script_fail_quest", "qst_bring_back_runaway_serfs"),
    (else_try),
        (call_script, "script_conclude_quest", "qst_bring_back_runaway_serfs"),
    (try_end),
],
[
]),

(0.500000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_follow_spy"),
    (eq, "$qst_follow_spy_no_active_parties", 0),
    (quest_get_slot, ":var_0", "qst_follow_spy", 12),
    (quest_get_slot, ":var_1", "qst_follow_spy", 7),
    (assign, ":var_2", 0),
    (try_begin),
        (this_or_next|ge, "$qst_follow_spy_run_away", 2),
        (this_or_next|neg|party_is_active, "$qst_follow_spy_spy_party"),
        (neg|party_is_active, "$qst_follow_spy_spy_partners_party"),
    (else_try),
        (eq, "$qst_follow_spy_meeting_state", 0),
        (store_distance_to_party_from_party, ":var_3", "p_main_party", "$qst_follow_spy_spy_party"),
        (try_begin),
            (assign, ":var_4", 3),
            (try_begin),
                (is_currently_night),
                (assign, ":var_4", 1),
            (try_end),
            (neg|gt, ":var_3", ":var_4"),
            (store_distance_to_party_from_party, ":var_5", "p_main_party", ":var_0"),
            (gt, ":var_5", 1),
            (val_add, "$qst_follow_spy_run_away", 1),
            (try_begin),
                (eq, "$qst_follow_spy_run_away", 2),
                (assign, ":var_2", 1),
                (display_message, "str_qst_follow_spy_noticed_you"),
            (try_end),
        (else_try),
            (store_distance_to_party_from_party, ":var_3", "$qst_follow_spy_spy_partners_party", "$qst_follow_spy_spy_party"),
            (neg|gt, ":var_3", 1),
            (party_attach_to_party, "$qst_follow_spy_spy_party", "$qst_follow_spy_spy_partners_party"),
            (assign, "$qst_follow_spy_meeting_state", 1),
            (assign, "$qst_follow_spy_meeting_counter", 0),
        (try_end),
    (else_try),
        (eq, "$qst_follow_spy_meeting_state", 1),
        (store_distance_to_party_from_party, ":var_3", "p_main_party", "$qst_follow_spy_spy_partners_party"),
        (try_begin),
            (neg|gt, ":var_3", 1),
            (party_detach, "$qst_follow_spy_spy_party"),
            (val_add, "$qst_follow_spy_run_away", 1),
            (try_begin),
                (eq, "$qst_follow_spy_run_away", 2),
                (assign, ":var_2", 1),
                (display_message, "str_qst_follow_spy_noticed_you"),
            (try_end),
        (else_try),
            (val_add, "$qst_follow_spy_meeting_counter", 1),
            (gt, "$qst_follow_spy_meeting_counter", 4),
            (party_detach, "$qst_follow_spy_spy_party"),
            (assign, ":var_2", 1),
            (assign, "$qst_follow_spy_meeting_state", 2),
        (try_end),
    (try_end),
    (try_begin),
        (eq, ":var_2", 1),
        (party_set_ai_object, "$qst_follow_spy_spy_party", ":var_0"),
        (party_set_ai_object, "$qst_follow_spy_spy_partners_party", ":var_1"),
        (party_set_ai_behavior, "$qst_follow_spy_spy_party", 1),
        (party_set_ai_behavior, "$qst_follow_spy_spy_partners_party", 1),
        (party_set_flags, "$qst_follow_spy_spy_party", 65536, 0),
        (party_set_flags, "$qst_follow_spy_spy_partners_party", 65536, 0),
    (try_end),
    (assign, ":var_6", 0),
    (try_begin),
        (party_is_active, "$qst_follow_spy_spy_party"),
        (val_add, ":var_6", 1),
        (party_is_in_town, "$qst_follow_spy_spy_party", ":var_0"),
        (remove_party, "$qst_follow_spy_spy_party"),
        (assign, "$qst_follow_spy_spy_back_in_town", 1),
        (val_sub, ":var_6", 1),
    (try_end),
    (try_begin),
        (party_is_active, "$qst_follow_spy_spy_partners_party"),
        (val_add, ":var_6", 1),
        (party_is_in_town, "$qst_follow_spy_spy_partners_party", ":var_1"),
        (remove_party, "$qst_follow_spy_spy_partners_party"),
        (assign, "$qst_follow_spy_partner_back_in_town", 1),
        (val_sub, ":var_6", 1),
    (try_end),
    (try_begin),
        (eq, "$qst_follow_spy_partner_back_in_town", 1),
        (eq, "$qst_follow_spy_spy_back_in_town", 1),
        (call_script, "script_fail_quest", "qst_follow_spy"),
    (try_end),
    (try_begin),
        (eq, ":var_6", 0),
        (assign, "$qst_follow_spy_no_active_parties", 1),
        (party_count_prisoners_of_type, ":var_7", "p_main_party", "trp_spy"),
        (party_count_prisoners_of_type, ":var_8", "p_main_party", "trp_spy_partner"),
        (gt, ":var_7", 0),
        (gt, ":var_8", 0),
        (call_script, "script_succeed_quest", "qst_follow_spy"),
    (try_end),
],
[
]),

(168.000000, 0.000000, 0.000000,
[
],
[
    (val_mul, "$debt_to_merchants_guild", 101),
    (val_div, "$debt_to_merchants_guild", 100),
]),

(0.100000, 0.000000, 0.100000,
[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (eq, "$escort_merchant_caravan_mode", 1),
],
[
    (quest_get_slot, ":var_0", "qst_escort_merchant_caravan", 8),
    (try_begin),
        (party_is_active, ":var_0"),
        (party_set_ai_behavior, ":var_0", 0),
        (party_set_flags, ":var_0", 65536, 0),
    (try_end),
]),

(0.100000, 0.000000, 0.100000,
[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (eq, "$escort_merchant_caravan_mode", 0),
],
[
    (quest_get_slot, ":var_0", "qst_escort_merchant_caravan", 8),
    (try_begin),
        (party_is_active, ":var_0"),
        (party_set_ai_behavior, ":var_0", 10),
        (party_set_flags, ":var_0", 65536, 0),
        (party_set_ai_object, ":var_0", "p_main_party"),
    (try_end),
]),

(0.100000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (quest_get_slot, ":var_0", "qst_escort_merchant_caravan", 8),
    (neg|party_is_active, ":var_0"),
],
[
    (call_script, "script_abort_quest", "qst_escort_merchant_caravan", 2),
]),

(0.300000, 0.000000, 1.100000,
[
    (check_quest_active, "qst_troublesome_bandits"),
    (neg|check_quest_failed, "qst_troublesome_bandits"),
    (store_num_parties_destroyed, ":var_0", "pt_troublesome_bandits"),
    (neg|ge, "$qst_troublesome_bandits_eliminated", ":var_0"),
    (store_num_parties_destroyed_by_player, ":var_1", "pt_troublesome_bandits"),
    (eq, ":var_1", "$qst_troublesome_bandits_eliminated_by_player"),
],
[
    (display_message, "str_bandits_eliminated_by_another"),
    (call_script, "script_abort_quest", "qst_troublesome_bandits", 2),
]),

(0.300000, 0.000000, 1.100000,
[
    (check_quest_active, "qst_troublesome_bandits"),
    (neg|check_quest_succeeded, "qst_troublesome_bandits"),
    (store_num_parties_destroyed, ":var_0", "pt_troublesome_bandits"),
    (neg|ge, "$qst_troublesome_bandits_eliminated", ":var_0"),
    (store_num_parties_destroyed_by_player, ":var_1", "pt_troublesome_bandits"),
    (neg|eq, ":var_1", "$qst_troublesome_bandits_eliminated_by_player"),
],
[
    (call_script, "script_succeed_quest", "qst_troublesome_bandits"),
]),

(1.000000, 0.000000, 0.000000,
[
    (check_quest_active, "qst_kidnapped_girl"),
    (quest_get_slot, ":var_0", "qst_kidnapped_girl", 8),
    (party_is_active, ":var_0"),
    (party_is_in_any_town, ":var_0"),
    (remove_party, ":var_0"),
],
[
]),

(0.000000, 0.000000, 336.000000,
[
    (try_for_range, ":var_0", "trp_kingdom_4_pretender", "trp_knight_1_1_wife"),
        (troop_set_slot, ":var_0", slot_troop_cur_center, 0),
        (neg|eq, ":var_0", "$supported_pretender"),
        (troop_get_slot, ":var_1", ":var_0", slot_troop_original_faction),
        (faction_slot_eq, ":var_1", slot_faction_state, 0),
        (faction_slot_eq, ":var_1", slot_faction_has_rebellion_chance, 1),
        (neg|troop_slot_eq, ":var_0", slot_troop_occupation, 2),
        (try_for_range, ":var_2", 0, 30),
            (troop_slot_eq, ":var_0", slot_troop_cur_center, 0),
            (store_random_in_range, ":var_3", "p_town_1_1", "p_castle_1_1"),
            (store_faction_of_party, ":var_4", ":var_3"),
            (store_relation, ":var_5", ":var_4", ":var_1"),
            (neg|gt, ":var_5", 0),
            (troop_set_slot, ":var_0", slot_troop_cur_center, ":var_3"),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (str_store_troop_name, s4, ":var_0"),
                (str_store_party_name, s5, ":var_3"),
                (display_message, "@{!}{s4} is in {s5}"),
            (try_end),
        (try_end),
    (try_end),
],
[
]),

(360.000000, 0.000000, 0.000000,
[
    (call_script, "script_update_companion_candidates_in_taverns"),
],
[
]),

(0.000000, 0.000000, 24.000000,
[
],
[
    (assign, ":var_0", 0),
    (assign, ":var_1", 100),
    (try_for_range, ":var_2", "trp_npc1", "trp_kingdom_1_lord"),
        (main_party_has_troop, ":var_2"),
        (val_add, ":var_0", 1),
    (try_end),
    (val_sub, ":var_1", ":var_0"),
    (store_skill_level, ":var_3", "skl_persuasion", "trp_player"),
    (val_add, ":var_1", ":var_3"),
    (assign, reg7, ":var_1"),
    (try_begin),
        (gt, "$personality_clash_after_24_hrs", 0),
        (eq, "$disable_npc_complaints", 0),
        (try_begin),
            (troop_get_slot, ":var_4", "$personality_clash_after_24_hrs", slot_troop_personalityclash_object),
            (main_party_has_troop, "$personality_clash_after_24_hrs"),
            (main_party_has_troop, ":var_4"),
            (assign, "$npc_with_personality_clash", "$personality_clash_after_24_hrs"),
        (try_end),
        (assign, "$personality_clash_after_24_hrs", 0),
    (try_end),
    (try_for_range, ":var_5", "trp_npc1", "trp_kingdom_1_lord"),
        (troop_set_slot, ":var_5", slot_troop_turned_down_twice, 0),
        (try_begin),
            (troop_slot_eq, ":var_5", slot_troop_met, 1),
            (troop_set_slot, ":var_5", slot_troop_met_previously, 1),
        (try_end),
        (troop_get_slot, ":var_6", ":var_5", slot_troop_occupation),
        (try_begin),
            (eq, ":var_6", 11),
            (troop_get_slot, ":var_7", ":var_5", slot_troop_return_renown),
            (str_store_troop_name, s31, ":var_5"),
            (troop_get_slot, ":var_8", "trp_player", slot_troop_renown),
            (assign, reg4, ":var_8"),
            (assign, reg5, ":var_7"),
            (gt, ":var_8", ":var_7"),
            (troop_set_slot, ":var_5", slot_troop_personalityclash_penalties, 0),
            (troop_set_slot, ":var_5", slot_troop_morality_penalties, 0),
            (troop_set_slot, ":var_5", slot_troop_occupation, 0),
        (try_end),
        (try_begin),
            (troop_slot_ge, ":var_5", slot_troop_current_mission, 5),
            (troop_slot_eq, ":var_5", slot_troop_mission_object, 1),
            (troop_get_slot, ":var_4", ":var_5", slot_troop_kingsupport_opponent),
            (troop_slot_eq, ":var_4", slot_troop_kingsupport_objection_state, 0),
            (troop_set_slot, ":var_4", slot_troop_kingsupport_objection_state, 1),
            (str_store_troop_name, s3, ":var_5"),
            (str_store_troop_name, s4, ":var_4"),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (display_message, "str_s4_ready_to_voice_objection_to_s3s_mission_if_in_party"),
            (try_end),
        (try_end),
        (try_begin),
            (main_party_has_troop, ":var_5"),
            (eq, "$disable_npc_complaints", 0),
            (call_script, "script_npc_morale", ":var_5"),
            (assign, ":var_9", reg0),
            (try_begin),
                (neg|ge, ":var_9", 20),
                (store_random_in_range, ":var_10", 0, 100),
                (val_add, ":var_9", ":var_10"),
                (neg|ge, ":var_9", 20),
                (assign, "$npc_is_quitting", ":var_5"),
            (try_end),
            (troop_get_slot, ":var_11", ":var_5", slot_troop_personalityclash_penalties),
            (val_mul, ":var_11", 90),
            (val_div, ":var_11", ":var_1"),
            (troop_set_slot, ":var_5", slot_troop_personalityclash_penalties, ":var_11"),
            (troop_get_slot, ":var_11", ":var_5", slot_troop_morality_penalties),
            (val_mul, ":var_11", 90),
            (val_div, ":var_11", ":var_1"),
            (troop_set_slot, ":var_5", slot_troop_morality_penalties, ":var_11"),
            (try_begin),
                (this_or_next|troop_slot_ge, ":var_5", slot_troop_personalityclash_state, 1),
                (eq, "$disable_npc_complaints", 1),
                (troop_get_slot, ":var_12", ":var_5", slot_troop_personalityclash_object),
                (main_party_has_troop, ":var_12"),
                (call_script, "script_reduce_companion_morale_for_clash", ":var_5", ":var_12", 72),
            (try_end),
            (try_begin),
                (this_or_next|troop_slot_ge, ":var_5", slot_troop_personalityclash2_state, 1),
                (eq, "$disable_npc_complaints", 1),
                (troop_get_slot, ":var_12", ":var_5", slot_troop_personalityclash2_object),
                (main_party_has_troop, ":var_12"),
                (call_script, "script_reduce_companion_morale_for_clash", ":var_5", ":var_12", 74),
            (try_end),
            (try_begin),
                (this_or_next|troop_slot_ge, ":var_5", slot_troop_personalitymatch_state, 1),
                (eq, "$disable_npc_complaints", 1),
                (troop_get_slot, ":var_12", ":var_5", slot_troop_personalitymatch_object),
                (main_party_has_troop, ":var_12"),
                (troop_get_slot, ":var_11", ":var_5", slot_troop_personalityclash_penalties),
                (val_mul, ":var_11", 9),
                (val_div, ":var_11", 10),
                (troop_set_slot, ":var_5", slot_troop_personalityclash_penalties, ":var_11"),
            (try_end),
            (try_begin),
                (eq, "$disable_npc_complaints", 0),
                (eq, "$npc_with_personality_clash", 0),
                (eq, "$npc_with_personality_clash_2", 0),
                (eq, "$personality_clash_after_24_hrs", 0),
                (troop_slot_eq, ":var_5", slot_troop_personalityclash_state, 0),
                (troop_get_slot, ":var_4", ":var_5", slot_troop_personalityclash_object),
                (main_party_has_troop, ":var_4"),
                (assign, "$personality_clash_after_24_hrs", ":var_5"),
            (try_end),
            (try_begin),
                (eq, "$npc_with_political_grievance", 0),
                (troop_slot_eq, ":var_5", slot_troop_kingsupport_objection_state, 1),
                (assign, "$npc_with_political_grievance", ":var_5"),
            (try_end),
        (else_try),
            (neg|main_party_has_troop, ":var_5"),
            (eq, ":var_6", 5),
            (troop_get_slot, ":var_13", ":var_5", slot_troop_current_mission),
            (try_begin),
                (eq, "$cheat_mode", 1),
                (str_store_troop_name, s10, ":var_5"),
                (assign, reg0, ":var_13"),
                (display_message, "@Checking rejoin of {s10} days on mission: {reg0}"),
            (try_end),
            (try_begin),
                (gt, ":var_13", 0),
                (val_sub, ":var_13", 1),
                (troop_set_slot, ":var_5", slot_troop_current_mission, ":var_13"),
            (else_try),
                (troop_slot_eq, ":var_5", slot_troop_mission_object, 11),
                (troop_slot_ge, ":var_5", 162, 1),
                (troop_set_slot, "trp_merc_euro_spearman", slot_troop_recent_offense_time, ":var_5"),
                (assign, "$npc_to_rejoin_party", "trp_merc_euro_spearman"),
            (else_try),
                (troop_slot_ge, ":var_5", slot_troop_mission_object, 1),
                (this_or_next|neg|troop_slot_eq, ":var_5", slot_troop_mission_object, 8),
                (hero_can_join, ":var_5"),
                (assign, "$npc_to_rejoin_party", ":var_5"),
            (try_end),
        (try_end),
    (try_end),
]),

(0.500000, 0.000000, 0.000000,
[
    (eq, "$tom_use_longships", 1),
],
[
    (try_for_parties, ":var_0"),
        (neg|is_between, "p_town_1_1", "p_salt_mine"),
        (party_get_template_id, ":var_1", ":var_0"),
        (neg|eq, ":var_1", "pt_manor"),
        (gt, ":var_1", 0),
        (party_get_icon, ":var_2", ":var_0"),
        (try_begin),
            (call_script, "script_cf_is_party_on_water", ":var_0"),
            (neg|is_between, ":var_2", "icon_longship", "icon_bandit_marker"),
            (try_begin),
                (party_slot_eq, ":var_0", 600, 0),
                (party_set_slot, ":var_0", 600, ":var_2"),
            (try_end),
            (store_faction_of_party, ":var_3", ":var_0"),
            (try_begin),
                (eq, ":var_3", "fac_kingdom_5"),
                (party_set_icon, ":var_0", "icon_longship_poland"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_1"),
                (party_set_icon, ":var_0", "icon_longship_teu"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_2"),
                (party_set_icon, ":var_0", "icon_longship_lithuania"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_3"),
                (party_set_icon, ":var_0", "icon_longship_mongol"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_4"),
                (party_set_icon, ":var_0", "icon_longship_denmark"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_6"),
                (party_set_icon, ":var_0", "icon_longship_hre"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_7"),
                (party_set_icon, ":var_0", "icon_longship_hungary"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_8"),
                (party_set_icon, ":var_0", "icon_longship_novgorod"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_9"),
                (party_set_icon, ":var_0", "icon_longship_england"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_10"),
                (party_set_icon, ":var_0", "icon_longship_france"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_11"),
                (party_set_icon, ":var_0", "icon_longship_norway"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_12"),
                (party_set_icon, ":var_0", "icon_longship_scotland"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_13"),
                (party_set_icon, ":var_0", "icon_longship_ireland"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_14"),
                (party_set_icon, ":var_0", "icon_longship_sweden"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_15"),
                (party_set_icon, ":var_0", "icon_longship_galicia"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_16"),
                (party_set_icon, ":var_0", "icon_longship_portugal"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_17"),
                (party_set_icon, ":var_0", "icon_longship_aragon"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_18"),
                (party_set_icon, ":var_0", "icon_longship_castile"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_19"),
                (party_set_icon, ":var_0", "icon_longship_navarra"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_20"),
                (party_set_icon, ":var_0", "icon_longship_granada"),
            (else_try),
                (eq, ":var_3", "fac_papacy"),
                (party_set_icon, ":var_0", "icon_longship_papal"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_22"),
                (party_set_icon, ":var_0", "icon_longship_byzantine"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_23"),
                (party_set_icon, ":var_0", "icon_longship_jerusalem"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_24"),
                (party_set_icon, ":var_0", "icon_longship_sicily"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_25"),
                (party_set_icon, ":var_0", "icon_longship_mamluke"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_26"),
                (party_set_icon, ":var_0", "icon_longship_latin"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_27"),
                (party_set_icon, ":var_0", "icon_longship_ilkhanate"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_28"),
                (party_set_icon, ":var_0", "icon_longship_hafsid"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_29"),
                (party_set_icon, ":var_0", "icon_longship_serbia"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_30"),
                (party_set_icon, ":var_0", "icon_longship_bulgaria"),
            (else_try),
                (eq, ":var_3", "fac_kingdom_31"),
                (party_set_icon, ":var_0", "icon_longship_marinid"),
            (else_try),
                (eq, ":var_3", "fac_outlaws"),
                (party_set_icon, ":var_0", "icon_longship_pirate"),
            (else_try),
                (party_set_icon, ":var_0", "icon_longship"),
            (try_end),
        (else_try),
            (eq, reg0, 0),
            (is_between, ":var_2", "icon_longship", "icon_bandit_marker"),
            (neg|party_slot_eq, ":var_0", 600, 0),
            (party_get_slot, ":var_2", ":var_0", 600),
            (party_set_icon, ":var_0", ":var_2"),
        (try_end),
    (try_end),
]),

(24.000000, 0.000000, 288.000000,
[
],
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "p_town_1_1", "p_village_1_1"),
        (party_get_slot, ":var_2", ":var_1", slot_town_lord),
        (eq, ":var_2", "trp_player"),
        (assign, ":var_0", 1),
    (try_end),
    (eq, ":var_0", 1),
    (try_begin),
        (eq, "$cheat_mode", 1),
        (assign, reg0, "$g_player_chamberlain"),
        (display_message, "@{!}DEBUG : chamberlain: {reg0}"),
    (try_end),
    (assign, ":var_3", 0),
    (try_begin),
        (eq, "$g_player_chamberlain", 0),
        (assign, ":var_3", 1),
    (else_try),
        (neg|eq, "$g_player_chamberlain", -1),
        (neg|eq, "$g_player_chamberlain", "trp_dplmc_chamberlain"),
        (assign, ":var_3", 1),
    (try_end),
    (try_begin),
        (eq, ":var_3", 1),
        (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chamberlain", 0, 0),
    (try_end),
]),

(24.000000, 0.000000, 312.000000,
[
],
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "p_town_1_1", "p_village_1_1"),
        (party_get_slot, ":var_2", ":var_1", slot_town_lord),
        (eq, ":var_2", "trp_player"),
        (assign, ":var_0", 1),
    (try_end),
    (eq, ":var_0", 1),
    (try_begin),
        (eq, "$cheat_mode", 1),
        (assign, reg0, "$g_player_constable"),
        (display_message, "@{!}DEBUG : constable: {reg0}"),
    (try_end),
    (assign, ":var_3", 0),
    (try_begin),
        (eq, "$g_player_constable", 0),
        (assign, ":var_3", 1),
    (else_try),
        (neg|eq, "$g_player_constable", -1),
        (neg|eq, "$g_player_constable", "trp_dplmc_constable"),
        (assign, ":var_3", 1),
    (try_end),
    (try_begin),
        (eq, ":var_3", 1),
        (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_constable", 0, 0),
    (try_end),
]),

(24.000000, 0.000000, 336.000000,
[
],
[
    (assign, ":var_0", 0),
    (try_for_range, ":var_1", "p_town_1_1", "p_castle_1_1"),
        (party_get_slot, ":var_2", ":var_1", slot_town_lord),
        (eq, ":var_2", "trp_player"),
        (assign, ":var_0", 1),
    (try_end),
    (eq, ":var_0", 1),
    (try_begin),
        (eq, "$cheat_mode", 1),
        (assign, reg0, "$g_player_chancellor"),
        (display_message, "@{!}DEBUG : chancellor: {reg0}"),
    (try_end),
    (assign, ":var_3", 0),
    (try_begin),
        (eq, "$g_player_chancellor", 0),
        (assign, ":var_3", 1),
    (else_try),
        (neg|eq, "$g_player_chancellor", -1),
        (neg|eq, "$g_player_chancellor", "trp_dplmc_chancellor"),
        (assign, ":var_3", 1),
    (try_end),
    (try_begin),
        (eq, ":var_3", 1),
        (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chancellor", 0, 0),
    (try_end),
]),

(0.000000, 0.000000, 0.000000,
[
    (eq, "$freelancer_state", 1),
    (gt, "$enlisted_party", 0),
    (neg|party_is_active, "$enlisted_party"),
],
[
    (assign, "$freelancer_state", 0),
    (call_script, "script_freelancer_detach_party"),
    (call_script, "script_party_restore"),
    (party_get_num_companion_stacks, ":var_0", "p_main_party"),
    (try_for_range_backwards, ":var_1", 0, ":var_0"),
        (party_stack_get_troop_id, ":var_2", "p_main_party", ":var_1"),
        (neg|troop_is_hero, ":var_2"),
        (party_stack_get_size, ":var_3", "p_main_party", ":var_1"),
        (party_remove_members, "p_main_party", ":var_2", ":var_3"),
    (try_end),
    (store_troop_faction, ":var_4", "$enlisted_lord"),
    (try_for_range, ":var_5", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neg|eq, ":var_4", ":var_5"),
        (faction_slot_eq, ":var_5", slot_faction_state, 0),
        (call_script, "script_set_player_relation_with_faction", ":var_5", 0),
    (try_end),
    (assign, "$g_encountered_party", "$g_enemy_party"),
    (jump_to_menu, "mnu_captivity_start_wilderness"),
]),

(0.000000, 0.000000, 0.000000,
[
    (eq, "$freelancer_state", 1),
    (try_begin),
        (party_slot_ge, "p_freelancer_party_backup", slot_party_last_in_combat, 1),
        (map_free),
        (party_set_slot, "p_freelancer_party_backup", slot_party_last_in_combat, 0),
        (party_get_num_attached_parties, ":var_0", "p_main_party"),
        (try_for_range_backwards, ":var_1", 0, ":var_0"),
            (party_get_attached_party_with_rank, ":var_2", "p_main_party", ":var_1"),
            (party_detach, ":var_2"),
        (try_end),
    (try_end),
    (party_get_battle_opponent, ":var_3", "$enlisted_party"),
    (gt, ":var_3", 0),
    (store_troop_health, ":var_4", "trp_player"),
    (ge, ":var_4", 50),
],
[
    (jump_to_menu, "mnu_world_map_soldier"),
]),

(1.000000, 0.000000, 0.000000,
[
    (eq, "$freelancer_state", 0),
    (gt, "$enlisted_party", 0),
    (neg|party_is_active, "$enlisted_party"),
    (store_troop_faction, ":var_0", "$enlisted_lord"),
    (store_relation, ":var_1", "fac_player_supporters_faction", ":var_0"),
    (neg|ge, ":var_1", 0),
    (party_get_attached_party_with_rank, ":var_2", "p_main_party", 0),
    (eq, "p_temp_party_2", ":var_2"),
],
[
    (assign, "$enlisted_party", -1),
    (party_detach, "p_temp_party_2"),
    (store_skill_level, ":var_0", "skl_leadership", "trp_player"),
    (store_skill_level, ":var_1", "skl_persuasion", "trp_player"),
    (store_add, ":var_2", ":var_1", ":var_0"),
    (val_add, ":var_2", 10),
    (store_random_in_range, ":var_3", 0, ":var_2"),
    (try_begin),
        (is_between, ":var_3", 0, 5),
        (call_script, "script_party_calculate_strength", "p_main_party", 0),
        (assign, ":var_4", reg0),
        (call_script, "script_party_calculate_strength", "p_temp_party_2", 0),
        (assign, ":var_5", reg0),
        (ge, ":var_5", ":var_4"),
        (party_get_num_prisoner_stacks, ":var_6", "p_temp_party_2"),
        (try_for_range, ":var_7", 0, ":var_6"),
            (party_prisoner_stack_get_troop_id, ":var_8", "p_temp_party_2", ":var_7"),
            (party_prisoner_stack_get_size, ":var_9", "p_temp_party_2", ":var_7"),
            (party_remove_prisoners, "p_temp_party_2", ":var_8", ":var_9"),
        (try_end),
        (dialog_box, "@The released prisoners were not be trusted and they are preparing to attack you!", "@Warning!"),
        (start_encounter, "p_temp_party_2"),
        (change_screen_map),
    (else_try),
        (is_between, ":var_3", 5, 10),
        (dialog_box, "@The released prisoners scattered as soon as the battle finished. You will not be seeing them again.", "@Notice!"),
        (party_clear, "p_temp_party_2"),
    (else_try),
        (dialog_box, "@The released prisoners have remained loyal and will join your party", "@Notice!"),
        (party_get_num_companion_stacks, ":var_6", "p_temp_party_2"),
        (try_for_range, ":var_7", 0, ":var_6"),
            (party_stack_get_troop_id, ":var_8", "p_temp_party_2", ":var_7"),
            (party_stack_get_size, ":var_9", "p_temp_party_2", ":var_7"),
            (party_add_members, "p_main_party", ":var_8", ":var_9"),
        (try_end),
        (party_clear, "p_temp_party_2"),
    (try_end),
]),

(0.000000, 0.000000, 0.000000,
[
    (eq, "$freelancer_state", 1),
    (key_clicked, key_left_mouse_button),
    (set_fixed_point_multiplier, 1000),
    (mouse_get_position, pos0),
    (position_get_y, ":var_0", pos0),
    (gt, ":var_0", 50),
],
[
    (jump_to_menu, "mnu_world_map_soldier"),
    (rest_for_hours_interactive, 9999, 4, 0),
]),

(24.000000, 0.000000, 0.000000,
[
    (eq, "$freelancer_state", 2),
],
[
    (troop_get_slot, ":var_0", "trp_player", slot_troop_current_mission),
    (try_begin),
        (gt, ":var_0", 5),
        (val_sub, ":var_0", 1),
        (troop_set_slot, "trp_player", slot_troop_current_mission, ":var_0"),
    (else_try),
        (is_between, ":var_0", 1, 5),
        (assign, reg0, ":var_0"),
        (display_message, "@You have {reg0} days left till you are declared as a deserter!"),
        (val_sub, ":var_0", 1),
        (troop_set_slot, "trp_player", slot_troop_current_mission, ":var_0"),
    (else_try),
        (eq, ":var_0", 0),
        (call_script, "script_event_player_deserts"),
        (display_message, "@You have now been declared as a deserter!"),
        (call_script, "script_desert_order"),
    (try_end),
]),

(1.000000, 96.000000, 0.000000,
[
    (eq, "$crusader_state", 0),
    (call_script, "script_diplomacy_start_war_between_kingdoms", "$crusader_faction", "$crusade_target_faction", 1),
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neg|eq, ":var_0", "$crusader_faction"),
        (try_begin),
            (this_or_next|faction_slot_eq, ":var_0", 102, 0),
            (faction_slot_eq, ":var_0", 102, 1),
            (set_relation, ":var_0", "fac_crusade", 10),
        (else_try),
            (set_relation, ":var_0", "fac_crusade", -50),
        (try_end),
    (try_end),
    (try_for_range, ":var_1", "p_town_1_1", "p_village_1_1"),
        (store_faction_of_party, ":var_0", ":var_1"),
        (eq, "$crusader_faction", ":var_0"),
        (assign, "$crusade_start", ":var_1"),
        (store_num_parties_of_template, ":var_2", "pt_crusaders"),
        (neg|ge, ":var_2", 1),
        (set_spawn_radius, 5),
        (spawn_around_party, "$crusade_start", "pt_crusaders"),
        (assign, ":var_3", reg0),
        (assign, "$crusader_party_id", reg0),
        (party_set_ai_behavior, ":var_3", 0),
        (str_store_party_name, s1, ":var_1"),
        (str_store_faction_name, s2, "$crusade_target_faction"),
        (display_message, "@Crusaders are going to gather near {s1} the start there crusade against {s2}"),
        (assign, ":var_1", -1),
    (try_end),
],
[
    (try_begin),
        (try_for_range, ":var_0", "p_town_1_1", "p_village_1_1"),
            (store_faction_of_party, ":var_1", ":var_0"),
            (eq, ":var_1", "$crusade_target_faction"),
            (assign, "$crusade_target", ":var_0"),
        (try_end),
        (str_store_faction_name, s1, "$crusade_target_faction"),
        (display_message, "@Crusade against {s1} have started!"),
        (assign, "$crusader_state", 1),
        (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
]),

(1.000000, 0.000000, 0.000000,
[
    (eq, "$crusader_state", 0),
    (neg|eq, "$crusader_party_id", -1),
],
[
    (try_begin),
        (eq, "$crusader_faction", "fac_player_supporters_faction"),
        (party_get_slot, ":var_0", "$crusade_start", slot_center_original_faction),
        (faction_get_slot, ":var_1", ":var_0", slot_faction_reinforcements_a),
        (faction_get_slot, ":var_2", ":var_0", slot_faction_reinforcements_b),
        (faction_get_slot, ":var_3", ":var_0", slot_faction_reinforcements_b),
    (else_try),
        (faction_get_slot, ":var_1", "$crusader_faction", slot_faction_reinforcements_a),
        (faction_get_slot, ":var_2", "$crusader_faction", slot_faction_reinforcements_b),
        (faction_get_slot, ":var_3", "$crusader_faction", slot_faction_reinforcements_b),
    (try_end),
    (store_random_in_range, ":var_4", 0, 4),
    (try_begin),
        (eq, ":var_4", 0),
        (party_add_template, "$crusader_party_id", ":var_1"),
    (else_try),
        (eq, ":var_4", 1),
        (party_add_template, "$crusader_party_id", ":var_2"),
    (else_try),
        (eq, ":var_4", 2),
        (party_add_template, "$crusader_party_id", ":var_3"),
    (else_try),
        (store_random_in_range, ":var_4", 0, 3),
        (try_begin),
            (eq, ":var_4", 0),
            (party_add_template, "$crusader_party_id", "pt_teutonic_reinforcements_c"),
        (else_try),
            (eq, ":var_4", 1),
            (party_add_template, "$crusader_party_id", "pt_templar_reinforcements_c"),
        (else_try),
            (party_add_template, "$crusader_party_id", "pt_hospitaller_reinforcements_c"),
        (try_end),
    (try_end),
]),

(1.000000, 0.000000, 0.000000,
[
    (eq, "$crusader_state", 1),
],
[
    (try_begin),
        (store_num_parties_of_template, ":var_0", "pt_crusaders"),
        (neg|ge, ":var_0", 1),
        (assign, "$crusader_faction", -5),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusade_start", 0),
        (assign, "$crusade_target", 0),
        (assign, "$crusade_target_faction", 0),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusader_state", -1),
        (display_message, "@Crusaders have been defeated!"),
    (else_try),
        (store_distance_to_party_from_party, ":var_1", "$crusader_party_id", "$crusade_target"),
        (neg|ge, ":var_1", 3),
        (store_current_hours, ":var_2"),
        (party_set_slot, "$crusade_target", slot_center_is_besieged_by, "$crusader_party_id"),
        (party_set_slot, "$crusade_target", slot_center_siege_begin_hours, ":var_2"),
        (call_script, "script_update_faction_notes", "$crusade_target_faction"),
        (display_message, "@Crusaders have reached their target!"),
        (assign, "$crusader_state", 2),
    (else_try),
        (ge, ":var_1", 3),
        (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
]),

(1.000000, 24.000000, 0.000000,
[
    (eq, "$crusader_state", 2),
],
[
    (try_begin),
        (store_num_parties_of_template, ":var_0", "pt_crusaders"),
        (neg|ge, ":var_0", 1),
        (assign, "$crusader_faction", -5),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusade_start", 0),
        (assign, "$crusade_target", 0),
        (assign, "$crusade_target_faction", 0),
        (assign, "$crusader_state", -1),
        (display_message, "@Crusaders have been defeated!"),
    (else_try),
        (store_distance_to_party_from_party, ":var_1", "$crusader_party_id", "$crusade_target"),
        (neg|ge, ":var_1", 5),
        (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
        (party_set_ai_behavior, "$crusader_party_id", 4),
        (party_set_ai_object, "$crusader_party_id", "$crusade_target"),
        (party_set_flags, "$crusader_party_id", 65536, 1),
        (party_set_slot, "$crusader_party_id", slot_party_ai_substate, 1),
        (display_message, "@Crusaders have besieged their target!"),
        (assign, "$crusader_state", 3),
    (else_try),
        (assign, "$crusader_state", 1),
        (party_set_slot, "$crusade_target", slot_center_is_besieged_by, "$crusader_party_id"),
        (party_get_slot, ":var_2", "$crusade_target", slot_center_is_besieged_by),
        (eq, ":var_2", "$crusader_party_id"),
        (party_set_slot, "$crusade_target", slot_center_is_besieged_by, -1),
    (try_end),
]),

(1.000000, 0.000000, 0.000000,
[
    (eq, "$crusader_state", 3),
],
[
    (try_begin),
        (store_num_parties_of_template, ":var_0", "pt_crusaders"),
        (neg|ge, ":var_0", 1),
        (assign, "$crusader_faction", -5),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusade_start", 0),
        (assign, "$crusade_target", 0),
        (assign, "$crusade_target_faction", 0),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusader_state", -1),
        (display_message, "@Crusaders have been defeated!"),
    (else_try),
        (assign, ":var_1", 0),
        (try_for_range, ":var_2", "p_town_1_1", "p_village_1_1"),
            (store_faction_of_party, ":var_3", ":var_2"),
            (eq, ":var_3", "fac_crusade"),
            (try_begin),
                (eq, ":var_2", "p_town_21_1"),
                (call_script, "script_give_center_to_faction_aux", "p_town_21_1", "fac_papacy"),
                (faction_set_slot, "fac_papacy", slot_faction_state, 0),
                (faction_set_slot, "fac_papacy", slot_faction_leader, "trp_pope"),
                (call_script, "script_give_center_to_lord", "p_town_21_1", "trp_pope", 1),
                (party_set_slot, "p_town_21_1", 255, 0),
                (assign, ":var_1", 1),
            (else_try),
                (eq, ":var_2", "p_town_25_5"),
                (call_script, "script_give_center_to_faction_aux", "p_town_25_5", "fac_kingdom_23"),
                (faction_set_slot, "fac_kingdom_23", slot_faction_state, 0),
                (faction_set_slot, "fac_kingdom_23", slot_faction_leader, "trp_kingdom_23_lord"),
                (call_script, "script_give_center_to_lord", "p_town_25_5", "trp_kingdom_23_lord", 1),
                (party_set_slot, "p_town_25_5", 255, 0),
                (assign, ":var_1", 1),
            (else_try),
                (call_script, "script_give_center_to_faction_aux", ":var_2", "$crusader_faction"),
                (try_begin),
                    (eq, "$players_kingdom", "$crusader_faction"),
                    (call_script, "script_give_center_to_lord", ":var_2", "trp_player", 1),
                (else_try),
                    (call_script, "script_cf_get_random_lord_except_king_with_faction", "$crusader_faction"),
                    (gt, reg0, -1),
                    (call_script, "script_give_center_to_lord", ":var_2", reg0, 1),
                (try_end),
                (assign, ":var_1", 1),
            (try_end),
        (try_end),
        (eq, ":var_1", 1),
        (party_leave_cur_battle, "$crusader_party_id"),
        (remove_party, "$crusader_party_id"),
        (assign, "$crusader_faction", -5),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusade_start", 0),
        (assign, "$crusade_target", 0),
        (assign, "$crusade_target_faction", 0),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusader_state", -1),
        (display_message, "@Crusade ended succesfully!"),
    (else_try),
        (neg|eq, "$crusader_party_id", -1),
        (store_faction_of_party, ":var_3", "$crusade_target"),
        (neg|eq, ":var_3", "$crusade_target_faction"),
        (display_message, "@Crusaders disperce, because someone else conquered the center"),
        (party_leave_cur_battle, "$crusader_party_id"),
        (remove_party, "$crusader_party_id"),
        (assign, "$crusader_faction", -5),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusade_start", 0),
        (assign, "$crusade_target", 0),
        (assign, "$crusade_target_faction", 0),
        (assign, "$crusader_party_id", -1),
        (assign, "$crusader_state", -1),
    (else_try),
        (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
]),

(24.000000, 0.000000, 0.000000,
[
    (eq, "$crusader_state", -1),
    (store_random_in_range, reg0, 0, 100),
    (eq, reg0, 0),
],
[
    (try_for_range, ":var_0", 0, 40),
        (troop_set_slot, "trp_temp_lord", ":var_0", -1),
    (try_end),
    (assign, reg0, 0),
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neg|eq, ":var_0", "fac_player_supporters_faction"),
        (faction_slot_eq, ":var_0", slot_faction_state, 0),
        (faction_slot_eq, ":var_0", 102, 0),
        (troop_set_slot, "trp_temp_lord", reg0, ":var_0"),
        (val_add, reg0, 1),
    (try_end),
    (gt, reg0, 0),
    (store_random_in_range, ":var_1", 0, reg0),
    (troop_get_slot, ":var_0", "trp_temp_lord", ":var_1"),
    (assign, "$crusader_state", 0),
    (assign, "$crusader_faction", ":var_0"),
    (try_for_range, ":var_0", 0, 40),
        (troop_set_slot, "trp_temp_lord", ":var_0", -1),
    (try_end),
    (assign, reg0, 0),
    (try_for_range, ":var_0", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var_0", slot_faction_state, 0),
        (neg|faction_slot_eq, ":var_0", 102, 0),
        (neg|faction_slot_eq, ":var_0", 102, 1),
        (troop_set_slot, "trp_temp_lord", reg0, ":var_0"),
        (val_add, reg0, 1),
    (try_end),
    (gt, reg0, 0),
    (store_random_in_range, ":var_1", 0, reg0),
    (troop_get_slot, ":var_0", "trp_temp_lord", ":var_1"),
    (assign, "$crusade_target_faction", ":var_0"),
]),

(1.000000, 0.000000, 0.000000,
[
    (eq, 0, 1),
    (eq, "$g_camp_mode", 1),
    (is_currently_night),
],
[
]),

(1.000000, 0.000000, 0.000000,
[
    (store_num_parties_of_template, ":var_0", "pt_merc_party"),
    (ge, ":var_0", 1),
],
[
    (try_for_parties, ":var_0"),
        (party_get_template_id, ":var_1", ":var_0"),
        (eq, ":var_1", "pt_merc_party"),
        (party_set_faction, ":var_0", "$players_kingdom"),
        (party_get_slot, ":var_2", ":var_0", slot_party_ai_state),
        (party_get_slot, ":var_3", ":var_0", slot_party_ai_object),
        (try_begin),
            (eq, ":var_2", 2),
            (store_distance_to_party_from_party, ":var_4", ":var_0", ":var_3"),
            (try_begin),
                (gt, ":var_4", 10),
                (party_set_ai_behavior, ":var_0", 6),
                (party_get_position, pos5, ":var_3"),
                (party_set_ai_target_position, ":var_0", pos5),
            (else_try),
                (party_set_ai_behavior, ":var_0", 2),
                (party_set_ai_object, ":var_0", ":var_3"),
                (party_set_ai_patrol_radius, ":var_0", 5),
            (try_end),
        (else_try),
            (eq, ":var_3", "p_main_party"),
            (party_set_ai_behavior, ":var_0", 10),
            (party_set_ai_object, ":var_0", "p_main_party"),
        (try_end),
        (store_party_size_wo_prisoners, ":var_5", ":var_0"),
        (try_begin),
            (neg|gt, ":var_5", 10),
            (remove_party, ":var_0"),
        (try_end),
    (try_end),
]),

(168.000000, 0.000000, 0.000000,
[
    (store_num_parties_of_template, ":var_0", "pt_merc_party"),
    (ge, ":var_0", 1),
],
[
    (assign, ":var_0", -1),
    (assign, ":var_1", 0),
    (try_for_parties, ":var_2"),
        (party_get_template_id, ":var_3", ":var_2"),
        (eq, ":var_3", "pt_merc_party"),
        (party_get_num_companion_stacks, ":var_4", ":var_2"),
        (try_for_range, ":var_5", 0, ":var_4"),
            (party_stack_get_troop_id, ":var_6", ":var_2", ":var_5"),
            (party_stack_get_size, ":var_7", ":var_2", ":var_5"),
            (call_script, "script_game_get_troop_wage", ":var_6", 0),
            (val_mul, reg0, ":var_7"),
            (val_add, ":var_1", reg0),
        (try_end),
        (assign, ":var_0", ":var_2"),
    (try_end),
    (store_troop_gold, ":var_8", "trp_player"),
    (assign, ":var_9", 0),
    (try_begin),
        (neg|ge, ":var_8", ":var_1"),
        (assign, ":var_9", 1),
        (assign, ":var_1", ":var_8"),
        (display_message, "@you do not have enough gold to pay your forces!"),
    (try_end),
    (try_begin),
        (eq, ":var_9", 1),
        (neg|eq, ":var_0", -1),
        (store_random_in_range, ":var_10", 0, 100),
        (neg|ge, ":var_10", 30),
        (set_spawn_radius, 1),
        (spawn_around_party, ":var_0", "pt_deserters"),
        (assign, ":var_11", reg0),
        (party_clear, ":var_11"),
        (party_get_num_companion_stacks, ":var_4", ":var_2"),
        (try_for_range, ":var_5", 0, ":var_4"),
            (party_stack_get_troop_id, ":var_6", ":var_0", ":var_5"),
            (party_stack_get_size, ":var_7", ":var_0", ":var_5"),
            (party_add_members, ":var_11", ":var_6", ":var_7"),
        (try_end),
        (remove_party, ":var_0"),
        (party_set_ai_behavior, ":var_11", 4),
        (party_set_ai_object, ":var_11", "p_main_party"),
        (display_message, "@One of your armies have deserted you!"),
    (try_end),
    (troop_remove_gold, "trp_player", ":var_1"),
]),

(168.000000, 0.000000, 0.000000,
[
],
[
    (try_for_range, ":var_0", "p_town_1_1", "p_salt_mine"),
        (party_get_slot, ":var_1", ":var_0", 298),
        (this_or_next|eq, ":var_1", 0),
        (neg|party_is_active, ":var_1"),
        (party_set_slot, ":var_0", 298, -1),
        (store_faction_of_party, ":var_2", ":var_0"),
        (this_or_next|eq, ":var_2", "fac_kingdom_3"),
        (eq, ":var_2", "fac_kingdom_27"),
        (set_spawn_radius, 5),
        (spawn_around_party, ":var_0", "pt_mongolian_camp"),
        (assign, ":var_3", reg0),
        (party_set_ai_behavior, ":var_3", 2),
        (party_set_ai_object, ":var_3", ":var_0"),
        (party_set_slot, ":var_3", slot_party_ai_object, ":var_0"),
        (party_set_ai_patrol_radius, ":var_3", 10),
        (party_set_slot, ":var_3", 299, ":var_0"),
        (party_set_slot, ":var_0", 298, ":var_3"),
        (party_set_faction, ":var_3", ":var_2"),
        (party_set_slot, ":var_3", slot_town_center, "scn_village_mongol"),
        (party_set_slot, ":var_3", slot_center_volunteer_troop_amount, 1),
        (party_set_slot, ":var_3", slot_center_culture, "fac_culture_mongol"),
        (party_set_slot, ":var_3", 301, 1),
        (party_set_slot, ":var_3", slot_town_prosperity, 50),
        (party_set_slot, ":var_3", slot_party_type, 31),
        (party_set_icon, ":var_3", "icon_camp"),
    (try_end),
    (try_begin),
        (assign, ":var_0", "p_town_3_1"),
        (party_get_slot, ":var_1", ":var_0", 298),
        (neg|gt, ":var_1", 0),
        (store_faction_of_party, ":var_2", ":var_0"),
        (set_spawn_radius, 5),
        (spawn_around_party, ":var_0", "pt_mongolian_camp"),
        (assign, ":var_3", reg0),
        (party_set_ai_behavior, ":var_3", 2),
        (party_set_ai_object, ":var_3", ":var_0"),
        (party_set_slot, ":var_3", slot_party_ai_object, ":var_0"),
        (party_set_ai_patrol_radius, ":var_3", 10),
        (party_set_slot, ":var_3", 299, ":var_0"),
        (party_set_slot, ":var_0", 298, ":var_3"),
        (party_set_faction, ":var_3", ":var_2"),
        (party_set_slot, ":var_3", slot_town_center, "scn_village_mongol"),
        (party_set_slot, ":var_3", slot_center_volunteer_troop_amount, 1),
        (party_set_slot, ":var_3", slot_center_culture, "fac_culture_mongol"),
        (party_set_slot, ":var_3", 301, 1),
        (party_set_slot, ":var_3", slot_town_prosperity, 50),
        (party_set_slot, ":var_3", slot_party_type, 31),
        (party_set_icon, ":var_3", "icon_camp"),
    (try_end),
]),

(48.000000, 0.000000, 0.000000,
[
    (store_num_parties_of_template, ":var_0", "pt_mongolian_camp"),
    (gt, ":var_0", 0),
],
[
    (try_for_parties, ":var_0"),
        (party_get_template_id, ":var_1", ":var_0"),
        (eq, ":var_1", "pt_mongolian_camp"),
        (party_is_active, ":var_0"),
        (party_get_slot, ":var_2", ":var_0", 301),
        (try_begin),
            (eq, ":var_2", 1),
            (store_random_in_range, ":var_3", 0, 100),
            (neg|gt, ":var_3", 50),
            (party_set_slot, ":var_0", 301, 0),
            (party_set_icon, ":var_0", "icon_khergit"),
            (party_get_slot, ":var_4", ":var_0", 299),
            (party_set_ai_behavior, ":var_0", 2),
            (party_set_ai_object, ":var_0", ":var_4"),
            (party_set_slot, ":var_0", slot_party_ai_object, ":var_4"),
            (party_set_ai_patrol_radius, ":var_0", 10),
        (else_try),
            (store_faction_of_party, ":var_5", ":var_0"),
            (party_get_slot, ":var_4", ":var_0", 299),
            (store_faction_of_party, ":var_6", ":var_4"),
            (eq, ":var_6", ":var_5"),
            (party_set_slot, ":var_0", 301, 1),
            (party_set_icon, ":var_0", "icon_camp"),
        (try_end),
        (try_begin),
            (store_party_size_wo_prisoners, ":var_7", ":var_0"),
            (neg|gt, ":var_7", 100),
            (store_random_in_range, ":var_3", 1, 101),
            (try_begin),
                (neg|gt, ":var_3", 25),
                (assign, ":var_8", "pt_kingdom_mongol_reinforcements_c"),
            (else_try),
                (ge, ":var_3", 75),
                (assign, ":var_8", "pt_kingdom_mongol_reinforcements_b"),
            (else_try),
                (assign, ":var_8", "pt_kingdom_mongol_reinforcements_a"),
            (try_end),
            (party_add_template, ":var_0", ":var_8"),
            (party_get_slot, ":var_9", ":var_0", slot_center_volunteer_troop_amount),
            (neg|ge, ":var_9", 6),
            (val_add, ":var_9", 1),
            (party_set_slot, ":var_0", slot_center_volunteer_troop_amount, ":var_9"),
        (try_end),
    (try_end),
]),


]